{"version":3,"file":"Executor.js","sources":["../../../../src/ol/render/canvas/Executor.js"],"sourcesContent":["/**\r\n * @module ol/render/canvas/Executor\r\n */\r\nimport {getUid} from '../../util.js';\r\nimport {equals, reverseSubArray} from '../../array.js';\r\nimport {buffer, clone, createEmpty, createOrUpdate,\r\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\r\nimport {lineStringLength} from '../../geom/flat/length.js';\r\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport {drawImage, resetTransform, defaultPadding, defaultTextBaseline} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {TEXT_ALIGN} from '../replay.js';\r\nimport {\r\n  create as createTransform,\r\n  compose as composeTransform,\r\n  apply as applyTransform,\r\n  setFromArray as transformSetFromArray\r\n} from '../../transform.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths} from '../canvas.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\r\n */\r\n\r\n/**\r\n * @type {import(\"../../extent.js\").Extent}\r\n */\r\nconst tmpExtent = createEmpty();\r\n\r\n\r\n/**\r\n * @type {!import(\"../../transform.js\").Transform}\r\n */\r\nconst tmpTransform = createTransform();\r\n\r\n\r\nclass CanvasExecutor {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The replay can have overlapping geometries.\r\n   * @param {?} declutterTree Declutter tree.\r\n   * @param {SerializableInstructions} instructions The serializable instructions\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, instructions) {\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.declutterTree = declutterTree;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps = overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxLineWidth = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.alignFill_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction1_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction2_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.bufferedMaxExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = instructions.instructions;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = instructions.coordinates;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n     */\r\n    this.coordinateCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../../transform.js\").Transform}\r\n     */\r\n    this.renderedTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../canvas.js\").FillStrokeState}\r\n     */\r\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\r\n     */\r\n    this.fillStates = instructions.fillStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\r\n     */\r\n    this.strokeStates = instructions.strokeStates || {};\r\n\r\n    /**\r\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\r\n     */\r\n    this.textStates = instructions.textStates || {};\r\n\r\n    // Adaptations\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Object<string, number>>}\r\n     */\r\n    this.widths_ = {};\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} text Text.\r\n   * @param {string} textKey Text style key.\r\n   * @param {string} fillKey Fill style key.\r\n   * @param {string} strokeKey Stroke style key.\r\n   * @return {HTMLCanvasElement} Image.\r\n   */\r\n  getTextImage(text, textKey, fillKey, strokeKey) {\r\n    let label;\r\n    const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\r\n\r\n    if (!labelCache.containsKey(key)) {\r\n      const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\r\n      const fillState = fillKey ? this.fillStates[fillKey] : null;\r\n      const textState = this.textStates[textKey];\r\n      const pixelRatio = this.pixelRatio;\r\n      const scale = textState.scale * pixelRatio;\r\n      const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n      const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n      const lines = text.split('\\n');\r\n      const numLines = lines.length;\r\n      const widths = [];\r\n      const width = measureTextWidths(textState.font, lines, widths);\r\n      const lineHeight = measureTextHeight(textState.font);\r\n      const height = lineHeight * numLines;\r\n      const renderWidth = (width + strokeWidth);\r\n      const context = createCanvasContext2D(\r\n        Math.ceil(renderWidth * scale),\r\n        Math.ceil((height + strokeWidth) * scale));\r\n      label = context.canvas;\r\n      labelCache.set(key, label);\r\n      if (scale != 1) {\r\n        context.scale(scale, scale);\r\n      }\r\n      context.font = textState.font;\r\n      if (strokeKey) {\r\n        context.strokeStyle = strokeState.strokeStyle;\r\n        context.lineWidth = strokeWidth;\r\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\r\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\r\n        context.miterLimit = strokeState.miterLimit;\r\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\r\n          context.setLineDash(strokeState.lineDash);\r\n          context.lineDashOffset = strokeState.lineDashOffset;\r\n        }\r\n      }\r\n      if (fillKey) {\r\n        context.fillStyle = fillState.fillStyle;\r\n      }\r\n      context.textBaseline = 'middle';\r\n      context.textAlign = 'center';\r\n      const leftRight = (0.5 - align);\r\n      const x = align * label.width / scale + leftRight * strokeWidth;\r\n      let i;\r\n      if (strokeKey) {\r\n        for (i = 0; i < numLines; ++i) {\r\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n        }\r\n      }\r\n      if (fillKey) {\r\n        for (i = 0; i < numLines; ++i) {\r\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\r\n        }\r\n      }\r\n    }\r\n    return labelCache.get(key);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\r\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\r\n    context.beginPath();\r\n    context.moveTo.apply(context, p1);\r\n    context.lineTo.apply(context, p2);\r\n    context.lineTo.apply(context, p3);\r\n    context.lineTo.apply(context, p4);\r\n    context.lineTo.apply(context, p1);\r\n    if (fillInstruction) {\r\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\r\n      this.fill_(context);\r\n    }\r\n    if (strokeInstruction) {\r\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\r\n   * @param {number} anchorX Anchor X.\r\n   * @param {number} anchorY Anchor Y.\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   * @param {number} height Height.\r\n   * @param {number} opacity Opacity.\r\n   * @param {number} originX Origin X.\r\n   * @param {number} originY Origin Y.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} scale Scale.\r\n   * @param {boolean} snapToPixel Snap to pixel.\r\n   * @param {number} width Width.\r\n   * @param {Array<number>} padding Padding.\r\n   * @param {Array<*>} fillInstruction Fill instruction.\r\n   * @param {Array<*>} strokeInstruction Stroke instruction.\r\n   */\r\n  replayImage_(\r\n    context,\r\n    x,\r\n    y,\r\n    image,\r\n    anchorX,\r\n    anchorY,\r\n    declutterGroup,\r\n    height,\r\n    opacity,\r\n    originX,\r\n    originY,\r\n    rotation,\r\n    scale,\r\n    snapToPixel,\r\n    width,\r\n    padding,\r\n    fillInstruction,\r\n    strokeInstruction\r\n  ) {\r\n    const fillStroke = fillInstruction || strokeInstruction;\r\n    anchorX *= scale;\r\n    anchorY *= scale;\r\n    x -= anchorX;\r\n    y -= anchorY;\r\n\r\n    const w = (width + originX > image.width) ? image.width - originX : width;\r\n    const h = (height + originY > image.height) ? image.height - originY : height;\r\n    const boxW = padding[3] + w * scale + padding[1];\r\n    const boxH = padding[0] + h * scale + padding[2];\r\n    const boxX = x - padding[3];\r\n    const boxY = y - padding[0];\r\n\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    let p1;\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    let p2;\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    let p3;\r\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\r\n    let p4;\r\n    if (fillStroke || rotation !== 0) {\r\n      p1 = [boxX, boxY];\r\n      p2 = [boxX + boxW, boxY];\r\n      p3 = [boxX + boxW, boxY + boxH];\r\n      p4 = [boxX, boxY + boxH];\r\n    }\r\n\r\n    let transform = null;\r\n    if (rotation !== 0) {\r\n      const centerX = x + anchorX;\r\n      const centerY = y + anchorY;\r\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\r\n\r\n      createOrUpdateEmpty(tmpExtent);\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\r\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\r\n    } else {\r\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\r\n    }\r\n    const canvas = context.canvas;\r\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\r\n    const intersects =\r\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\r\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\r\n\r\n    if (snapToPixel) {\r\n      x = Math.round(x);\r\n      y = Math.round(y);\r\n    }\r\n\r\n    if (declutterGroup) {\r\n      if (!intersects && declutterGroup[4] == 1) {\r\n        return;\r\n      }\r\n      extend(declutterGroup, tmpExtent);\r\n      const declutterArgs = intersects ?\r\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\r\n        null;\r\n      if (declutterArgs && fillStroke) {\r\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\r\n      }\r\n      declutterGroup.push(declutterArgs);\r\n    } else if (intersects) {\r\n      if (fillStroke) {\r\n        this.replayTextBackground_(context, p1, p2, p3, p4,\r\n          /** @type {Array<*>} */ (fillInstruction),\r\n          /** @type {Array<*>} */ (strokeInstruction));\r\n      }\r\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<number>} dashArray Dash array.\r\n   * @return {Array<number>} Dash array with pixel ratio applied\r\n   */\r\n  applyPixelRatio(dashArray) {\r\n    const pixelRatio = this.pixelRatio;\r\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\r\n      return dash * pixelRatio;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  fill_(context) {\r\n    if (this.alignFill_) {\r\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\r\n      const repeatSize = 512 * this.pixelRatio;\r\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\r\n      context.rotate(this.viewRotation_);\r\n    }\r\n    context.fill();\r\n    if (this.alignFill_) {\r\n      context.setTransform.apply(context, resetTransform);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {Array<*>} instruction Instruction.\r\n   */\r\n  setStrokeStyle_(context, instruction) {\r\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n    context.lineWidth = /** @type {number} */ (instruction[2]);\r\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n    context.miterLimit = /** @type {number} */ (instruction[5]);\r\n    if (CANVAS_LINE_DASH) {\r\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  renderDeclutter_(declutterGroup, feature) {\r\n    if (declutterGroup && declutterGroup.length > 5) {\r\n      const groupCount = declutterGroup[4];\r\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\r\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\r\n        const box = {\r\n          minX: /** @type {number} */ (declutterGroup[0]),\r\n          minY: /** @type {number} */ (declutterGroup[1]),\r\n          maxX: /** @type {number} */ (declutterGroup[2]),\r\n          maxY: /** @type {number} */ (declutterGroup[3]),\r\n          value: feature\r\n        };\r\n        if (!this.declutterTree.collides(box)) {\r\n          this.declutterTree.insert(box);\r\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\r\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\r\n            if (declutterData) {\r\n              if (declutterData.length > 11) {\r\n                this.replayTextBackground_(declutterData[0],\r\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\r\n                  declutterData[11], declutterData[12]);\r\n              }\r\n              drawImage.apply(undefined, declutterData);\r\n            }\r\n          }\r\n        }\r\n        declutterGroup.length = 5;\r\n        createOrUpdateEmpty(declutterGroup);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} text The text to draw.\r\n   * @param {string} textKey The key of the text state.\r\n   * @param {string} strokeKey The key for the stroke state.\r\n   * @param {string} fillKey The key for the fill state.\r\n   * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\r\n   */\r\n  drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey) {\r\n    const textState = this.textStates[textKey];\r\n\r\n    const label = this.getTextImage(text, textKey, fillKey, strokeKey);\r\n\r\n    const strokeState = this.strokeStates[strokeKey];\r\n    const pixelRatio = this.pixelRatio;\r\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\r\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\r\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\r\n\r\n    const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\r\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\r\n\r\n    return {\r\n      label: label,\r\n      anchorX: anchorX,\r\n      anchorY: anchorY\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {Array<*>} instructions Instructions array.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n   *     extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  execute_(\r\n    context,\r\n    transform,\r\n    skippedFeaturesHash,\r\n    instructions,\r\n    snapToPixel,\r\n    featureCallback,\r\n    opt_hitExtent\r\n  ) {\r\n    /** @type {Array<number>} */\r\n    let pixelCoordinates;\r\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\r\n      pixelCoordinates = this.pixelCoordinates_;\r\n    } else {\r\n      if (!this.pixelCoordinates_) {\r\n        this.pixelCoordinates_ = [];\r\n      }\r\n      pixelCoordinates = transform2D(\r\n        this.coordinates, 0, this.coordinates.length, 2,\r\n        transform, this.pixelCoordinates_);\r\n      transformSetFromArray(this.renderedTransform_, transform);\r\n    }\r\n    const skipFeatures = !isEmpty(skippedFeaturesHash);\r\n    let i = 0; // instruction index\r\n    const ii = instructions.length; // end of instructions\r\n    let d = 0; // data index\r\n    let dd; // end of per-instruction data\r\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\r\n    let strokeKey, fillKey;\r\n    let pendingFill = 0;\r\n    let pendingStroke = 0;\r\n    let lastFillInstruction = null;\r\n    let lastStrokeInstruction = null;\r\n    const coordinateCache = this.coordinateCache_;\r\n    const viewRotation = this.viewRotation_;\r\n\r\n    const state = /** @type {import(\"../../render.js\").State} */ ({\r\n      context: context,\r\n      pixelRatio: this.pixelRatio,\r\n      resolution: this.resolution,\r\n      rotation: viewRotation\r\n    });\r\n\r\n    // When the batch size gets too big, performance decreases. 200 is a good\r\n    // balance between batch size and number of fill/stroke instructions.\r\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\r\n    let /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\r\n    let x, y;\r\n    while (i < ii) {\r\n      const instruction = instructions[i];\r\n      const type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      switch (type) {\r\n        case CanvasInstruction.BEGIN_GEOMETRY:\r\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\r\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\r\n            i = /** @type {number} */ (instruction[2]);\r\n          } else if (opt_hitExtent !== undefined && !intersects(\r\n            opt_hitExtent, feature.getGeometry().getExtent())) {\r\n            i = /** @type {number} */ (instruction[2]) + 1;\r\n          } else {\r\n            ++i;\r\n          }\r\n          break;\r\n        case CanvasInstruction.BEGIN_PATH:\r\n          if (pendingFill > batchSize) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n          }\r\n          if (pendingStroke > batchSize) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          if (!pendingFill && !pendingStroke) {\r\n            context.beginPath();\r\n            prevX = prevY = NaN;\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CIRCLE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          const x1 = pixelCoordinates[d];\r\n          const y1 = pixelCoordinates[d + 1];\r\n          const x2 = pixelCoordinates[d + 2];\r\n          const y2 = pixelCoordinates[d + 3];\r\n          const dx = x2 - x1;\r\n          const dy = y2 - y1;\r\n          const r = Math.sqrt(dx * dx + dy * dy);\r\n          context.moveTo(x1 + r, y1);\r\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CLOSE_PATH:\r\n          context.closePath();\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.CUSTOM:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = instruction[2];\r\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\r\n          const renderer = instruction[4];\r\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\r\n          state.geometry = geometry;\r\n          state.feature = feature;\r\n          if (!(i in coordinateCache)) {\r\n            coordinateCache[i] = [];\r\n          }\r\n          const coords = coordinateCache[i];\r\n          if (fn) {\r\n            fn(pixelCoordinates, d, dd, 2, coords);\r\n          } else {\r\n            coords[0] = pixelCoordinates[d];\r\n            coords[1] = pixelCoordinates[d + 1];\r\n            coords.length = 2;\r\n          }\r\n          renderer(coords, state);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_IMAGE:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\r\n\r\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\r\n          anchorX = /** @type {number} */ (instruction[4]);\r\n          anchorY = /** @type {number} */ (instruction[5]);\r\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\r\n          let height = /** @type {number} */ (instruction[7]);\r\n          const opacity = /** @type {number} */ (instruction[8]);\r\n          const originX = /** @type {number} */ (instruction[9]);\r\n          const originY = /** @type {number} */ (instruction[10]);\r\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\r\n          let rotation = /** @type {number} */ (instruction[12]);\r\n          const scale = /** @type {number} */ (instruction[13]);\r\n          let width = /** @type {number} */ (instruction[14]);\r\n\r\n\r\n          if (!image && instruction.length >= 19) {\r\n            // create label images\r\n            text = /** @type {string} */ (instruction[18]);\r\n            textKey = /** @type {string} */ (instruction[19]);\r\n            strokeKey = /** @type {string} */ (instruction[20]);\r\n            fillKey = /** @type {string} */ (instruction[21]);\r\n            const labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\r\n            image = instruction[3] = labelWithAnchor.label;\r\n            const textOffsetX = /** @type {number} */ (instruction[22]);\r\n            anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\r\n            const textOffsetY = /** @type {number} */ (instruction[23]);\r\n            anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\r\n            height = instruction[7] = image.height;\r\n            width = instruction[14] = image.width;\r\n          }\r\n\r\n          let geometryWidths;\r\n          if (instruction.length > 24) {\r\n            geometryWidths = /** @type {number} */ (instruction[24]);\r\n          }\r\n\r\n          let padding, backgroundFill, backgroundStroke;\r\n          if (instruction.length > 16) {\r\n            padding = /** @type {Array<number>} */ (instruction[15]);\r\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\r\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\r\n          } else {\r\n            padding = defaultPadding;\r\n            backgroundFill = backgroundStroke = false;\r\n          }\r\n\r\n          if (rotateWithView) {\r\n            rotation += viewRotation;\r\n          }\r\n          let widthIndex = 0;\r\n          for (; d < dd; d += 2) {\r\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\r\n              continue;\r\n            }\r\n            this.replayImage_(context,\r\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\r\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\r\n              snapToPixel, width, padding,\r\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\r\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\r\n          }\r\n          this.renderDeclutter_(declutterGroup, feature);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.DRAW_CHARS:\r\n          const begin = /** @type {number} */ (instruction[1]);\r\n          const end = /** @type {number} */ (instruction[2]);\r\n          const baseline = /** @type {number} */ (instruction[3]);\r\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\r\n          const overflow = /** @type {number} */ (instruction[5]);\r\n          fillKey = /** @type {string} */ (instruction[6]);\r\n          const maxAngle = /** @type {number} */ (instruction[7]);\r\n          const measurePixelRatio = /** @type {number} */ (instruction[8]);\r\n          const offsetY = /** @type {number} */ (instruction[9]);\r\n          strokeKey = /** @type {string} */ (instruction[10]);\r\n          const strokeWidth = /** @type {number} */ (instruction[11]);\r\n          text = /** @type {string} */ (instruction[12]);\r\n          textKey = /** @type {string} */ (instruction[13]);\r\n          const pixelRatioScale = /** @type {number} */ (instruction[14]);\r\n\r\n          const textState = this.textStates[textKey];\r\n          const font = textState.font;\r\n          const textScale = textState.scale * measurePixelRatio;\r\n\r\n          let cachedWidths;\r\n          if (font in this.widths_) {\r\n            cachedWidths = this.widths_[font];\r\n          } else {\r\n            cachedWidths = this.widths_[font] = {};\r\n          }\r\n\r\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\r\n          const textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\r\n          if (overflow || textLength <= pathLength) {\r\n            const textAlign = this.textStates[textKey].textAlign;\r\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\r\n            const parts = drawTextOnPath(\r\n              pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\r\n            if (parts) {\r\n              let c, cc, chars, label, part;\r\n              if (strokeKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.getTextImage(chars, textKey, '', strokeKey);\r\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\r\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\r\n                  this.replayImage_(context,\r\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\r\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\r\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\r\n                    defaultPadding, null, null);\r\n                }\r\n              }\r\n              if (fillKey) {\r\n                for (c = 0, cc = parts.length; c < cc; ++c) {\r\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\r\n                  chars = /** @type {string} */ (part[4]);\r\n                  label = this.getTextImage(chars, textKey, fillKey, '');\r\n                  anchorX = /** @type {number} */ (part[2]);\r\n                  anchorY = baseline * label.height - offsetY;\r\n                  this.replayImage_(context,\r\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\r\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\r\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\r\n                    defaultPadding, null, null);\r\n                }\r\n              }\r\n            }\r\n          }\r\n          this.renderDeclutter_(declutterGroup, feature);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.END_GEOMETRY:\r\n          if (featureCallback !== undefined) {\r\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\r\n            const result = featureCallback(feature);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.FILL:\r\n          if (batchSize) {\r\n            pendingFill++;\r\n          } else {\r\n            this.fill_(context);\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.MOVE_TO_LINE_TO:\r\n          d = /** @type {number} */ (instruction[1]);\r\n          dd = /** @type {number} */ (instruction[2]);\r\n          x = pixelCoordinates[d];\r\n          y = pixelCoordinates[d + 1];\r\n          roundX = (x + 0.5) | 0;\r\n          roundY = (y + 0.5) | 0;\r\n          if (roundX !== prevX || roundY !== prevY) {\r\n            context.moveTo(x, y);\r\n            prevX = roundX;\r\n            prevY = roundY;\r\n          }\r\n          for (d += 2; d < dd; d += 2) {\r\n            x = pixelCoordinates[d];\r\n            y = pixelCoordinates[d + 1];\r\n            roundX = (x + 0.5) | 0;\r\n            roundY = (y + 0.5) | 0;\r\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\r\n              context.lineTo(x, y);\r\n              prevX = roundX;\r\n              prevY = roundY;\r\n            }\r\n          }\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_FILL_STYLE:\r\n          lastFillInstruction = instruction;\r\n          this.alignFill_ = instruction[2];\r\n\r\n          if (pendingFill) {\r\n            this.fill_(context);\r\n            pendingFill = 0;\r\n            if (pendingStroke) {\r\n              context.stroke();\r\n              pendingStroke = 0;\r\n            }\r\n          }\r\n\r\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.SET_STROKE_STYLE:\r\n          lastStrokeInstruction = instruction;\r\n          if (pendingStroke) {\r\n            context.stroke();\r\n            pendingStroke = 0;\r\n          }\r\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\r\n          ++i;\r\n          break;\r\n        case CanvasInstruction.STROKE:\r\n          if (batchSize) {\r\n            pendingStroke++;\r\n          } else {\r\n            context.stroke();\r\n          }\r\n          ++i;\r\n          break;\r\n        default:\r\n          ++i; // consume the instruction anyway, to avoid an infinite loop\r\n          break;\r\n      }\r\n    }\r\n    if (pendingFill) {\r\n      this.fill_(context);\r\n    }\r\n    if (pendingStroke) {\r\n      context.stroke();\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n   */\r\n  execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\r\n    this.viewRotation_ = viewRotation;\r\n    this.execute_(context, transform,\r\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\r\n   *     to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\r\n   *     Feature callback.\r\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\r\n   *     extent.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  executeHitDetection(\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    skippedFeaturesHash,\r\n    opt_featureCallback,\r\n    opt_hitExtent\r\n  ) {\r\n    this.viewRotation_ = viewRotation;\r\n    return this.execute_(context, transform, skippedFeaturesHash,\r\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\r\n  }\r\n\r\n  /**\r\n   * Reverse the hit detection instructions.\r\n   */\r\n  reverseHitDetectionInstructions() {\r\n    const hitDetectionInstructions = this.hitDetectionInstructions;\r\n    // step 1 - reverse array\r\n    hitDetectionInstructions.reverse();\r\n    // step 2 - reverse instructions within geometry blocks\r\n    let i;\r\n    const n = hitDetectionInstructions.length;\r\n    let instruction;\r\n    let type;\r\n    let begin = -1;\r\n    for (i = 0; i < n; ++i) {\r\n      instruction = hitDetectionInstructions[i];\r\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      if (type == CanvasInstruction.END_GEOMETRY) {\r\n        begin = i;\r\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n        instruction[2] = i;\r\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n        begin = -1;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @return {Array<*>} Fill instruction.\r\n   */\r\n  createFill(state, geometry) {\r\n    const fillStyle = state.fillStyle;\r\n    /** @type {Array<*>} */\r\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n    if (typeof fillStyle !== 'string') {\r\n      // Fill is a pattern or gradient - align it!\r\n      fillInstruction.push(true);\r\n    }\r\n    return fillInstruction;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Stroke instruction.\r\n   */\r\n  createStroke(state) {\r\n    return [\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\r\n      state.lineJoin, state.miterLimit,\r\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\r\n    ];\r\n  }\r\n\r\n\r\n  /**\r\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n   * provided to the constructor.  To account for symbolizers that may intersect\r\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n   * @protected\r\n   */\r\n  getBufferedMaxExtent() {\r\n    if (!this.bufferedMaxExtent_) {\r\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n      if (this.maxLineWidth > 0) {\r\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\r\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n      }\r\n    }\r\n    return this.bufferedMaxExtent_;\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasExecutor;\r\n"],"names":["const","let"],"mappings":"AAAA;;;AAGA,QAAQ,MAAM,OAAO,eAAe,CAAC;AACrC,QAAQ,MAAM,EAAE,eAAe,OAAO,gBAAgB,CAAC;AACvD,QAAQ,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,cAAc;EAChD,mBAAmB,EAAE,MAAM,EAAE,gBAAgB,EAAE,UAAU,OAAO,iBAAiB,CAAC;AACpF,QAAQ,gBAAgB,OAAO,2BAA2B,CAAC;AAC3D,QAAQ,cAAc,OAAO,6BAA6B,CAAC;AAC3D,QAAQ,WAAW,OAAO,8BAA8B,CAAC;AACzD,QAAQ,gBAAgB,OAAO,cAAc,CAAC;AAC9C,QAAQ,OAAO,OAAO,cAAc,CAAC;AACrC,QAAQ,SAAS,EAAE,cAAc,EAAE,cAAc,EAAE,mBAAmB,OAAO,cAAc,CAAC;AAC5F,OAAO,iBAAiB,MAAM,kBAAkB,CAAC;AACjD,QAAQ,UAAU,OAAO,cAAc,CAAC;AACxC;EACE,MAAM,IAAI,eAAe;EACzB,OAAO,IAAI,gBAAgB;EAC3B,KAAK,IAAI,cAAc;EACvB,YAAY,IAAI,qBAAqB;OAChC,oBAAoB,CAAC;AAC5B,QAAQ,qBAAqB,OAAO,cAAc,CAAC;AACnD,QAAQ,UAAU,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,iBAAiB,OAAO,cAAc,CAAC;;;;;;;;;;;;;;;;AAgB1HA,GAAK,CAAC,SAAS,GAAG,WAAW,EAAE,CAAC;;;;;;AAMhCA,GAAK,CAAC,YAAY,GAAG,eAAe,EAAE,CAAC;;;AAGvC,IAAM,cAAc,GAUlB,uBAAW,CAAC,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE;EACjG,AAAE;GACD,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;;EAErC,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;EAE7B,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;EAE7B,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;EAE3B,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;EAE/B,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;;EAExB,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;;EAE/B,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,UAAU,CAAC;;EAElB,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;;EAEzC,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;;EAEzC,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;;EAEjC,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,CAAC;;EAEhD,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,CAAC;;EAE9C,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;;EAE7B,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,kBAAkB,GAAG,eAAe,EAAE,CAAC;;EAE9C,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,wBAAwB,GAAG,YAAY,CAAC,wBAAwB,CAAC;;EAExE,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;;EAEhC,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,KAAK,yDAAyD,CAAC,EAAE,CAAC,CAAC;;EAE1E,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;;EAEzB,AAAE;GACD,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,CAAC;;EAElD,AAAE;GACD,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,YAAY,IAAI,EAAE,CAAC;;EAEtD,AAAE;GACD,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,IAAI,EAAE,CAAC;;EAElD,AAAE;;EAEF,AAAE;GACD,AAAE;GACF,AAAE;GACF,AAAE;EACH,AAAE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AACtB,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,qCAAY,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE;EAChD,AAAEC,GAAG,CAAC,KAAK,CAAC;EACZ,AAAED,GAAK,CAAC,GAAG,GAAG,SAAS,GAAG,OAAO,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;;EAErE,AAAE,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;IAClC,AAAEA,GAAK,CAAC,WAAW,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;IACtE,AAAEA,GAAK,CAAC,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;IAC9D,AAAEA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC7C,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACrC,AAAEA,GAAK,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC;IAC7C,AAAEA,GAAK,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,IAAI,gBAAgB,CAAC,CAAC;IACpE,AAAEA,GAAK,CAAC,WAAW,GAAG,SAAS,IAAI,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;;IAErF,AAAEA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACjC,AAAEA,GAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;IAChC,AAAEA,GAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IACpB,AAAEA,GAAK,CAAC,KAAK,GAAG,iBAAiB,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACjE,AAAEA,GAAK,CAAC,UAAU,GAAG,iBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvD,AAAEA,GAAK,CAAC,MAAM,GAAG,UAAU,GAAG,QAAQ,CAAC;IACvC,AAAEA,GAAK,CAAC,WAAW,GAAG,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC;IAC5C,AAAEA,GAAK,CAAC,OAAO,GAAG,qBAAqB;MACrC,AAAE,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;MAChC,AAAE,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,WAAW,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IAC/C,AAAE,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;IACzB,AAAE,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC7B,AAAE,IAAI,KAAK,IAAI,CAAC,EAAE;MAChB,AAAE,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAChC,AAAE,CAAC;IACH,AAAE,OAAO,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;IAChC,AAAE,IAAI,SAAS,EAAE;MACf,AAAE,OAAO,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;MAChD,AAAE,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC;MAClC,AAAE,OAAO,CAAC,OAAO,gCAAgC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;MACvE,AAAE,OAAO,CAAC,QAAQ,iCAAiC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;MAC1E,AAAE,OAAO,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;MAC9C,AAAE,IAAI,gBAAgB,IAAI,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE;QACrD,AAAE,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC5C,AAAE,OAAO,CAAC,cAAc,GAAG,WAAW,CAAC,cAAc,CAAC;MACxD,AAAE,CAAC;IACL,AAAE,CAAC;IACH,AAAE,IAAI,OAAO,EAAE;MACb,AAAE,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC;IAC5C,AAAE,CAAC;IACH,AAAE,OAAO,CAAC,YAAY,GAAG,QAAQ,CAAC;IAClC,AAAE,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC/B,AAAEA,GAAK,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;IAClC,AAAEA,GAAK,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,GAAG,WAAW,CAAC;IAClE,AAAEC,GAAG,CAAC,CAAC,CAAC;IACR,AAAE,IAAI,SAAS,EAAE;MACf,AAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;QAC/B,AAAE,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;MAC/G,AAAE,CAAC;IACL,AAAE,CAAC;IACH,AAAE,IAAI,OAAO,EAAE;MACb,AAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;QAC/B,AAAE,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;MAC7G,AAAE,CAAC;IACL,AAAE,CAAC;EACL,AAAE,CAAC;EACH,AAAE,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC/B,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,uDAAqB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,eAAe,EAAE,iBAAiB,EAAE;EACnF,AAAE,OAAO,CAAC,SAAS,EAAE,CAAC;EACtB,AAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;EACpC,AAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;EACpC,AAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;EACpC,AAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;EACpC,AAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;EACpC,AAAE,IAAI,eAAe,EAAE;IACrB,AAAE,IAAI,CAAC,UAAU,0BAA0B,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,AAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EACxB,AAAE,CAAC;EACH,AAAE,IAAI,iBAAiB,EAAE;IACvB,AAAE,IAAI,CAAC,eAAe,CAAC,OAAO,0BAA0B,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC7E,AAAE,OAAO,CAAC,MAAM,EAAE,CAAC;EACrB,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,qCAAY;EACZ,AAAE,OAAO;EACT,AAAE,CAAC;EACH,AAAE,CAAC;EACH,AAAE,KAAK;EACP,AAAE,OAAO;EACT,AAAE,OAAO;EACT,AAAE,cAAc;EAChB,AAAE,MAAM;EACR,AAAE,OAAO;EACT,AAAE,OAAO;EACT,AAAE,OAAO;EACT,AAAE,QAAQ;EACV,AAAE,KAAK;EACP,AAAE,WAAW;EACb,AAAE,KAAK;EACP,AAAE,OAAO;EACT,AAAE,eAAe;EACjB,AAAE,iBAAiB;AACrB,AAAE,EAAE;EACF,AAAED,GAAK,CAAC,UAAU,GAAG,eAAe,IAAI,iBAAiB,CAAC;EAC1D,AAAE,OAAO,IAAI,KAAK,CAAC;EACnB,AAAE,OAAO,IAAI,KAAK,CAAC;EACnB,AAAE,CAAC,IAAI,OAAO,CAAC;EACf,AAAE,CAAC,IAAI,OAAO,CAAC;;EAEf,AAAEA,GAAK,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;EAC5E,AAAEA,GAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAChF,AAAEA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EACnD,AAAEA,GAAK,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EACnD,AAAEA,GAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC9B,AAAEA,GAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE9B,AAAE;EACF,AAAEC,GAAG,CAAC,EAAE,CAAC;EACT,AAAE;EACF,AAAEA,GAAG,CAAC,EAAE,CAAC;EACT,AAAE;EACF,AAAEA,GAAG,CAAC,EAAE,CAAC;EACT,AAAE;EACF,AAAEA,GAAG,CAAC,EAAE,CAAC;EACT,AAAE,IAAI,UAAU,IAAI,QAAQ,KAAK,CAAC,EAAE;IAClC,AAAE,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpB,AAAE,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3B,AAAE,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IAClC,AAAE,EAAE,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;EAC7B,AAAE,CAAC;;EAEH,AAAEA,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC;EACvB,AAAE,IAAI,QAAQ,KAAK,CAAC,EAAE;IACpB,AAAED,GAAK,CAAC,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC;IAC9B,AAAEA,GAAK,CAAC,OAAO,GAAG,CAAC,GAAG,OAAO,CAAC;IAC9B,AAAE,SAAS,GAAG,gBAAgB,CAAC,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;;IAEnG,AAAE,mBAAmB,CAAC,SAAS,CAAC,CAAC;IACjC,AAAE,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IAChE,AAAE,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IAChE,AAAE,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IAChE,AAAE,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;EAClE,AAAE,CAAC,MAAM;IACP,AAAE,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,SAAS,CAAC,CAAC;EACpE,AAAE,CAAC;EACH,AAAEA,GAAK,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;EAChC,AAAEA,GAAK,CAAC,aAAa,GAAG,iBAAiB,GAAG,CAAC,iBAAiB,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACnF,AAAEA,GAAK,CAAC,UAAU;MACd,AAAE,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,IAAI,MAAM,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,IAAI,CAAC;MACnF,AAAE,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,IAAI,MAAM,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,IAAI,CAAC,CAAC;;EAEzF,AAAE,IAAI,WAAW,EAAE;IACjB,AAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB,AAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtB,AAAE,CAAC;;EAEH,AAAE,IAAI,cAAc,EAAE;IACpB,AAAE,IAAI,CAAC,UAAU,IAAI,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;MAC3C,AAAE,OAAO;IACX,AAAE,CAAC;IACH,AAAE,MAAM,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;IACpC,AAAEA,GAAK,CAAC,aAAa,GAAG,UAAU;MAChC,AAAE,CAAC,OAAO,EAAE,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACvG,AAAE,IAAI,CAAC;IACT,AAAE,IAAI,aAAa,IAAI,UAAU,EAAE;MACjC,AAAE,aAAa,CAAC,IAAI,CAAC,eAAe,EAAE,iBAAiB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAC3E,AAAE,CAAC;IACH,AAAE,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EACvC,AAAE,CAAC,MAAM,IAAI,UAAU,EAAE;IACvB,AAAE,IAAI,UAAU,EAAE;MAChB,AAAE,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAClD,AAAE,wBAAwB,CAAC,eAAe,CAAC;QAC3C,AAAE,wBAAwB,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACnD,AAAE,CAAC;IACH,AAAE,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;EACvF,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,2CAAe,CAAC,SAAS,EAAE;EAC3B,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;EACrC,AAAE,OAAO,UAAU,IAAI,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,IAAI,EAAE;IAClE,AAAE,OAAO,IAAI,GAAG,UAAU,CAAC;EAC7B,AAAE,CAAC,CAAC,CAAC;AACP,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,uBAAK,CAAC,OAAO,EAAE;EACf,AAAE,IAAI,IAAI,CAAC,UAAU,EAAE;IACrB,AAAEA,GAAK,CAAC,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,AAAEA,GAAK,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;IAC3C,AAAE,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC;IACpE,AAAE,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;EACvC,AAAE,CAAC;EACH,AAAE,OAAO,CAAC,IAAI,EAAE,CAAC;EACjB,AAAE,IAAI,IAAI,CAAC,UAAU,EAAE;IACrB,AAAE,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;EACxD,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,2CAAe,CAAC,OAAO,EAAE,WAAW,EAAE;EACtC,AAAE,OAAO,CAAC,WAAW,yDAAyD,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/F,AAAE,OAAO,CAAC,SAAS,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7D,AAAE,OAAO,CAAC,OAAO,gCAAgC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,AAAE,OAAO,CAAC,QAAQ,iCAAiC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EACpE,AAAE,OAAO,CAAC,UAAU,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,AAAE,IAAI,gBAAgB,EAAE;IACtB,AAAE,OAAO,CAAC,cAAc,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,AAAE,OAAO,CAAC,WAAW,8BAA8B,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvE,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,6CAAgB,CAAC,cAAc,EAAE,OAAO,EAAE;EAC1C,AAAE,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;IACjD,AAAEA,GAAK,CAAC,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;IACvC,AAAE,IAAI,UAAU,IAAI,CAAC,IAAI,UAAU,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;MAChE,AAAE;MACF,AAAEA,GAAK,CAAC,GAAG,GAAG;QACZ,AAAE,IAAI,wBAAwB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACjD,AAAE,IAAI,wBAAwB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACjD,AAAE,IAAI,wBAAwB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACjD,AAAE,IAAI,wBAAwB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACjD,AAAE,KAAK,EAAE,OAAO;MAClB,AAAE,CAAC,CAAC;MACJ,AAAE,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;QACvC,AAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,AAAE,KAAKC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;UACzD,AAAED,GAAK,CAAC,aAAa,wBAAwB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;UACjE,AAAE,IAAI,aAAa,EAAE;YACnB,AAAE,IAAI,aAAa,CAAC,MAAM,GAAG,EAAE,EAAE;cAC/B,AAAE,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC,CAAC;gBAC3C,AAAE,aAAa,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC;gBAC5E,AAAE,aAAa,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,AAAE,CAAC;YACH,AAAE,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;UAC9C,AAAE,CAAC;QACL,AAAE,CAAC;MACL,AAAE,CAAC;MACH,AAAE,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;MAC5B,AAAE,mBAAmB,CAAC,cAAc,CAAC,CAAC;IACxC,AAAE,CAAC;EACL,AAAE,CAAC;AACL,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,6EAAgC,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE;EACpE,AAAEA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;;EAE7C,AAAEA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;;EAErE,AAAEA,GAAK,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;EACnD,AAAEA,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;EACrC,AAAEA,GAAK,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,SAAS,IAAI,gBAAgB,CAAC,CAAC;EACpE,AAAEA,GAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,CAAC,YAAY,IAAI,mBAAmB,CAAC,CAAC;EAC7E,AAAEA,GAAK,CAAC,WAAW,GAAG,WAAW,IAAI,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;;EAEvF,AAAEA,GAAK,CAAC,OAAO,GAAG,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC;EACrF,AAAEA,GAAK,CAAC,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,WAAW,CAAC;;EAE5F,AAAE,OAAO;IACP,AAAE,KAAK,EAAE,KAAK;IACd,AAAE,OAAO,EAAE,OAAO;IAClB,AAAE,OAAO,EAAE,OAAO;EACpB,AAAE,CAAC,CAAC;AACN,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE,IAAI,AAAE;CACR,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE,IAAI,AAAE;CACR,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,6BAAQ;EACR,AAAE,OAAO;EACT,AAAE,SAAS;EACX,AAAE,mBAAmB;EACrB,AAAE,YAAY;EACd,AAAE,WAAW;EACb,AAAE,eAAe;EACjB,AAAE,aAAa;AACjB,AAAE,EAAE;EACF,AAAE;EACF,AAAEC,GAAG,CAAC,gBAAgB,CAAC;EACvB,AAAE,IAAI,IAAI,CAAC,iBAAiB,IAAI,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE;IAC1E,AAAE,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC;EAC9C,AAAE,CAAC,MAAM;IACP,AAAE,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;MAC7B,AAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,AAAE,CAAC;IACH,AAAE,gBAAgB,GAAG,WAAW;MAC9B,AAAE,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;MACjD,AAAE,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACvC,AAAE,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;EAC9D,AAAE,CAAC;EACH,AAAED,GAAK,CAAC,YAAY,GAAG,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;EACrD,AAAEC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACZ,AAAED,GAAK,CAAC,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC;EACjC,AAAEC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACZ,AAAEA,GAAG,CAAC,EAAE,CAAC;EACT,AAAEA,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,CAAC;EAC3F,AAAEA,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC;EACzB,AAAEA,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC;EACtB,AAAEA,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC;EACxB,AAAEA,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC;EACjC,AAAEA,GAAG,CAAC,qBAAqB,GAAG,IAAI,CAAC;EACnC,AAAED,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC;EAChD,AAAEA,GAAK,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;;EAE1C,AAAEA,GAAK,CAAC,KAAK,kDAAkD,CAAC;IAC9D,AAAE,OAAO,EAAE,OAAO;IAClB,AAAE,UAAU,EAAE,IAAI,CAAC,UAAU;IAC7B,AAAE,UAAU,EAAE,IAAI,CAAC,UAAU;IAC7B,AAAE,QAAQ,EAAE,YAAY;EAC1B,AAAE,CAAC,CAAC,CAAC;;EAEL,AAAE;EACF,AAAE;EACF,AAAEA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,IAAI,YAAY,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC;EACjF,AAAEC,GAAG,mFAAmF,OAAO,CAAC;EAChG,AAAEA,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACX,AAAE,OAAO,CAAC,GAAG,EAAE,EAAE;IACf,AAAED,GAAK,CAAC,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;IACtC,AAAEA,GAAK,CAAC,IAAI,oCAAoC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,AAAE,QAAQ,IAAI;MACZ,AAAE,KAAK,iBAAiB,CAAC,cAAc;QACrC,AAAE,OAAO,qFAAqF,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/G,AAAE,IAAI,CAAC,YAAY,IAAI,mBAAmB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;UACtF,AAAE,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,AAAE,CAAC,MAAM,IAAI,aAAa,KAAK,SAAS,IAAI,CAAC,UAAU;UACrD,AAAE,aAAa,EAAE,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE;UACrD,AAAE,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACnD,AAAE,CAAC,MAAM;UACP,AAAE,EAAE,CAAC,CAAC;QACR,AAAE,CAAC;QACH,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,UAAU;QACjC,AAAE,IAAI,WAAW,GAAG,SAAS,EAAE;UAC7B,AAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;UACtB,AAAE,WAAW,GAAG,CAAC,CAAC;QACpB,AAAE,CAAC;QACH,AAAE,IAAI,aAAa,GAAG,SAAS,EAAE;UAC/B,AAAE,OAAO,CAAC,MAAM,EAAE,CAAC;UACnB,AAAE,aAAa,GAAG,CAAC,CAAC;QACtB,AAAE,CAAC;QACH,AAAE,IAAI,CAAC,WAAW,IAAI,CAAC,aAAa,EAAE;UACpC,AAAE,OAAO,CAAC,SAAS,EAAE,CAAC;UACtB,AAAE,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;QACxB,AAAE,CAAC;QACH,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,MAAM;QAC7B,AAAE,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,AAAEA,GAAK,CAAC,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACjC,AAAEA,GAAK,CAAC,EAAE,GAAG,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,AAAEA,GAAK,CAAC,EAAE,GAAG,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,AAAEA,GAAK,CAAC,EAAE,GAAG,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACrC,AAAEA,GAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACrB,AAAEA,GAAK,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACrB,AAAEA,GAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACzC,AAAE,OAAO,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7B,AAAE,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/C,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,UAAU;QACjC,AAAE,OAAO,CAAC,SAAS,EAAE,CAAC;QACtB,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,MAAM;QAC7B,AAAE,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,AAAE,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QACtB,AAAEA,GAAK,CAAC,QAAQ,iEAAiE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAClG,AAAEA,GAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAClC,AAAEA,GAAK,CAAC,EAAE,GAAG,WAAW,CAAC,MAAM,IAAI,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;QAClE,AAAE,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5B,AAAE,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1B,AAAE,IAAI,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,EAAE;UAC7B,AAAE,eAAe,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAC5B,AAAE,CAAC;QACH,AAAEA,GAAK,CAAC,MAAM,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACpC,AAAE,IAAI,EAAE,EAAE;UACR,AAAE,EAAE,CAAC,gBAAgB,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;QAC3C,AAAE,CAAC,MAAM;UACP,AAAE,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;UAClC,AAAE,MAAM,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UACtC,AAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QACtB,AAAE,CAAC;QACH,AAAE,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1B,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,UAAU;QACjC,AAAE,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,AAAE,EAAE,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,AAAE,KAAK,sEAAsE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;;QAE9F,AAAE;QACF,AAAE,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,AAAE,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,AAAE,cAAc,GAAG,eAAe,GAAG,IAAI,wDAAwD,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAClH,AAAEC,GAAG,CAAC,MAAM,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,AAAED,GAAK,CAAC,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,AAAEA,GAAK,CAAC,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,AAAEA,GAAK,CAAC,OAAO,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1D,AAAEA,GAAK,CAAC,cAAc,0BAA0B,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QAClE,AAAEC,GAAG,CAAC,QAAQ,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACzD,AAAED,GAAK,CAAC,KAAK,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACxD,AAAEC,GAAG,CAAC,KAAK,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;;;QAGtD,AAAE,IAAI,CAAC,KAAK,IAAI,WAAW,CAAC,MAAM,IAAI,EAAE,EAAE;UACxC,AAAE;UACF,AAAE,IAAI,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UACjD,AAAE,OAAO,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UACpD,AAAE,SAAS,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UACtD,AAAE,OAAO,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UACpD,AAAED,GAAK,CAAC,eAAe,GAAG,IAAI,CAAC,gCAAgC,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;UACnG,AAAE,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC;UACjD,AAAEA,GAAK,CAAC,WAAW,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UAC9D,AAAE,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;UACvF,AAAEA,GAAK,CAAC,WAAW,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UAC9D,AAAE,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,GAAG,WAAW,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;UACvF,AAAE,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;UACzC,AAAE,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1C,AAAE,CAAC;;QAEH,AAAEC,GAAG,CAAC,yBAAc,CAAC;QACrB,AAAE,IAAI,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE;UAC7B,AAAE,cAAc,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,AAAE,CAAC;;QAEH,AAAEA,GAAG,CAAC,kBAAO,EAAE,yBAAc,EAAE,2BAAgB,CAAC;QAChD,AAAE,IAAI,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE;UAC7B,AAAE,OAAO,gCAAgC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UAC3D,AAAE,cAAc,0BAA0B,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;UAC5D,AAAE,gBAAgB,0BAA0B,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QAChE,AAAE,CAAC,MAAM;UACP,AAAE,OAAO,GAAG,cAAc,CAAC;UAC3B,AAAE,cAAc,GAAG,gBAAgB,GAAG,KAAK,CAAC;QAC9C,AAAE,CAAC;;QAEH,AAAE,IAAI,cAAc,EAAE;UACpB,AAAE,QAAQ,IAAI,YAAY,CAAC;QAC7B,AAAE,CAAC;QACH,AAAEA,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;QACrB,AAAE,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;UACvB,AAAE,IAAI,cAAc,IAAI,cAAc,CAAC,UAAU,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE;YAC9E,AAAE,SAAS;UACb,AAAE,CAAC;UACH,AAAE,IAAI,CAAC,YAAY,CAAC,OAAO;YACzB,AAAE,gBAAgB,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;YACvE,AAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK;YACpE,AAAE,WAAW,EAAE,KAAK,EAAE,OAAO;YAC7B,AAAE,cAAc,2BAA2B,CAAC,mBAAmB,CAAC,GAAG,IAAI;YACvE,AAAE,gBAAgB,2BAA2B,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC,CAAC;QACjF,AAAE,CAAC;QACH,AAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACjD,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,UAAU;QACjC,AAAED,GAAK,CAAC,KAAK,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,AAAEA,GAAK,CAAC,GAAG,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,AAAEA,GAAK,CAAC,QAAQ,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,AAAE,cAAc,GAAG,eAAe,GAAG,IAAI,wDAAwD,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAClH,AAAEA,GAAK,CAAC,QAAQ,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,AAAE,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,AAAEA,GAAK,CAAC,QAAQ,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1D,AAAEA,GAAK,CAAC,iBAAiB,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,AAAEA,GAAK,CAAC,OAAO,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,AAAE,SAAS,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACtD,AAAEA,GAAK,CAAC,WAAW,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9D,AAAE,IAAI,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACjD,AAAE,OAAO,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;QACpD,AAAEA,GAAK,CAAC,eAAe,yBAAyB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;;QAElE,AAAEA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC7C,AAAEA,GAAK,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC9B,AAAEA,GAAK,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,iBAAiB,CAAC;;QAExD,AAAEC,GAAG,CAAC,uBAAY,CAAC;QACnB,AAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;UAC1B,AAAE,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,AAAE,CAAC,MAAM;UACP,AAAE,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAC3C,AAAE,CAAC;;QAEH,AAAED,GAAK,CAAC,UAAU,GAAG,gBAAgB,CAAC,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACvE,AAAEA,GAAK,CAAC,UAAU,GAAG,SAAS,GAAG,wBAAwB,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;QACpF,AAAE,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,EAAE;UAC1C,AAAEA,GAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;UACvD,AAAEA,GAAK,CAAC,MAAM,GAAG,CAAC,UAAU,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;UACnE,AAAEA,GAAK,CAAC,KAAK,GAAG,cAAc;YAC5B,AAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,wBAAwB,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;UACtH,AAAE,IAAI,KAAK,EAAE;YACX,AAAEC,GAAG,CAAC,YAAC,EAAE,aAAE,EAAE,gBAAK,EAAE,gBAAK,EAAE,eAAI,CAAC;YAChC,AAAE,IAAI,SAAS,EAAE;cACf,AAAE,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC5C,AAAE,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,AAAE,KAAK,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,AAAE,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;gBAC3D,AAAE,OAAO,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;gBAC1D,AAAE,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,WAAW,GAAG,OAAO,CAAC;gBACnF,AAAE,IAAI,CAAC,YAAY,CAAC,OAAO;kBACzB,AAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK;kBACzE,AAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;kBACzD,AAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK;kBACtE,AAAE,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;cAClC,AAAE,CAAC;YACL,AAAE,CAAC;YACH,AAAE,IAAI,OAAO,EAAE;cACb,AAAE,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;gBAC5C,AAAE,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,AAAE,KAAK,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,AAAE,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;gBACzD,AAAE,OAAO,yBAAyB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,AAAE,OAAO,GAAG,QAAQ,GAAG,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;gBAC9C,AAAE,IAAI,CAAC,YAAY,CAAC,OAAO;kBACzB,AAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK;kBACzE,AAAE,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;kBACzD,AAAE,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK;kBACtE,AAAE,cAAc,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;cAClC,AAAE,CAAC;YACL,AAAE,CAAC;UACL,AAAE,CAAC;QACL,AAAE,CAAC;QACH,AAAE,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;QACjD,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,YAAY;QACnC,AAAE,IAAI,eAAe,KAAK,SAAS,EAAE;UACnC,AAAE,OAAO,qFAAqF,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;UAC/G,AAAED,GAAK,CAAC,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC;UAC1C,AAAE,IAAI,MAAM,EAAE;YACZ,AAAE,OAAO,MAAM,CAAC;UAClB,AAAE,CAAC;QACL,AAAE,CAAC;QACH,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,IAAI;QAC3B,AAAE,IAAI,SAAS,EAAE;UACf,AAAE,WAAW,EAAE,CAAC;QAClB,AAAE,CAAC,MAAM;UACP,AAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxB,AAAE,CAAC;QACH,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,eAAe;QACtC,AAAE,CAAC,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,AAAE,EAAE,yBAAyB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,AAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC1B,AAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,AAAE,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,AAAE,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;QACzB,AAAE,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,KAAK,EAAE;UAC1C,AAAE,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACvB,AAAE,KAAK,GAAG,MAAM,CAAC;UACjB,AAAE,KAAK,GAAG,MAAM,CAAC;QACnB,AAAE,CAAC;QACH,AAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;UAC7B,AAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;UAC1B,AAAE,CAAC,GAAG,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;UAC9B,AAAE,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;UACzB,AAAE,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;UACzB,AAAE,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,KAAK,KAAK,EAAE;YACzD,AAAE,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,AAAE,KAAK,GAAG,MAAM,CAAC;YACjB,AAAE,KAAK,GAAG,MAAM,CAAC;UACnB,AAAE,CAAC;QACL,AAAE,CAAC;QACH,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,cAAc;QACrC,AAAE,mBAAmB,GAAG,WAAW,CAAC;QACpC,AAAE,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;;QAEnC,AAAE,IAAI,WAAW,EAAE;UACjB,AAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;UACtB,AAAE,WAAW,GAAG,CAAC,CAAC;UAClB,AAAE,IAAI,aAAa,EAAE;YACnB,AAAE,OAAO,CAAC,MAAM,EAAE,CAAC;YACnB,AAAE,aAAa,GAAG,CAAC,CAAC;UACtB,AAAE,CAAC;QACL,AAAE,CAAC;;QAEH,AAAE,OAAO,CAAC,SAAS,yDAAyD,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7F,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,gBAAgB;QACvC,AAAE,qBAAqB,GAAG,WAAW,CAAC;QACtC,AAAE,IAAI,aAAa,EAAE;UACnB,AAAE,OAAO,CAAC,MAAM,EAAE,CAAC;UACnB,AAAE,aAAa,GAAG,CAAC,CAAC;QACtB,AAAE,CAAC;QACH,AAAE,IAAI,CAAC,eAAe,CAAC,OAAO,0BAA0B,CAAC,WAAW,CAAC,CAAC,CAAC;QACvE,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE,KAAK,iBAAiB,CAAC,MAAM;QAC7B,AAAE,IAAI,SAAS,EAAE;UACf,AAAE,aAAa,EAAE,CAAC;QACpB,AAAE,CAAC,MAAM;UACP,AAAE,OAAO,CAAC,MAAM,EAAE,CAAC;QACrB,AAAE,CAAC;QACH,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;MACV,AAAE;QACA,AAAE,EAAE,CAAC,CAAC;QACN,AAAE,MAAM;IACZ,AAAE,CAAC;EACL,AAAE,CAAC;EACH,AAAE,IAAI,WAAW,EAAE;IACjB,AAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;EACxB,AAAE,CAAC;EACH,AAAE,IAAI,aAAa,EAAE;IACnB,AAAE,OAAO,CAAC,MAAM,EAAE,CAAC;EACrB,AAAE,CAAC;EACH,AAAE,OAAO,SAAS,CAAC;AACrB,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE,IAAI,AAAE;CACR,AAAE;CACF,AAAE;AACH,yBAAE,2BAAO,CAAC,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,mBAAmB,EAAE,WAAW,EAAE;EAC5E,AAAE,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;EACpC,AAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS;IAChC,AAAE,mBAAmB,EAAE,IAAI,CAAC,YAAY,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;AACjF,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE,IAAI,AAAE;CACR,AAAE;CACF,AAAE,IAAI,AAAE;CACR,AAAE;CACF,AAAE,IAAI,AAAE;CACR,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,mDAAmB;EACnB,AAAE,OAAO;EACT,AAAE,SAAS;EACX,AAAE,YAAY;EACd,AAAE,mBAAmB;EACrB,AAAE,mBAAmB;EACrB,AAAE,aAAa;AACjB,AAAE,EAAE;EACF,AAAE,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;EACpC,AAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,mBAAmB;IAC5D,AAAE,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAAC;AAC/E,AAAE,EAAC;;AAEH,AAAE;CACD,AAAE;CACF,AAAE;AACH,yBAAE,2EAA+B,GAAG;EAClC,AAAEA,GAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC;EACjE,AAAE;EACF,AAAE,wBAAwB,CAAC,OAAO,EAAE,CAAC;EACrC,AAAE;EACF,AAAEC,GAAG,CAAC,CAAC,CAAC;EACR,AAAED,GAAK,CAAC,CAAC,GAAG,wBAAwB,CAAC,MAAM,CAAC;EAC5C,AAAEC,GAAG,CAAC,WAAW,CAAC;EAClB,AAAEA,GAAG,CAAC,IAAI,CAAC;EACX,AAAEA,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EACjB,AAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACxB,AAAE,WAAW,GAAG,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAC5C,AAAE,IAAI,oCAAoC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,AAAE,IAAI,IAAI,IAAI,iBAAiB,CAAC,YAAY,EAAE;MAC5C,AAAE,KAAK,GAAG,CAAC,CAAC;IACd,AAAE,CAAC,MAAM,IAAI,IAAI,IAAI,iBAAiB,CAAC,cAAc,EAAE;MACrD,AAAE,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACrB,AAAE,eAAe,CAAC,IAAI,CAAC,wBAAwB,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;MAC3D,AAAE,KAAK,GAAG,CAAC,CAAC,CAAC;IACf,AAAE,CAAC;EACL,AAAE,CAAC;AACL,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,iCAAU,CAAC,KAAK,EAAE,QAAQ,EAAE;EAC5B,AAAED,GAAK,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;EACpC,AAAE;EACF,AAAEA,GAAK,CAAC,eAAe,GAAG,CAAC,iBAAiB,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;EACxE,AAAE,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;IACnC,AAAE;IACF,AAAE,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC/B,AAAE,CAAC;EACH,AAAE,OAAO,eAAe,CAAC;AAC3B,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,qCAAY,CAAC,KAAK,EAAE;EACpB,AAAE,OAAO;IACP,AAAE,iBAAiB,CAAC,gBAAgB;IACpC,AAAE,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,OAAO;IACrE,AAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,UAAU;IAClC,AAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU;EAChF,AAAE,CAAC,CAAC;AACN,AAAE,EAAC;;;AAGH,AAAE;CACD,AAAE,oCAAoC,AAAE;CACxC,AAAE,8BAA8B,AAAE;CAClC,AAAE;CACF,AAAE;CACF,AAAE;CACF,AAAE;AACH,yBAAE,qDAAoB,GAAG;EACvB,AAAE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;IAC9B,AAAE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAClD,AAAE,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;MAC3B,AAAEA,GAAK,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC9D,AAAE,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACpE,AAAE,CAAC;EACL,AAAE,CAAC;EACH,AAAE,OAAO,IAAI,CAAC,kBAAkB,CAAC;AACnC,AAAE,CAAC,CACF;;;AAGD,eAAe,cAAc,CAAC;"}