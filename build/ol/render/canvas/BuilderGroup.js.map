{"version":3,"file":"BuilderGroup.js","sources":["../../../../src/ol/render/canvas/BuilderGroup.js"],"sourcesContent":["/**\r\n * @module ol/render/canvas/BuilderGroup\r\n */\r\n\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport BuilderGroup from '../BuilderGroup.js';\r\nimport ReplayType from '../ReplayType.js';\r\nimport CanvasBuilder from './Builder.js';\r\nimport CanvasImageBuilder from './ImageBuilder.js';\r\nimport CanvasLineStringBuilder from './LineStringBuilder.js';\r\nimport CanvasPolygonBuilder from './PolygonBuilder.js';\r\nimport CanvasTextBuilder from './TextBuilder.js';\r\nimport {ORDER} from '../replay.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @type {Object<ReplayType, typeof CanvasBuilder>}\r\n */\r\nconst BATCH_CONSTRUCTORS = {\r\n  'Circle': CanvasPolygonBuilder,\r\n  'Default': CanvasBuilder,\r\n  'Image': CanvasImageBuilder,\r\n  'LineString': CanvasLineStringBuilder,\r\n  'Polygon': CanvasPolygonBuilder,\r\n  'Text': CanvasTextBuilder\r\n};\r\n\r\n\r\nclass CanvasBuilderGroup extends BuilderGroup {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The builder group can have overlapping geometries.\r\n   * @param {?} declutterTree Declutter tree for declutter processing in postrender.\r\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\r\n   */\r\n  constructor(\r\n    tolerance,\r\n    maxExtent,\r\n    resolution,\r\n    pixelRatio,\r\n    overlaps,\r\n    declutterTree,\r\n    opt_renderBuffer\r\n  ) {\r\n    super();\r\n\r\n    /**\r\n     * Declutter tree.\r\n     * @private\r\n     */\r\n    this.declutterTree_ = declutterTree;\r\n\r\n    /**\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     * @private\r\n     */\r\n    this.declutterGroup_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderBuffer_ = opt_renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<ReplayType, CanvasBuilder>>}\r\n     */\r\n    this.buildersByZIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitDetectionTransform_ = createTransform();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  addDeclutter(group) {\r\n    let declutter = null;\r\n    if (this.declutterTree_) {\r\n      if (group) {\r\n        declutter = this.declutterGroup_;\r\n        /** @type {number} */ (declutter[4])++;\r\n      } else {\r\n        declutter = this.declutterGroup_ = createEmpty();\r\n        declutter.push(1);\r\n      }\r\n    }\r\n    return declutter;\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  clip(context, transform) {\r\n    const flatClipCoords = this.getClipCoords(transform);\r\n    context.beginPath();\r\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * @return {!Object<string, !Object<ReplayType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\r\n   */\r\n  finish() {\r\n    const builderInstructions = {};\r\n    for (const zKey in this.buildersByZIndex_) {\r\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\r\n      const builders = this.buildersByZIndex_[zKey];\r\n      for (const builderKey in builders) {\r\n        const builderInstruction = builders[builderKey].finish();\r\n        builderInstructions[zKey][builderKey] = builderInstruction;\r\n      }\r\n    }\r\n    return builderInstructions;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\r\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    resolution,\r\n    rotation,\r\n    hitTolerance,\r\n    skippedFeaturesHash,\r\n    callback,\r\n    declutterReplays\r\n  ) {\r\n\r\n    hitTolerance = Math.round(hitTolerance);\r\n    const contextSize = hitTolerance * 2 + 1;\r\n    const transform = composeTransform(this.hitDetectionTransform_,\r\n      hitTolerance + 0.5, hitTolerance + 0.5,\r\n      1 / resolution, -1 / resolution,\r\n      -rotation,\r\n      -coordinate[0], -coordinate[1]);\r\n    const context = this.hitDetectionContext_;\r\n\r\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\r\n      context.canvas.width = contextSize;\r\n      context.canvas.height = contextSize;\r\n    } else {\r\n      context.clearRect(0, 0, contextSize, contextSize);\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    let hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      hitExtent = createEmpty();\r\n      extendCoordinate(hitExtent, coordinate);\r\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\r\n    }\r\n\r\n    const mask = getCircleArray(hitTolerance);\r\n    let declutteredFeatures;\r\n    if (this.declutterTree_) {\r\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\r\n        return entry.value;\r\n      });\r\n    }\r\n\r\n    let replayType;\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n     * @return {?} Callback result.\r\n     */\r\n    function featureCallback(feature) {\r\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\r\n      for (let i = 0; i < contextSize; i++) {\r\n        for (let j = 0; j < contextSize; j++) {\r\n          if (mask[i][j]) {\r\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\r\n              let result;\r\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\r\n                  declutteredFeatures.indexOf(feature) !== -1) {\r\n                result = callback(feature);\r\n              }\r\n              if (result) {\r\n                return result;\r\n              } else {\r\n                context.clearRect(0, 0, contextSize, contextSize);\r\n                return undefined;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.buildersByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    let i, j, builders, builder, result;\r\n    for (i = zs.length - 1; i >= 0; --i) {\r\n      const zIndexKey = zs[i].toString();\r\n      builders = this.buildersByZIndex_[zIndexKey];\r\n      for (j = ORDER.length - 1; j >= 0; --j) {\r\n        replayType = ORDER[j];\r\n        builder = builders[replayType];\r\n        if (builder !== undefined) {\r\n          if (declutterReplays &&\r\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\r\n            const declutter = declutterReplays[zIndexKey];\r\n            if (!declutter) {\r\n              declutterReplays[zIndexKey] = [builder, transform.slice(0)];\r\n            } else {\r\n              declutter.push(builder, transform.slice(0));\r\n            }\r\n          } else {\r\n            result = builder.executeHitDetection(context, transform, rotation,\r\n              skippedFeaturesHash, featureCallback, hitExtent);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @return {Array<number>} Clip coordinates.\r\n   */\r\n  getClipCoords(transform) {\r\n    const maxExtent = this.maxExtent_;\r\n    const minX = maxExtent[0];\r\n    const minY = maxExtent[1];\r\n    const maxX = maxExtent[2];\r\n    const maxY = maxExtent[3];\r\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n    transform2D(\r\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n    return flatClipCoords;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getBuilder(zIndex, replayType) {\r\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    let replays = this.buildersByZIndex_[zIndexKey];\r\n    if (replays === undefined) {\r\n      replays = {};\r\n      this.buildersByZIndex_[zIndexKey] = replays;\r\n    }\r\n    let replay = replays[replayType];\r\n    if (replay === undefined) {\r\n      const Constructor = BATCH_CONSTRUCTORS[replayType];\r\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\r\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\r\n      replays[replayType] = replay;\r\n    }\r\n    return replay;\r\n  }\r\n\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.buildersByZIndex_);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This cache is used for storing calculated pixel circles for increasing performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\r\n */\r\nconst circleArrayCache = {\r\n  0: [[true]]\r\n};\r\n\r\n\r\n/**\r\n * This method fills a row in the array from the given coordinate to the\r\n * middle with `true`.\r\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n */\r\nfunction fillCircleArrayRowToMiddle(array, x, y) {\r\n  let i;\r\n  const radius = Math.floor(array.length / 2);\r\n  if (x >= radius) {\r\n    for (i = radius; i < x; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  } else if (x < radius) {\r\n    for (i = x + 1; i < radius; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This methods creates a circle inside a fitting array. Points inside the\r\n * circle are marked by true, points on the outside are undefined.\r\n * It uses the midpoint circle algorithm.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\r\n */\r\nexport function getCircleArray(radius) {\r\n  if (circleArrayCache[radius] !== undefined) {\r\n    return circleArrayCache[radius];\r\n  }\r\n\r\n  const arraySize = radius * 2 + 1;\r\n  const arr = new Array(arraySize);\r\n  for (let i = 0; i < arraySize; i++) {\r\n    arr[i] = new Array(arraySize);\r\n  }\r\n\r\n  let x = radius;\r\n  let y = 0;\r\n  let error = 0;\r\n\r\n  while (x >= y) {\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\r\n\r\n    y++;\r\n    error += 1 + 2 * y;\r\n    if (2 * (error - x) + 1 > 0) {\r\n      x -= 1;\r\n      error += 1 - 2 * x;\r\n    }\r\n  }\r\n\r\n  circleArrayCache[radius] = arr;\r\n  return arr;\r\n}\r\n\r\nexport default CanvasBuilderGroup;\r\n"],"names":["const","super","let"],"mappings":"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"}