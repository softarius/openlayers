{"version":3,"file":"Builder.js","sources":["../../../../src/ol/render/canvas/Builder.js"],"sourcesContent":["/**\r\n * @module ol/render/canvas/Builder\r\n */\r\nimport {equals, reverseSubArray} from '../../array.js';\r\nimport {asColorLike} from '../../colorlike.js';\r\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\r\nimport Relationship from '../../extent/Relationship.js';\r\nimport GeometryType from '../../geom/GeometryType.js';\r\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\r\nimport {CANVAS_LINE_DASH} from '../../has.js';\r\nimport VectorContext from '../VectorContext.js';\r\nimport {resetTransform, defaultFillStyle, defaultStrokeStyle,\r\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\r\n  defaultLineDash, defaultLineCap} from '../canvas.js';\r\nimport CanvasInstruction from './Instruction.js';\r\nimport {\r\n  create as createTransform,\r\n  apply as applyTransform\r\n} from '../../transform.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} SerializableInstructions\r\n * @property {Array<*>} instructions The rendering instructions.\r\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\r\n * @property {Array<number>} coordinates The array of all coordinates.\r\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\r\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\r\n */\r\n\r\n\r\nclass CanvasBuilder extends VectorContext {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The builder can have overlapping geometries.\r\n   * @param {?} declutterTree Declutter tree.\r\n   */\r\n  constructor(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\r\n    super();\r\n\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.declutterTree = declutterTree;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.tolerance = tolerance;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent = maxExtent;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps = overlaps;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio = pixelRatio;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number}\r\n     */\r\n    this.maxLineWidth = 0;\r\n\r\n    /**\r\n     * @protected\r\n     * @const\r\n     * @type {number}\r\n     */\r\n    this.resolution = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.alignFill_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction1_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<*>}\r\n     */\r\n    this.beginGeometryInstruction2_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.bufferedMaxExtent_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.instructions = [];\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<number>}\r\n     */\r\n    this.coordinates = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\r\n     */\r\n    this.coordinateCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!import(\"../../transform.js\").Transform}\r\n     */\r\n    this.renderedTransform_ = createTransform();\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Array<*>}\r\n     */\r\n    this.hitDetectionInstructions = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.pixelCoordinates_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {import(\"../canvas.js\").FillStrokeState}\r\n     */\r\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.viewRotation_ = 0;\r\n\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {Array<number>} dashArray Dash array.\r\n   * @return {Array<number>} Dash array with pixel ratio applied\r\n   */\r\n  applyPixelRatio(dashArray) {\r\n    const pixelRatio = this.pixelRatio;\r\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\r\n      return dash * pixelRatio;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {number} end End.\r\n   * @param {number} stride Stride.\r\n   * @param {boolean} closed Last input coordinate equals first.\r\n   * @param {boolean} skipFirst Skip first coordinate.\r\n   * @protected\r\n   * @return {number} My end.\r\n   */\r\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\r\n\r\n    let myEnd = this.coordinates.length;\r\n    const extent = this.getBufferedMaxExtent();\r\n    if (skipFirst) {\r\n      offset += stride;\r\n    }\r\n    const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\r\n    const nextCoord = [NaN, NaN];\r\n    let skipped = true;\r\n\r\n    let i, lastRel, nextRel;\r\n    for (i = offset + stride; i < end; i += stride) {\r\n      nextCoord[0] = flatCoordinates[i];\r\n      nextCoord[1] = flatCoordinates[i + 1];\r\n      nextRel = coordinateRelationship(extent, nextCoord);\r\n      if (nextRel !== lastRel) {\r\n        if (skipped) {\r\n          this.coordinates[myEnd++] = lastCoord[0];\r\n          this.coordinates[myEnd++] = lastCoord[1];\r\n        }\r\n        this.coordinates[myEnd++] = nextCoord[0];\r\n        this.coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else if (nextRel === Relationship.INTERSECTING) {\r\n        this.coordinates[myEnd++] = nextCoord[0];\r\n        this.coordinates[myEnd++] = nextCoord[1];\r\n        skipped = false;\r\n      } else {\r\n        skipped = true;\r\n      }\r\n      lastCoord[0] = nextCoord[0];\r\n      lastCoord[1] = nextCoord[1];\r\n      lastRel = nextRel;\r\n    }\r\n\r\n    // Last coordinate equals first or only one point to append:\r\n    if ((closed && skipped) || i === offset + stride) {\r\n      this.coordinates[myEnd++] = lastCoord[0];\r\n      this.coordinates[myEnd++] = lastCoord[1];\r\n    }\r\n    return myEnd;\r\n  }\r\n\r\n  /**\r\n   * @param {Array<number>} flatCoordinates Flat coordinates.\r\n   * @param {number} offset Offset.\r\n   * @param {Array<number>} ends Ends.\r\n   * @param {number} stride Stride.\r\n   * @param {Array<number>} builderEnds Builder ends.\r\n   * @return {number} Offset.\r\n   */\r\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\r\n      builderEnds.push(builderEnd);\r\n      offset = end;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc.\r\n   */\r\n  drawCustom(geometry, feature, renderer) {\r\n    this.beginGeometry(geometry, feature);\r\n    const type = geometry.getType();\r\n    const stride = geometry.getStride();\r\n    const builderBegin = this.coordinates.length;\r\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\r\n    let offset;\r\n    if (type == GeometryType.MULTI_POLYGON) {\r\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\r\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\r\n      builderEndss = [];\r\n      const endss = geometry.getEndss();\r\n      offset = 0;\r\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n        const myEnds = [];\r\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\r\n        builderEndss.push(myEnds);\r\n      }\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\r\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\r\n      builderEnds = [];\r\n      flatCoordinates = (type == GeometryType.POLYGON) ?\r\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\r\n        geometry.getFlatCoordinates();\r\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\r\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\r\n        stride, builderEnds);\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\r\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      builderEnd = this.appendFlatCoordinates(\r\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\r\n    } else if (type == GeometryType.POINT) {\r\n      flatCoordinates = geometry.getFlatCoordinates();\r\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\r\n      builderEnd = this.coordinates.length;\r\n      this.instructions.push([CanvasInstruction.CUSTOM,\r\n        builderBegin, builderEnd, geometry, renderer]);\r\n    }\r\n    this.endGeometry(geometry, feature);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  beginGeometry(geometry, feature) {\r\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n    this.instructions.push(this.beginGeometryInstruction1_);\r\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\r\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\r\n  }\r\n\r\n  /**\r\n   * @return {SerializableInstructions} the serializable instructions.\r\n   */\r\n  finish() {\r\n    return {\r\n      instructions: this.instructions,\r\n      hitDetectionInstructions: this.hitDetectionInstructions,\r\n      coordinates: this.coordinates\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   */\r\n  fill_(context) {\r\n    if (this.alignFill_) {\r\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\r\n      const repeatSize = 512 * this.pixelRatio;\r\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\r\n      context.rotate(this.viewRotation_);\r\n    }\r\n    context.fill();\r\n    if (this.alignFill_) {\r\n      context.setTransform.apply(context, resetTransform);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {Array<*>} instruction Instruction.\r\n   */\r\n  setStrokeStyle_(context, instruction) {\r\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\r\n    context.lineWidth = /** @type {number} */ (instruction[2]);\r\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\r\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\r\n    context.miterLimit = /** @type {number} */ (instruction[5]);\r\n    if (CANVAS_LINE_DASH) {\r\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\r\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reverse the hit detection instructions.\r\n   */\r\n  reverseHitDetectionInstructions() {\r\n    const hitDetectionInstructions = this.hitDetectionInstructions;\r\n    // step 1 - reverse array\r\n    hitDetectionInstructions.reverse();\r\n    // step 2 - reverse instructions within geometry blocks\r\n    let i;\r\n    const n = hitDetectionInstructions.length;\r\n    let instruction;\r\n    let type;\r\n    let begin = -1;\r\n    for (i = 0; i < n; ++i) {\r\n      instruction = hitDetectionInstructions[i];\r\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\r\n      if (type == CanvasInstruction.END_GEOMETRY) {\r\n        begin = i;\r\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\r\n        instruction[2] = i;\r\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\r\n        begin = -1;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  setFillStrokeStyle(fillStyle, strokeStyle) {\r\n    const state = this.state;\r\n    if (fillStyle) {\r\n      const fillStyleColor = fillStyle.getColor();\r\n      state.fillStyle = asColorLike(fillStyleColor ?\r\n        fillStyleColor : defaultFillStyle);\r\n    } else {\r\n      state.fillStyle = undefined;\r\n    }\r\n    if (strokeStyle) {\r\n      const strokeStyleColor = strokeStyle.getColor();\r\n      state.strokeStyle = asColorLike(strokeStyleColor ?\r\n        strokeStyleColor : defaultStrokeStyle);\r\n      const strokeStyleLineCap = strokeStyle.getLineCap();\r\n      state.lineCap = strokeStyleLineCap !== undefined ?\r\n        strokeStyleLineCap : defaultLineCap;\r\n      const strokeStyleLineDash = strokeStyle.getLineDash();\r\n      state.lineDash = strokeStyleLineDash ?\r\n        strokeStyleLineDash.slice() : defaultLineDash;\r\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\r\n      state.lineDashOffset = strokeStyleLineDashOffset ?\r\n        strokeStyleLineDashOffset : defaultLineDashOffset;\r\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\r\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\r\n        strokeStyleLineJoin : defaultLineJoin;\r\n      const strokeStyleWidth = strokeStyle.getWidth();\r\n      state.lineWidth = strokeStyleWidth !== undefined ?\r\n        strokeStyleWidth : defaultLineWidth;\r\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\r\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\r\n        strokeStyleMiterLimit : defaultMiterLimit;\r\n\r\n      if (state.lineWidth > this.maxLineWidth) {\r\n        this.maxLineWidth = state.lineWidth;\r\n        // invalidate the buffered max extent cache\r\n        this.bufferedMaxExtent_ = null;\r\n      }\r\n    } else {\r\n      state.strokeStyle = undefined;\r\n      state.lineCap = undefined;\r\n      state.lineDash = null;\r\n      state.lineDashOffset = undefined;\r\n      state.lineJoin = undefined;\r\n      state.lineWidth = undefined;\r\n      state.miterLimit = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @return {Array<*>} Fill instruction.\r\n   */\r\n  createFill(state, geometry) {\r\n    const fillStyle = state.fillStyle;\r\n    /** @type {Array<*>} */\r\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\r\n    if (typeof fillStyle !== 'string') {\r\n      // Fill is a pattern or gradient - align it!\r\n      fillInstruction.push(true);\r\n    }\r\n    return fillInstruction;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   */\r\n  applyStroke(state) {\r\n    this.instructions.push(this.createStroke(state));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @return {Array<*>} Stroke instruction.\r\n   */\r\n  createStroke(state) {\r\n    return [\r\n      CanvasInstruction.SET_STROKE_STYLE,\r\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\r\n      state.lineJoin, state.miterLimit,\r\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   */\r\n  updateFillStyle(state, createFill, geometry) {\r\n    const fillStyle = state.fillStyle;\r\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\r\n      if (fillStyle !== undefined) {\r\n        this.instructions.push(createFill.call(this, state, geometry));\r\n      }\r\n      state.currentFillStyle = fillStyle;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\r\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\r\n   */\r\n  updateStrokeStyle(state, applyStroke) {\r\n    const strokeStyle = state.strokeStyle;\r\n    const lineCap = state.lineCap;\r\n    const lineDash = state.lineDash;\r\n    const lineDashOffset = state.lineDashOffset;\r\n    const lineJoin = state.lineJoin;\r\n    const lineWidth = state.lineWidth;\r\n    const miterLimit = state.miterLimit;\r\n    if (state.currentStrokeStyle != strokeStyle ||\r\n        state.currentLineCap != lineCap ||\r\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\r\n        state.currentLineDashOffset != lineDashOffset ||\r\n        state.currentLineJoin != lineJoin ||\r\n        state.currentLineWidth != lineWidth ||\r\n        state.currentMiterLimit != miterLimit) {\r\n      if (strokeStyle !== undefined) {\r\n        applyStroke.call(this, state);\r\n      }\r\n      state.currentStrokeStyle = strokeStyle;\r\n      state.currentLineCap = lineCap;\r\n      state.currentLineDash = lineDash;\r\n      state.currentLineDashOffset = lineDashOffset;\r\n      state.currentLineJoin = lineJoin;\r\n      state.currentLineWidth = lineWidth;\r\n      state.currentMiterLimit = miterLimit;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\r\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n   */\r\n  endGeometry(geometry, feature) {\r\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\r\n    this.beginGeometryInstruction1_ = null;\r\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\r\n    this.beginGeometryInstruction2_ = null;\r\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\r\n    this.instructions.push(endGeometryInstruction);\r\n    this.hitDetectionInstructions.push(endGeometryInstruction);\r\n  }\r\n\r\n  /**\r\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\r\n   * provided to the constructor.  To account for symbolizers that may intersect\r\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\r\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\r\n   * @protected\r\n   */\r\n  getBufferedMaxExtent() {\r\n    if (!this.bufferedMaxExtent_) {\r\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\r\n      if (this.maxLineWidth > 0) {\r\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\r\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\r\n      }\r\n    }\r\n    return this.bufferedMaxExtent_;\r\n  }\r\n}\r\n\r\n\r\nexport default CanvasBuilder;\r\n"],"names":["super","const","let"],"mappings":"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"}