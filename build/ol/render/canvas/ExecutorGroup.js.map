{"version":3,"file":"ExecutorGroup.js","sources":["../../../../src/ol/render/canvas/ExecutorGroup.js"],"sourcesContent":["/**\r\n * @module ol/render/canvas/ExecutorGroup\r\n */\r\n\r\nimport {numberSafeCompareFunction} from '../../array.js';\r\nimport {createCanvasContext2D} from '../../dom.js';\r\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\r\nimport {transform2D} from '../../geom/flat/transform.js';\r\nimport {isEmpty} from '../../obj.js';\r\nimport BaseExecutorGroup from '../ExecutorGroup.js';\r\nimport ReplayType from '../ReplayType.js';\r\nimport {ORDER} from '../replay.js';\r\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\r\nimport CanvasExecutor from './Executor.js';\r\n\r\n\r\nclass ExecutorGroup extends BaseExecutorGroup {\r\n  /**\r\n   * @param {number} tolerance Tolerance.\r\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\r\n   * @param {?} declutterTree Declutter tree for declutter processing in postrender.\r\n   * @param {!Object<string, !Object<ReplayType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\r\n   * The serializable instructions.\r\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\r\n   */\r\n  constructor(\r\n    tolerance,\r\n    maxExtent,\r\n    resolution,\r\n    pixelRatio,\r\n    overlaps,\r\n    declutterTree,\r\n    allInstructions,\r\n    opt_renderBuffer\r\n  ) {\r\n    super();\r\n\r\n    /**\r\n     * Declutter tree.\r\n     * @private\r\n     */\r\n    this.declutterTree_ = declutterTree;\r\n\r\n    /**\r\n     * @type {import(\"../canvas.js\").DeclutterGroup}\r\n     * @private\r\n     */\r\n    this.declutterGroup_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tolerance_ = tolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    this.maxExtent_ = maxExtent;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overlaps_ = overlaps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ = pixelRatio;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.resolution_ = resolution;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderBuffer_ = opt_renderBuffer;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, !Object<ReplayType, import(\"./Executor\").default>>}\r\n     */\r\n    this.executorsByZIndex_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D}\r\n     */\r\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../../transform.js\").Transform}\r\n     */\r\n    this.hitDetectionTransform_ = createTransform();\r\n\r\n    this.createExectutors_(allInstructions);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   */\r\n  clip(context, transform) {\r\n    const flatClipCoords = this.getClipCoords(transform);\r\n    context.beginPath();\r\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\r\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\r\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\r\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\r\n    context.clip();\r\n  }\r\n\r\n  /**\r\n   * Create executors and populate them using the provided instructions.\r\n   * @private\r\n   * @param {!Object<string, !Object<ReplayType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\r\n   */\r\n  createExectutors_(allInstructions) {\r\n    for (const zIndex in allInstructions) {\r\n      let executors = this.executorsByZIndex_[zIndex];\r\n      if (executors === undefined) {\r\n        this.executorsByZIndex_[zIndex] = executors = {};\r\n      }\r\n      const instructionByZindex = allInstructions[zIndex];\r\n      for (const replayType in instructionByZindex) {\r\n        const instructions = instructionByZindex[replayType];\r\n        executors[replayType] = new CanvasExecutor(this.tolerance_, this.maxExtent_,\r\n          this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Array<ReplayType>} executors Executors.\r\n   * @return {boolean} Has executors of the provided types.\r\n   */\r\n  hasExecutors(executors) {\r\n    for (const zIndex in this.executorsByZIndex_) {\r\n      const candidates = this.executorsByZIndex_[zIndex];\r\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\r\n        if (executors[i] in candidates) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} rotation Rotation.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\r\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    resolution,\r\n    rotation,\r\n    hitTolerance,\r\n    skippedFeaturesHash,\r\n    callback,\r\n    declutterReplays\r\n  ) {\r\n\r\n    hitTolerance = Math.round(hitTolerance);\r\n    const contextSize = hitTolerance * 2 + 1;\r\n    const transform = composeTransform(this.hitDetectionTransform_,\r\n      hitTolerance + 0.5, hitTolerance + 0.5,\r\n      1 / resolution, -1 / resolution,\r\n      -rotation,\r\n      -coordinate[0], -coordinate[1]);\r\n    const context = this.hitDetectionContext_;\r\n\r\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\r\n      context.canvas.width = contextSize;\r\n      context.canvas.height = contextSize;\r\n    } else {\r\n      context.clearRect(0, 0, contextSize, contextSize);\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../../extent.js\").Extent}\r\n     */\r\n    let hitExtent;\r\n    if (this.renderBuffer_ !== undefined) {\r\n      hitExtent = createEmpty();\r\n      extendCoordinate(hitExtent, coordinate);\r\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\r\n    }\r\n\r\n    const mask = getCircleArray(hitTolerance);\r\n    let declutteredFeatures;\r\n    if (this.declutterTree_) {\r\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\r\n        return entry.value;\r\n      });\r\n    }\r\n\r\n    let replayType;\r\n\r\n    /**\r\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\r\n     * @return {?} Callback result.\r\n     */\r\n    function featureCallback(feature) {\r\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\r\n      for (let i = 0; i < contextSize; i++) {\r\n        for (let j = 0; j < contextSize; j++) {\r\n          if (mask[i][j]) {\r\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\r\n              let result;\r\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\r\n                  declutteredFeatures.indexOf(feature) !== -1) {\r\n                result = callback(feature);\r\n              }\r\n              if (result) {\r\n                return result;\r\n              } else {\r\n                context.clearRect(0, 0, contextSize, contextSize);\r\n                return undefined;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    let i, j, executors, executor, result;\r\n    for (i = zs.length - 1; i >= 0; --i) {\r\n      const zIndexKey = zs[i].toString();\r\n      executors = this.executorsByZIndex_[zIndexKey];\r\n      for (j = ORDER.length - 1; j >= 0; --j) {\r\n        replayType = ORDER[j];\r\n        executor = executors[replayType];\r\n        if (executor !== undefined) {\r\n          if (declutterReplays &&\r\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\r\n            const declutter = declutterReplays[zIndexKey];\r\n            if (!declutter) {\r\n              declutterReplays[zIndexKey] = [executor, transform.slice(0)];\r\n            } else {\r\n              declutter.push(executor, transform.slice(0));\r\n            }\r\n          } else {\r\n            result = executor.executeHitDetection(context, transform, rotation,\r\n              skippedFeaturesHash, featureCallback, hitExtent);\r\n            if (result) {\r\n              return result;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @return {Array<number>} Clip coordinates.\r\n   */\r\n  getClipCoords(transform) {\r\n    const maxExtent = this.maxExtent_;\r\n    const minX = maxExtent[0];\r\n    const minY = maxExtent[1];\r\n    const maxX = maxExtent[2];\r\n    const maxY = maxExtent[3];\r\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\r\n    transform2D(\r\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\r\n    return flatClipCoords;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../../extent.js\").Extent} The extent of the replay group.\r\n   */\r\n  getMaxExtent() {\r\n    return this.maxExtent_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  getExecutor(zIndex, replayType) {\r\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\r\n    let executors = this.executorsByZIndex_[zIndexKey];\r\n    if (executors === undefined) {\r\n      executors = {};\r\n      this.executorsByZIndex_[zIndexKey] = executors;\r\n    }\r\n    let executor = executors[replayType];\r\n    if (executor === undefined) {\r\n      // FIXME: it should not be possible to ask for an executor that does not exist\r\n      executor = new CanvasExecutor(this.tolerance_, this.maxExtent_,\r\n        this.resolution_, this.pixelRatio_, this.overlaps_, {\r\n          instructions: [],\r\n          hitDetectionInstructions: [],\r\n          coordinates: []\r\n        },\r\n        this.declutterTree_);\r\n      executors[replayType] = executor;\r\n    }\r\n    return executor;\r\n  }\r\n\r\n  /**\r\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\r\n   */\r\n  getExecutors() {\r\n    return this.executorsByZIndex_;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  isEmpty() {\r\n    return isEmpty(this.executorsByZIndex_);\r\n  }\r\n\r\n  /**\r\n   * @param {CanvasRenderingContext2D} context Context.\r\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\r\n   * @param {number} viewRotation View rotation.\r\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\r\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\r\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\r\n   *     Default is {@link module:ol/render/replay~ORDER}\r\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\r\n   */\r\n  execute(\r\n    context,\r\n    transform,\r\n    viewRotation,\r\n    skippedFeaturesHash,\r\n    snapToPixel,\r\n    opt_replayTypes,\r\n    opt_declutterReplays\r\n  ) {\r\n\r\n    /** @type {Array<number>} */\r\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\r\n    zs.sort(numberSafeCompareFunction);\r\n\r\n    // setup clipping so that the parts of over-simplified geometries are not\r\n    // visible outside the current extent when panning\r\n    context.save();\r\n    this.clip(context, transform);\r\n\r\n    const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\r\n    let i, ii, j, jj, replays, replay;\r\n    for (i = 0, ii = zs.length; i < ii; ++i) {\r\n      const zIndexKey = zs[i].toString();\r\n      replays = this.executorsByZIndex_[zIndexKey];\r\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\r\n        const replayType = replayTypes[j];\r\n        replay = replays[replayType];\r\n        if (replay !== undefined) {\r\n          if (opt_declutterReplays &&\r\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\r\n            const declutter = opt_declutterReplays[zIndexKey];\r\n            if (!declutter) {\r\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\r\n            } else {\r\n              declutter.push(replay, transform.slice(0));\r\n            }\r\n          } else {\r\n            replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    context.restore();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This cache is used for storing calculated pixel circles for increasing performance.\r\n * It is a static property to allow each Replaygroup to access it.\r\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\r\n */\r\nconst circleArrayCache = {\r\n  0: [[true]]\r\n};\r\n\r\n\r\n/**\r\n * This method fills a row in the array from the given coordinate to the\r\n * middle with `true`.\r\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\r\n * @param {number} x X coordinate.\r\n * @param {number} y Y coordinate.\r\n */\r\nfunction fillCircleArrayRowToMiddle(array, x, y) {\r\n  let i;\r\n  const radius = Math.floor(array.length / 2);\r\n  if (x >= radius) {\r\n    for (i = radius; i < x; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  } else if (x < radius) {\r\n    for (i = x + 1; i < radius; i++) {\r\n      array[i][y] = true;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * This methods creates a circle inside a fitting array. Points inside the\r\n * circle are marked by true, points on the outside are undefined.\r\n * It uses the midpoint circle algorithm.\r\n * A cache is used to increase performance.\r\n * @param {number} radius Radius.\r\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\r\n */\r\nexport function getCircleArray(radius) {\r\n  if (circleArrayCache[radius] !== undefined) {\r\n    return circleArrayCache[radius];\r\n  }\r\n\r\n  const arraySize = radius * 2 + 1;\r\n  const arr = new Array(arraySize);\r\n  for (let i = 0; i < arraySize; i++) {\r\n    arr[i] = new Array(arraySize);\r\n  }\r\n\r\n  let x = radius;\r\n  let y = 0;\r\n  let error = 0;\r\n\r\n  while (x >= y) {\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\r\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\r\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\r\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\r\n\r\n    y++;\r\n    error += 1 + 2 * y;\r\n    if (2 * (error - x) + 1 > 0) {\r\n      x -= 1;\r\n      error += 1 - 2 * x;\r\n    }\r\n  }\r\n\r\n  circleArrayCache[radius] = arr;\r\n  return arr;\r\n}\r\n\r\n\r\n/**\r\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\r\n * @param {CanvasRenderingContext2D} context Context.\r\n * @param {number} rotation Rotation.\r\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\r\n */\r\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\r\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\r\n  const skippedFeatureUids = {};\r\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\r\n    const executorData = declutterReplays[zs[z].toString()];\r\n    for (let i = 0, ii = executorData.length; i < ii;) {\r\n      const executor = executorData[i++];\r\n      const transform = executorData[i++];\r\n      executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default ExecutorGroup;\r\n"],"names":["super","const","let"],"mappings":"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"}