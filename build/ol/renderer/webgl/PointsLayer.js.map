{"version":3,"file":"PointsLayer.js","sources":["../../../../src/ol/renderer/webgl/PointsLayer.js"],"sourcesContent":["/**\r\n * @module ol/renderer/webgl/PointsLayer\r\n */\r\nimport LayerRenderer from '../Layer';\r\nimport WebGLArrayBuffer from '../../webgl/Buffer';\r\nimport {DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT} from '../../webgl';\r\nimport WebGLHelper, {DefaultAttrib, DefaultUniform} from '../../webgl/Helper';\r\nimport WebGLVertex from '../../webgl/Vertex';\r\nimport WebGLFragment from '../../webgl/Fragment';\r\nimport GeometryType from '../../geom/GeometryType';\r\n\r\nconst VERTEX_SHADER = `\r\n  precision mediump float;\r\n  attribute vec2 a_position;\r\n  attribute vec2 a_texCoord;\r\n  attribute float a_rotateWithView;\r\n  attribute vec2 a_offsets;\r\n  \r\n  uniform mat4 u_projectionMatrix;\r\n  uniform mat4 u_offsetScaleMatrix;\r\n  uniform mat4 u_offsetRotateMatrix;\r\n  \r\n  varying vec2 v_texCoord;\r\n  \r\n  void main(void) {\r\n    mat4 offsetMatrix = u_offsetScaleMatrix;\r\n    if (a_rotateWithView == 1.0) {\r\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n    }\r\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\r\n    v_texCoord = a_texCoord;\r\n  }`;\r\n\r\nconst FRAGMENT_SHADER = `\r\n  precision mediump float;\r\n  uniform float u_opacity;\r\n  \r\n  varying vec2 v_texCoord;\r\n  \r\n  void main(void) {\r\n    gl_FragColor.rgb = vec3(1.0, 1.0, 1.0);\r\n    float alpha = u_opacity;\r\n    if (alpha == 0.0) {\r\n      discard;\r\n    }\r\n    gl_FragColor.a = alpha;\r\n  }`;\r\n\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\r\n * source to compute the size of the quad on screen (in pixels). This only done on source change.\r\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\r\n * source to compute the coordinate of the quad center on screen (in pixels). This only done on source change.\r\n * The second argument is 0 for `x` component and 1 for `y`.\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * WebGL vector renderer optimized for points.\r\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\r\n * every time the vector source changes.\r\n *\r\n * Use shaders to customize the final output.\r\n *\r\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *   ```\r\n *   precision mediump float;\r\n *   attribute vec2 a_position;\r\n *   attribute vec2 a_texCoord;\r\n *   attribute float a_rotateWithView;\r\n *   attribute vec2 a_offsets;\r\n *\r\n *   uniform mat4 u_projectionMatrix;\r\n *   uniform mat4 u_offsetScaleMatrix;\r\n *   uniform mat4 u_offsetRotateMatrix;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *\r\n *   void main(void) {\r\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\r\n *     if (a_rotateWithView == 1.0) {\r\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n *     }\r\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\r\n *     v_texCoord = a_texCoord;\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *   ```\r\n *   precision mediump float;\r\n *   uniform float u_opacity;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *\r\n *   void main(void) {\r\n *     gl_FragColor.rgb = vec3(1.0, 1.0, 1.0);\r\n *     float alpha = u_opacity;\r\n *     if (alpha == 0.0) {\r\n *       discard;\r\n *     }\r\n *     gl_FragColor.a = alpha;\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nclass WebGLPointsLayerRenderer extends LayerRenderer {\r\n\r\n  /**\r\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\r\n   * @param {Options=} [opt_options] Options.\r\n   */\r\n  constructor(vectorLayer, opt_options) {\r\n    super(vectorLayer);\r\n\r\n    const options = opt_options || {};\r\n\r\n    this.context_ = new WebGLHelper({\r\n      postProcesses: options.postProcesses,\r\n      uniforms: options.uniforms\r\n    });\r\n\r\n    this.sourceRevision_ = -1;\r\n\r\n    this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n    this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n\r\n    const vertexShader = new WebGLVertex(options.vertexShader || VERTEX_SHADER);\r\n    const fragmentShader = new WebGLFragment(options.fragmentShader || FRAGMENT_SHADER);\r\n    this.program_ = this.context_.getProgram(fragmentShader, vertexShader);\r\n    this.context_.useProgram(this.program_);\r\n\r\n    this.sizeCallback_ = options.sizeCallback || function(feature) {\r\n      return 1;\r\n    };\r\n    this.coordCallback_ = options.coordCallback || function(feature, index) {\r\n      const geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\r\n      return geom.getCoordinates()[index];\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  disposeInternal() {\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  renderFrame(frameState, layerState) {\r\n    this.context_.setUniformFloatValue(DefaultUniform.OPACITY, layerState.opacity);\r\n    this.context_.drawElements(0, this.indicesBuffer_.getArray().length);\r\n    this.context_.finalizeDraw(frameState);\r\n    return this.context_.getCanvas();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  prepareFrame(frameState) {\r\n    const vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    const vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\r\n\r\n    this.context_.prepareDraw(frameState);\r\n\r\n    if (this.sourceRevision_ < vectorSource.getRevision()) {\r\n      this.sourceRevision_ = vectorSource.getRevision();\r\n\r\n      const viewState = frameState.viewState;\r\n      const projection = viewState.projection;\r\n      const resolution = viewState.resolution;\r\n\r\n      // loop on features to fill the buffer\r\n      vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\r\n      vectorSource.forEachFeature((feature) => {\r\n        if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\r\n          return;\r\n        }\r\n        const x = this.coordCallback_(feature, 0);\r\n        const y = this.coordCallback_(feature, 1);\r\n        const size = this.sizeCallback_(feature);\r\n        const stride = 6;\r\n        const baseIndex = this.verticesBuffer_.getArray().length / stride;\r\n\r\n        this.verticesBuffer_.getArray().push(\r\n          x, y, -size / 2, -size / 2, 0, 0,\r\n          x, y, +size / 2, -size / 2, 1, 0,\r\n          x, y, +size / 2, +size / 2, 1, 1,\r\n          x, y, -size / 2, +size / 2, 0, 1\r\n        );\r\n        this.indicesBuffer_.getArray().push(\r\n          baseIndex, baseIndex + 1, baseIndex + 3,\r\n          baseIndex + 1, baseIndex + 2, baseIndex + 3\r\n        );\r\n      });\r\n    }\r\n\r\n    // write new data\r\n    this.context_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\r\n    this.context_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\r\n\r\n    const bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n    this.context_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\r\n    this.context_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\r\n    this.context_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\r\n\r\n    return true;\r\n  }\r\n}\r\n\r\nexport default WebGLPointsLayerRenderer;\r\n"],"names":["const","super","this"],"mappings":"AAAA;;;AAGA,OAAO,aAAa,MAAM,UAAU,CAAC;AACrC,OAAO,gBAAgB,MAAM,oBAAoB,CAAC;AAClD,QAAQ,YAAY,EAAE,YAAY,EAAE,oBAAoB,EAAE,KAAK,OAAO,aAAa,CAAC;AACpF,OAAO,WAAW,GAAG,aAAa,EAAE,cAAc,OAAO,oBAAoB,CAAC;AAC9E,OAAO,WAAW,MAAM,oBAAoB,CAAC;AAC7C,OAAO,aAAa,MAAM,sBAAsB,CAAC;AACjD,OAAO,YAAY,MAAM,yBAAyB,CAAC;;AAEnDA,GAAK,CAAC,aAAa,GAAG,kpBAqBlB,CAAC;;AAELA,GAAK,CAAC,eAAe,GAAG,gRAapB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFL,IAAM,wBAAwB,GAAsB;EAMlD,iCAAW,CAAC,WAAW,EAAE,WAAW,EAAE;IACpCC,kBAAK,OAAC,WAAW,CAAC,CAAC;;IAEnBD,GAAK,CAAC,OAAO,GAAG,WAAW,IAAI,EAAE,CAAC;;IAElC,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,CAAC;MAC9B,aAAa,EAAE,OAAO,CAAC,aAAa;MACpC,QAAQ,EAAE,OAAO,CAAC,QAAQ;KAC3B,CAAC,CAAC;;IAEH,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;;IAE1B,IAAI,CAAC,eAAe,GAAG,IAAI,gBAAgB,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;IAC9D,IAAI,CAAC,cAAc,GAAG,IAAI,gBAAgB,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;;IAE7DA,GAAK,CAAC,YAAY,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,IAAI,aAAa,CAAC,CAAC;IAC5EA,GAAK,CAAC,cAAc,GAAG,IAAI,aAAa,CAAC,OAAO,CAAC,cAAc,IAAI,eAAe,CAAC,CAAC;IACpF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;IACvE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;IAExC,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,YAAY,IAAI,SAAS,OAAO,EAAE;MAC7D,OAAO,CAAC,CAAC;KACV,CAAC;IACF,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,IAAI,SAAS,OAAO,EAAE,KAAK,EAAE;MACtEA,GAAK,CAAC,IAAI,qDAAqD,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;MACvF,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC;KACrC,CAAC;;;;;4EACH;;;;;qCAKD,2CAAe,GAAG;IAChBC,uBAAK,CAAC,oBAAe,KAAC,CAAC,CAAC;IACzB;;;;;qCAKD,mCAAW,CAAC,UAAU,EAAE,UAAU,EAAE;IAClC,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,cAAc,CAAC,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC,CAAC;IAC/E,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC;IACrE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACvC,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;IAClC;;;;;qCAKD,qCAAY,CAAC,UAAU,EAAE;;AAAC;IACxBD,GAAK,CAAC,WAAW,0DAA0D,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC7FA,GAAK,CAAC,YAAY,2DAA2D,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC;;IAEvG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;IAEtC,IAAI,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,WAAW,EAAE,EAAE;MACrD,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;;MAElDA,GAAK,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;MACvCA,GAAK,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;MACxCA,GAAK,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;;;MAGxC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;MAC9F,YAAY,CAAC,cAAc,UAAC,CAAC,OAAO,EAAE,AAAG;QACvC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,EAAE,KAAK,YAAY,CAAC,KAAK,EAAE;UACpF,OAAO;SACR;QACDA,GAAK,CAAC,CAAC,GAAGE,MAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC1CF,GAAK,CAAC,CAAC,GAAGE,MAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAC1CF,GAAK,CAAC,IAAI,GAAGE,MAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACzCF,GAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACjBA,GAAK,CAAC,SAAS,GAAGE,MAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;;QAElEA,MAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,IAAI;UAClC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;UAChC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;UAChC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;UAChC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC;SACjC,CAAC;QACFA,MAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI;UACjC,SAAS,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC;UACvC,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC;SAC5C,CAAC;OACH,CAAC,CAAC;KACJ;;;IAGD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7D,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,oBAAoB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;;IAEpEF,GAAK,CAAC,aAAa,GAAG,YAAY,CAAC,iBAAiB,CAAC;IACrD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3F,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC;IAC1G,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,aAAa,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,CAAC,CAAC;;IAE5G,OAAO,IAAI,CAAC;GACb;;;EAvGoC,gBAwGtC;;AAED,eAAe,wBAAwB,CAAC;"}