{"version":3,"file":"PostProcessingPass.js","sources":["../../../src/ol/webgl/PostProcessingPass.js"],"sourcesContent":["/**\r\n * @module ol/webgl/PostProcessingPass\r\n */\r\n\r\nconst DEFAULT_VERTEX_SHADER = `\r\n  precision mediump float;\r\n  \r\n  attribute vec2 a_position;\r\n  varying vec2 v_texCoord;\r\n  varying vec2 v_screenCoord;\r\n  \r\n  uniform vec2 u_screenSize;\r\n   \r\n  void main() {\r\n    v_texCoord = a_position * 0.5 + 0.5;\r\n    v_screenCoord = v_texCoord * u_screenSize;\r\n    gl_Position = vec4(a_position, 0.0, 1.0);\r\n  }\r\n`;\r\n\r\nconst DEFAULT_FRAGMENT_SHADER = `\r\n  precision mediump float;\r\n   \r\n  uniform sampler2D u_image;\r\n   \r\n  varying vec2 v_texCoord;\r\n  varying vec2 v_screenCoord;\r\n   \r\n  void main() {\r\n    gl_FragColor = texture2D(u_image, v_texCoord);\r\n  }\r\n`;\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {import(\"./Helper\").UniformValue} value Value\r\n * @property {number} location Location\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * This class is used to define Post Processing passes with custom shaders and uniforms.\r\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   attribute vec2 a_position;\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   uniform vec2 u_screenSize;\r\n *\r\n *   void main() {\r\n *     v_texCoord = a_position * 0.5 + 0.5;\r\n *     v_screenCoord = v_texCoord * u_screenSize;\r\n *     gl_Position = vec4(a_position, 0.0, 1.0);\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   uniform sampler2D u_image;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   void main() {\r\n *     gl_FragColor = texture2D(u_image, v_texCoord);\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nclass WebGLPostProcessingPass {\r\n\r\n  /**\r\n   * @param {Options=} options Options.\r\n   */\r\n  constructor(options) {\r\n    this.gl_ = options.webGlContext;\r\n    const gl = this.gl_;\r\n\r\n    this.scaleRatio_ = options.scaleRatio || 1;\r\n\r\n    this.renderTargetTexture_ = gl.createTexture();\r\n    this.renderTargetTextureSize_ = null;\r\n\r\n    this.frameBuffer_ = gl.createFramebuffer();\r\n\r\n    // compile the program for the frame buffer\r\n    // TODO: make compilation errors show up\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\r\n    gl.compileShader(vertexShader);\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\r\n    gl.compileShader(fragmentShader);\r\n    this.renderTargetProgram_ = gl.createProgram();\r\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\r\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\r\n    gl.linkProgram(this.renderTargetProgram_);\r\n\r\n    // bind the vertices buffer for the frame buffer\r\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\r\n    const verticesArray = [\r\n      -1, -1,\r\n      1, -1,\r\n      -1, 1,\r\n      1, -1,\r\n      1, 1,\r\n      -1, 1\r\n    ];\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\r\n\r\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\r\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\r\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\r\n\r\n    /**\r\n     * Holds info about custom uniforms used in the post processing pass\r\n     * @type {Array<UniformInternalDescription>}\r\n     * @private\r\n     */\r\n    this.uniforms_ = [];\r\n    options.uniforms && Object.keys(options.uniforms).forEach(function(name) {\r\n      this.uniforms_.push({\r\n        value: options.uniforms[name],\r\n        location: gl.getUniformLocation(this.renderTargetProgram_, name)\r\n      });\r\n    }.bind(this));\r\n  }\r\n\r\n  /**\r\n   * Get the WebGL rendering context\r\n   * @return {WebGLRenderingContext} The rendering context.\r\n   * @api\r\n   */\r\n  getGL() {\r\n    return this.gl_;\r\n  }\r\n\r\n  /**\r\n   * Initialize the render target texture of the post process, make sure it is at the\r\n   * right size and bind it as a render target for the next draw calls.\r\n   * The last step to be initialized will be the one where the primitives are rendered.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @api\r\n   */\r\n  init(frameState) {\r\n    const gl = this.getGL();\r\n    const canvas = gl.canvas;\r\n    const size = frameState.size;\r\n\r\n    // rendering goes to my buffer\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\r\n    gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\r\n\r\n    // if size has changed: adjust canvas & render target texture\r\n    if (!this.renderTargetTextureSize_ ||\r\n      this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\r\n      this.renderTargetTextureSize_ = size;\r\n\r\n      // create a new texture\r\n      const level = 0;\r\n      const internalFormat = gl.RGBA;\r\n      const border = 0;\r\n      const format = gl.RGBA;\r\n      const type = gl.UNSIGNED_BYTE;\r\n      const data = null;\r\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n      gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n        canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border,\r\n        format, type, data);\r\n\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n      // bind the texture to the framebuffer\r\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Render to the next postprocessing pass (or to the canvas if final pass).\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\r\n   * @api\r\n   */\r\n  apply(frameState, nextPass) {\r\n    const gl = this.getGL();\r\n    const canvas = gl.canvas;\r\n\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n\r\n    // render the frame buffer to the canvas\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n\r\n    gl.useProgram(this.renderTargetProgram_);\r\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\r\n    gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\r\n    gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\r\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\r\n\r\n    this.applyUniforms(frameState);\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n  }\r\n\r\n  /**\r\n   * @returns {WebGLFramebuffer} Frame buffer\r\n   * @api\r\n   */\r\n  getFrameBuffer() {\r\n    return this.frameBuffer_;\r\n  }\r\n\r\n  /**\r\n   * Sets the custom uniforms based on what was given in the constructor.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  applyUniforms(frameState) {\r\n    const gl = this.getGL();\r\n\r\n    let value;\r\n    let textureSlot = 1;\r\n    this.uniforms_.forEach(function(uniform) {\r\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n\r\n      // apply value based on type\r\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\r\n        // create a texture & put data\r\n        if (!uniform.texture) {\r\n          uniform.texture = gl.createTexture();\r\n        }\r\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\r\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        if (value instanceof ImageData) {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0,\r\n            gl.UNSIGNED_BYTE, new Uint8Array(value.data));\r\n        } else {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n        }\r\n\r\n        // fill texture slots\r\n        gl.uniform1i(uniform.location, textureSlot++);\r\n\r\n      } else if (Array.isArray(value)) {\r\n        switch (value.length) {\r\n          case 2:\r\n            gl.uniform2f(uniform.location, value[0], value[1]);\r\n            return;\r\n          case 3:\r\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\r\n            return;\r\n          case 4:\r\n            gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\r\n            return;\r\n          default: return;\r\n        }\r\n      } else if (typeof value === 'number') {\r\n        gl.uniform1f(uniform.location, value);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default WebGLPostProcessingPass;\r\n"],"names":["const","let"],"mappings":"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"}