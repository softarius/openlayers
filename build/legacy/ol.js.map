{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/LayerType.js","webpack://ol/./build/ol/layer/VectorRenderType.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/canvas/Map.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/IntermediateCanvas.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/render/ReplayGroup.js","webpack://ol/./build/ol/render/ReplayType.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/replay.js","webpack://ol/./build/ol/render/canvas/Replay.js","webpack://ol/./build/ol/render/canvas/ImageReplay.js","webpack://ol/./build/ol/render/canvas/LineStringReplay.js","webpack://ol/./build/ol/render/canvas/PolygonReplay.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/render/canvas/TextReplay.js","webpack://ol/./build/ol/render/canvas/ReplayGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/Graticule.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/webgl/Shader.js","webpack://ol/./build/ol/webgl/Fragment.js","webpack://ol/./build/ol/webgl/Vertex.js","webpack://ol/./build/ol/render/webgl/circlereplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/render/webgl/Replay.js","webpack://ol/./build/ol/render/webgl.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/render/webgl/CircleReplay.js","webpack://ol/./build/ol/render/webgl/texturereplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/webgl/Context.js","webpack://ol/./build/ol/render/webgl/TextureReplay.js","webpack://ol/./build/ol/render/webgl/ImageReplay.js","webpack://ol/./build/ol/geom/flat/topology.js","webpack://ol/./build/ol/render/webgl/linestringreplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack://ol/./build/ol/render/webgl/LineStringReplay.js","webpack://ol/./build/ol/render/webgl/polygonreplay/defaultshader.js","webpack://ol/./build/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack://ol/./build/ol/structs/LinkedList.js","webpack://ol/./build/ol/render/webgl/PolygonReplay.js","webpack://ol/./build/ol/style/Atlas.js","webpack://ol/./build/ol/style/AtlasManager.js","webpack://ol/./build/ol/render/webgl/ReplayGroup.js","webpack://ol/./build/ol/render/webgl/TextReplay.js","webpack://ol/./build/ol/render/webgl/Immediate.js","webpack://ol/./build/ol/renderer/webgl/defaultmapshader.js","webpack://ol/./build/ol/renderer/webgl/defaultmapshader/Locations.js","webpack://ol/./build/ol/renderer/webgl/Layer.js","webpack://ol/./build/ol/renderer/webgl/ImageLayer.js","webpack://ol/./build/ol/renderer/webgl/Map.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/renderer/webgl/tilelayershader.js","webpack://ol/./build/ol/renderer/webgl/tilelayershader/Locations.js","webpack://ol/./build/ol/renderer/webgl/TileLayer.js","webpack://ol/./build/ol/renderer/webgl/VectorLayer.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorImageTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/WebGLMap.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js","webpack://ol/./build/ol/render.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","floor","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","numberSafeCompareFunction","includes","linearFindNearest","target","direction","reverseSubArray","begin","extension","isArray","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","util_abstract","uidCounter_","getUid","ol_uid","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","var_sources","arguments$1","arguments","undefined","TypeError","ii","obj_clear","getValues","values","obj_isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event_Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","once","un","ObjectEvent","Event","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","Property","CollectionEvent","opt_element","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","clamp","cosh","x","y","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cache","cacheSize","g","exec","style","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","hasAlpha","parseInt","substr","normalize","Number","fromStringInternal_","asArray","asColorLike","MapEventType","createCanvasContext2D","opt_width","opt_height","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChildren","lastChild","control_Control","Control","target_","map_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","getElementById","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","layer_Property","OPACITY","VISIBLE","EXTENT","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","properties","opacity","visible","zIndex","maxResolution","minResolution","state_","getType","getLayerState","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getZIndex","getMaxResolution","getMinResolution","getLayersArray","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","render_EventType","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","State","UNDEFINED","LOADING","READY","visibleAtResolution","layerState","resolution","layer_Layer","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","states","getSource","getState","handleSourceChange_","renderEvent","frameState","layerStatesArray","layerStates","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","button","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","viewState","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","createTextNode","labelActive","labelActiveNode_","button_","setClassName_","keys_","source_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","getTargetElement","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","add","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","sin","cos","atan2","getLengthInternal","coordinates","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","createEmpty","extendCoordinate","extent_buffer","opt_extent","extent_clone","closestSquaredDistanceXY","containsCoordinate","coordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getForViewAndSize","center","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","transform","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","projections_get","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","proj_getTransform","proj_transform","transformExtent","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","PROJECTION","MousePosition_render","mapProjection_","transform_","control_MousePosition","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","getProjection","handleMouseMove","getEventPixel","updateHTML_","handleMouseOut","viewport","getViewport","html","getCoordinateFromPixel","ol_MapEvent","MapEvent","opt_frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","dragging","has_ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","i$1","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","found","array_remove","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","IDLE","LOADED","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","structs_PriorityQueue","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","delta","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","coordinate_add","closestOnSegment","segment","start","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","angle","cosAngle","sinAngle","coordinate_scale","scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","GeometryLayout","XY","XYZ","XYM","XYZM","transform2D","opt_dest","dest","transform_translate","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","setFromArray","ol_transform_rotate","ol_transform_scale","ol_transform_translate","transform_compose","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","determinant","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","clone","closestPointXY","closestPoint","minSquaredDistance","containsXY","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","anchor","opt_sy","opt_anchor","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","applyTransform","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","polygon","makeRegular","getRadius","startAngle","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","complete","duration","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","position","centerX","centerY","hint","Group_Property","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","ownLayerState","size_buffer","size_scale","ratio","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","getLoading","loading","dispatchRenderEvent","postRenderFunctions","targetElement","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","previousFrameState","hasArea","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","offsetWidth","parseFloat","offsetHeight","unskipFeature","Rotate_render","rotation_","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","out_","mapExtent","boxPixelExtent","createOrUpdateFromCoordinates","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ol_ImageBase","ImageBase","getImage","getPixelRatio","ImageState","ol_ImageCanvas","ImageCanvas","opt_loader","loader_","canvas_","error_","getError","handleLoad_","err","LayerType","IMAGE","TILE","VECTOR_TILE","VECTOR","VectorRenderType","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","measureTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","w","alpha","globalAlpha","setTransform","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","expireIconCache","sortByZIndex","state1","state2","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","getWrapX","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerRendererConstructors","canvas_Map","CanvasMapRenderer","insertBefore","childNodes","getTransform","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","numLayers","forEachLayerAtCoordinate","ctor","renderer_Layer","LayerRenderer","layer_","createLoadedTileFinder","tiles","tileRange","forEachLoadedTile","tileCoord","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTileRangeForExtentAndZ","getTile","getTileCoordCenter","useTile","canvas_Layer","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","postCompose","preCompose","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getRenderMode","mapRenderer","canvas_ImageLayer","TileRange","TileRange_createOrUpdate","containsTileRange","ol_TileRange","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","getTileCoord","drawTileImage","gutter","transition","getTileImage","getOpaque","alphaChanged","endTransition","canvas_TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","lineStringLength","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay_tmpTransform","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textStates","parts","cc","chars","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","canvas_VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","canvas_VectorTileLayer","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","marginLeft","marginRight","dom_outerWidth","marginTop","marginBottom","dom_outerHeight","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","getOptions","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","res","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","firstElementChild","drag","getPositionForResolution_","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometry","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","createStyleFunction","setId","FormatType","ARRAY_BUFFER","JSON","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","addFeatures","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformWithOptions","transformed","decimals","getObject","parse","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geom_MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","geom_MultiPoint","appendPoint","getPoint","getPoints","points","center_linearRingss","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GEOMETRY_READERS","getGeometryLayout","paths","rings","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","geometryName","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","Filter_Filter","tagName_","getTagName","filter_Filter","filter_Bbox","Filter","Bbox","opt_srsName","srsName","filter_Spatial","Spatial","filter_Contains","Contains","filter_Comparison","Comparison","propertyName","filter_During","During","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","filter_EqualTo","EqualTo","filter_GreaterThan","GreaterThan","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","filter_Intersects","Intersects","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","filter_IsNull","IsNull","filter_LessThan","LessThan","filter_LessThanOrEqualTo","LessThanOrEqualTo","filter_Not","Not","filter_NotEqualTo","NotEqualTo","filter_LogicalNary","LogicalNary","conditions","filter_Or","Or","filter_Within","Within","filter_And","And","and","params","filter_bbox","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","isDocument","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","uri","featureTypes","ii$1","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","segments","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","geom","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","proj","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32","http://www.opengis.net/gml/3.2","format_GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","GPX_appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","Fill","color_","checksum_","setColor","getChecksum","style_Fill","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageListenerKeys_","imageState_","size_","src_","tainted_","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","style_Image","style_Icon","ImageStyle","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","style_RegularShape","RegularShape","checksums_","hitDetectionCanvas_","radius_","radius1","radius2_","radius2","stroke_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","style_Circle","CircleStyle","setRadius","Style","geometryFunction_","defaultGeometryFunction","zIndex_","toFunction","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","style_Style","Text_Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","style_Text","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","KML_readLineString","KML_readLinearRing","KML_readPoint","KML_readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","geometry$1","createNameStyleFunction","mpoint","icon0","rotUrl","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","location","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","LineSymbolizer","LS_STYLE_PARSERS","styleObject","console","LSTROKE_STYLE_PARSERS","SvgParameter","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","bar","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","d$1","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","layersPBFReader","layerPBFReader","version","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","pbf_default","pbfLayers","pbfLayer","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","nodes","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","collection","readFeatureFromGeometry","transformArc","vertex","format_TopoJSON","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","consume_","isTokenType","match","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","token","geomType","GeometryEncoder","components","geoms","encode","enc","geometryEncoder","encodeGeometryLayout","format_WKT","WKT","splitCollection_","splitCollection","parse_","NAMESPACE_URI","readHref","XML_XML","readFromDocument","readFromNode","format_XML","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","opaque","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","resource","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","ol_Geolocation","Geolocation","position_","watchId_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","meridian","lon","frac","parallel","lon2","Graticule_DEFAULT_STROKE_STYLE","INTERVALS","Graticule_Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","intervals_","intervals","addMeridian_","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","getMeridians","getParallels","handlePostCompose_","labelData","updateProjectionInfo_","epsg4326Projection","worldExtentP","ol_Graticule","DragAndDropEventType","DragAndDropEvent","file","opt_features","opt_projection","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Vector_Property","Vector_VectorLayer","VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","Vector","loadingstrategy_all","loadingstrategy_bbox","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","source_Vector","VectorSource","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","pixelCoordinate","getSegments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","Modify_getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","depth","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","Select_getDefaultStyleFunction","featureOverlay_","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","BaseImageLayer","BaseImage","TileProperty","BaseTile_BaseTileLayer","BaseTileLayer","setPreload","setUseInterimTilesOnError","BaseTile","BaseVector_Property","BaseVector_BaseVectorLayer","BaseVectorLayer","BaseVector","layer_Graticule_DEFAULT_STROKE_STYLE","Graticule_INTERVALS","layer_Graticule","Graticule","lonLabelStyleCache_","latLabelStyleCache_","loaderFunction","featurePool_","lineStyle_","tmpExtent_","renderExtent","featureCount","featuresColl","poolIndex","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","Image_ImageLayer","ImageLayer","layer_Image","Tile_TileLayer","TileLayer","layer_Tile","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","image$1","VectorImage","VectorImageLayer","VectorTile_VectorTileLayer","VectorTileLayer","layer_VectorTile","DYNAMIC_DRAW","LINEAR","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","CONTEXT_IDS","webgl_getContext","opt_attributes","MAX_TEXTURE_SIZE","EXTENSIONS","webgl_gl","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","Shader_WebGLShader","isAnimated","Shader","Fragment","WebGLShader","WebGLFragment","Vertex","WebGLVertex","fragment","defaultshader_vertex","defaultshader_Locations","gl","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","webgl_Replay","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_TEST","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","CircleReplay","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","CanvasGradient","CanvasPattern","defaultshader_fragment","texturereplay_defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","LOST","RESTORED","Context_createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","createEmptyTexture","texImage2D","RGBA","UNSIGNED_BYTE","Context","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","key$1","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","TextureReplay","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","webgl_ImageReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","lineStringIsClosed","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","LineStringReplay_Instruction","webgl_LineStringReplay","WebGLLineStringReplay","startCoords","sign","p0","lastSign","addVertices_","product","isValid_","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","DEPTH_TEST","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","webgl_PolygonReplay","WebGLPolygonReplay","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ua","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","HIT_DETECTION_SIZE","ReplayGroup_BATCH_CONSTRUCTORS","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","self","textHeight","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","hash","calculateHash_","webgl_ReplayGroup","WebGLReplayGroup","functions","replayHitDetection_","readPixels","webgl_Immediate","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","webgl_Layer","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","ImageLayer_WebGLImageLayerRenderer","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","webgl_ImageLayer","webgl_Map","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","tileSize","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","imageTile","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","clearColor","layerState$1","WebGLPostProcessingPass","webGlContext","scaleRatio_","scaleRatio","renderTargetTexture_","renderTargetTextureSize_","frameBuffer_","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","renderTargetVerticesBuffer_","STATIC_DRAW","renderTargetAttribLocation_","renderTargetUniformLocation_","renderTargetTextureLocation_","uniforms_","uniforms","init","getFrameBuffer","internalFormat","CLAMP_TO_EDGE","nextPass","TEXTURE0","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","FLOAT","uniform2f","applyUniforms","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","uniform3f","uniform4f","PostProcessingPass","DefaultUniform","DefaultAttrib","Helper","WebGLHelper","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","bufferCache","prepareDraw","ONE","applyFrameState","UNSIGNED_INT","UNSIGNED_SHORT","finalizeDraw","setUniformMatrixValue","getAttributeLocation","setUniformFloatValue","enableAttributeArray","attribName","createTextureInternal","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","baseIndex","bytesPerFloat","BYTES_PER_ELEMENT","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","tilecoord_hash","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","tmpTileCoord","TileGrid_TileGrid","opt_func","opt_strict","currentVal","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","gridOptions","extentFromProjection","half","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","worldsAway","tilegrid_wrapX","withinExtentAndZ","TileSourceEvent","source_Tile","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","TileLayer_WebGLTileLayerRenderer","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","roundUpToPowerOfTwo","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","webgl_TileLayer","VectorLayer_WebGLVectorLayerRenderer","WebGLVectorLayerRenderer","layerState_","SCISSOR_TEST","scissor","webgl_VectorLayer","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","TileEventType","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","defaultTileLoadFunction","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","zoomMax","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","source_XYZ","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","tilesUrl","cdn_url","https","layergroupid","source_Cluster","Cluster","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","keyParams","encodeURIComponent","qs","source_ImageArcGISRest","ImageArcGISRest","params_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent_","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","ATTRIBUTION","source_OSM","OSM","RasterEventType","RasterOperationType","PIXEL","RasterSourceEvent","sharedContext","Raster_createRenderer","layerOrSource","createTileRenderer","createImageRenderer","Raster","RasterSource","worker_","operationType_","operationType","threads_","renderers_","createRenderers","Raster_getLayerStatesArray","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_tileUrlFunction","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","attributionExtent","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","ol_VectorImageTile","VectorImageTile","sourceTiles","replayState_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","errorSourceTiles","empty","defaultLoadFunction","onLoad","onError","DEFAULT_EXTENT","ol_VectorTile","VectorTile","replayGroups_","setFeatures","source_VectorTile","tileGrids_","WMTSRequestEncoding","KVP","REST","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","source_WMTS","WMTS","requestEncoding","version_","dimensions_","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Version","localContext","TileCol","TileRow","TierSizeCalculation","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","ol_WebGLMap","WebGLMap","ol","colorlike","featureloader","loadingstrategy","proj4","webgl","sphere","unByKey","createStringXY","toStringHDMS","upAndDown","click","doubleClick","platformModifierKeyOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","inherits","childCtor","parentCtor","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","sphere_getLength","AtlasManager","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\r\n//# sourceMappingURL=array.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\r\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\r\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\r\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\r\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\r\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\r\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\r\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\r\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\r\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\r\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\r\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\r\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\r\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\r\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\r\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\r\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\r\n//# sourceMappingURL=color.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\r\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\r\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\r\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\r\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\r\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\r\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\r\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\r\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\r\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\r\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\r\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\r\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\r\n//# sourceMappingURL=GeometryType.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\r\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\r\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\r\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\r\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\r\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\r\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\r\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\r\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\r\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\r\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\r\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /*@__PURE__*/(function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\r\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\r\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\r\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\r\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\r\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\r\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\r\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\r\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\r\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\r\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\r\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\r\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\r\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\r\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\r\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\r\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\r\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\r\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\r\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\r\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\r\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\r\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\r\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\r\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\r\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\r\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\r\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\r\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\r\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\r\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\r\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\r\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\r\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\r\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\r\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\r\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\r\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\r\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\r\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\r\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\r\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\r\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\r\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\r\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\r\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\r\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\r\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\r\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\r\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\r\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\r\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\r\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\r\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\r\n//# sourceMappingURL=util.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\r\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\r\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\r\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\r\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\r\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\r\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\r\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\r\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\r\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\r\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\r\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\r\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\r\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\r\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\r\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\r\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\r\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\r\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\r\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\r\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\r\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\r\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\r\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\r\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\r\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\r\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\r\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\r\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\r\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\r\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\r\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\r\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\r\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\r\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\r\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\r\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\r\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\r\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\r\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\r\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\r\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\r\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\r\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\r\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\r\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\r\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\r\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\r\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\r\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\r\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\r\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\r\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\r\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\r\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\r\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\r\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\r\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\r\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\r\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\r\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\r\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /*@__PURE__*/(function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\r\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /*@__PURE__*/(function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\r\n//# sourceMappingURL=ZoomToExtent.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\r\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\r\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\r\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\r\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\r\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\r\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\r\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\r\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\r\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\r\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\r\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /*@__PURE__*/(function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var options = opt_options ? opt_options : {};\n    if (object['features']) {\n      var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureSet.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n      var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n      var crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureSet} */ ({\n      'features': objects\n    });\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  var type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = GeometryType.POINT;\n  } else if (object['points']) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object['paths']) {\n    var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object['rings']) {\n    var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    var layout = getGeometryLayout(esriJSONPolygon);\n    var rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object['rings'] = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object['rings'] = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\n  var esriJSON;\n  var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(lineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(polygon);\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiLineString);\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiPoint);\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    }\n  );\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\n  var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {import(\"../geom/Geometry.js\").default} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n\r\n//# sourceMappingURL=EsriJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = function Filter(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function getTagName () {\n  return this.tagName_;\n};\n\nexport default Filter;\n\r\n//# sourceMappingURL=Filter.js.map","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /*@__PURE__*/(function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\n\n    Filter.call(this, 'BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\n\nexport default Bbox;\n\r\n//# sourceMappingURL=Bbox.js.map","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /*@__PURE__*/(function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\n\nexport default Spatial;\n\r\n//# sourceMappingURL=Spatial.js.map","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /*@__PURE__*/(function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\n\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\n\nexport default Contains;\n\r\n//# sourceMappingURL=Contains.js.map","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /*@__PURE__*/(function (Filter) {\n  function Comparison(tagName, propertyName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\n\nexport default Comparison;\n\r\n//# sourceMappingURL=Comparison.js.map","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /*@__PURE__*/(function (Comparison) {\n  function During(propertyName, begin, end) {\n    Comparison.call(this, 'During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\n\nexport default During;\n\r\n//# sourceMappingURL=During.js.map","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /*@__PURE__*/(function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n\n    Comparison.call(this, tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\n\nexport default ComparisonBinary;\n\r\n//# sourceMappingURL=ComparisonBinary.js.map","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\n\nexport default EqualTo;\n\r\n//# sourceMappingURL=EqualTo.js.map","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /*@__PURE__*/(function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\n\nexport default GreaterThan;\n\r\n//# sourceMappingURL=GreaterThan.js.map","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default GreaterThanOrEqualTo;\n\r\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /*@__PURE__*/(function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\n\nexport default Intersects;\n\r\n//# sourceMappingURL=Intersects.js.map","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /*@__PURE__*/(function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\n\nexport default IsBetween;\n\r\n//# sourceMappingURL=IsBetween.js.map","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /*@__PURE__*/(function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\n\nexport default IsLike;\n\r\n//# sourceMappingURL=IsLike.js.map","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /*@__PURE__*/(function (Comparison) {\n  function IsNull(propertyName) {\n    Comparison.call(this, 'PropertyIsNull', propertyName);\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\n\nexport default IsNull;\n\r\n//# sourceMappingURL=IsNull.js.map","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /*@__PURE__*/(function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\n\nexport default LessThan;\n\r\n//# sourceMappingURL=LessThan.js.map","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default LessThanOrEqualTo;\n\r\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /*@__PURE__*/(function (Filter) {\n  function Not(condition) {\n\n    Filter.call(this, 'Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\n\nexport default Not;\n\r\n//# sourceMappingURL=Not.js.map","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\n\nexport default NotEqualTo;\n\r\n//# sourceMappingURL=NotEqualTo.js.map","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /*@__PURE__*/(function (Filter) {\n  function LogicalNary(tagName, conditions) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\n\nexport default LogicalNary;\n\r\n//# sourceMappingURL=LogicalNary.js.map","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /*@__PURE__*/(function (LogicalNary) {\n  function Or(conditions) {\n    LogicalNary.call(this, 'Or', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\n\nexport default Or;\n\r\n//# sourceMappingURL=Or.js.map","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /*@__PURE__*/(function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\n\nexport default Within;\n\r\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /*@__PURE__*/(function (LogicalNary) {\n  function And(conditions) {\n    LogicalNary.call(this, 'And', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\n\nexport default And;\n\r\n//# sourceMappingURL=And.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\r\n//# sourceMappingURL=filter.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\r\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\r\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\r\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\r\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /*@__PURE__*/(function (XMLFeature) {\n  function GMLBase(opt_options) {\n    XMLFeature.call(this);\n\n    var options = /** @type {Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\n    var localName = node.localName;\n    var features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      var context = objectStack[0];\n      var featureType = context['featureType'];\n      var featureNS = context['featureNS'];\n      var prefix = 'p';\n      var defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          var child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            var ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              var key = '';\n              var count = 0;\n              var uri = child.namespaceURI;\n              for (var candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        var ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      var parsersNS = {};\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (var p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i$1].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i$1].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this.readFeatureElement, this) :\n                  makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|undefined} Geometry.\n   */\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\n    var context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {import(\"../geom/Geometry.js\").default} */\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  GMLBase.prototype.readFeatureElementInternal = function readFeatureElementInternal (node, objectStack, asFeature) {\n    var geometryName;\n    var values = {};\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var value = (void 0);\n      var localName = n.localName;\n      // first, check if it is simple attribute\n      if (n.childNodes.length === 0\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry\n          value = this.readGeometryElement(n, objectStack);\n        }\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n\n      var len = n.attributes.length;\n      if (len > 0) {\n        values[localName] = {_content_: values[localName]};\n        for (var i = 0; i < len; i++) {\n          var attName = n.attributes[i].name;\n          values[localName][attName] = n.attributes[i].value;\n        }\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      var feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      var fid = node.getAttribute('fid') ||\n           getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  };\n\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\n    var ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    var features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  };\n\n  return GMLBase;\n}(XMLFeature));\n\n\nGMLBase.prototype.namespace = GMLNS;\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n\r\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\r\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /*@__PURE__*/(function (GMLBase) {\n  function GML3(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Polygon|undefined} Polygon.\n   */\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {LineString|undefined} LineString.\n   */\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      var i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    var len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    var coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    var dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (/** @type {Element} */ (node.parentNode).getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    var x, y, z;\n    var flatCoordinates = [];\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    var point = value.getCoordinates();\n    var coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace,\n      nodeName);\n  };\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS(this.namespace, 'geom');\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Element} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n\r\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n\r\n//# sourceMappingURL=GML.js.map","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /*@__PURE__*/(function (GMLBase) {\n  function GML2(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Element} coordinates node.\n   * @private\n   */\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n\r\n//# sourceMappingURL=GML2.js.map","/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {makeArrayPusher, makeReplacer, makeChildAppender} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /*@__PURE__*/(function (GML3) {\n  function GML32(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n\n    GML3.call(this, options);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n\n  }\n\n  if ( GML3 ) GML32.__proto__ = GML3;\n  GML32.prototype = Object.create( GML3 && GML3.prototype );\n  GML32.prototype.constructor = GML32;\n\n  return GML32;\n}(GML3));\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML32.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML32.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML32;\n\r\n//# sourceMappingURL=GML32.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /*@__PURE__*/(function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString = /** @type {LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString = /** @type {MultiLineString} */ (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    var point = /** @type {Point} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\r\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return abstract();\n  };\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\r\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /*@__PURE__*/(function (TextFeature) {\n  function IGC(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var altitudeMode = this.altitudeMode_;\n    var lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    var properties = {};\n    var flatCoordinates = [];\n    var year = 2000;\n    var month = 0;\n    var day = 1;\n    var lastDateTime = -1;\n    var i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      var line = lines[i];\n      var m = (void 0);\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          var hour = parseInt(m[1], 10);\n          var minute = parseInt(m[2], 10);\n          var second = parseInt(m[3], 10);\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            var z = (void 0);\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    var lineString = new LineString(flatCoordinates, layout);\n    var feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  };\n\n  return IGC;\n}(TextFeature));\n\nexport default IGC;\n\r\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\r\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\r\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\r\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\r\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\r\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\r\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\r\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\r\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\r\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\r\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\r\n//# sourceMappingURL=Text.js.map","/**\r\n * @module ol/format/KML\r\n */\r\nimport Feature from '../Feature.js';\r\nimport { extend, includes } from '../array.js';\r\nimport { assert } from '../asserts.js';\r\nimport { asArray } from '../color.js';\r\nimport { transformWithOptions } from './Feature.js';\r\nimport XMLFeature from './XMLFeature.js';\r\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\r\nimport GeometryCollection from '../geom/GeometryCollection.js';\r\nimport GeometryLayout from '../geom/GeometryLayout.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport Polygon from '../geom/Polygon.js';\r\nimport { toRadians } from '../math.js';\r\nimport { get as getProjection } from '../proj.js';\r\nimport Fill from '../style/Fill.js';\r\nimport Icon from '../style/Icon.js';\r\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\r\nimport IconOrigin from '../style/IconOrigin.js';\r\nimport Stroke from '../style/Stroke.js';\r\nimport Style from '../style/Style.js';\r\nimport Text from '../style/Text.js';\r\nimport {\r\n  createElementNS, getAllTextContent, isDocument, makeArrayExtender,\r\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\r\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\r\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\r\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI\r\n} from '../xml.js';\r\n\r\n/**\r\n * @typedef {Object} Vec2\r\n * @property {number} x\r\n * @property {IconAnchorUnits} xunits\r\n * @property {number} y\r\n * @property {IconAnchorUnits} yunits\r\n * @property {IconOrigin} origin\r\n */\r\n\r\n/**\r\n * @typedef {Object} GxTrackObject\r\n * @property {Array<number>} flatCoordinates\r\n * @property {Array<number>} whens\r\n */\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<string>}\r\n */\r\nvar GX_NAMESPACE_URIS = [\r\n  'http://www.google.com/kml/ext/2.2'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Array<null|string>}\r\n */\r\nvar NAMESPACE_URIS = [\r\n  null,\r\n  'http://earth.google.com/kml/2.0',\r\n  'http://earth.google.com/kml/2.1',\r\n  'http://earth.google.com/kml/2.2',\r\n  'http://www.opengis.net/kml/2.2',\r\n  'http://www.openlayers.org'\r\n];\r\n\r\n\r\n/**\r\n * @const\r\n * @type {string}\r\n */\r\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\r\n  'https://developers.google.com/kml/schema/kml22gx.xsd';\r\n\r\n\r\n/**\r\n * @type {Object<string, IconAnchorUnits>}\r\n */\r\nvar ICON_ANCHOR_UNITS_MAP = {\r\n  'fraction': IconAnchorUnits.FRACTION,\r\n  'pixels': IconAnchorUnits.PIXELS,\r\n  'insetPixels': IconAnchorUnits.PIXELS\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PLACEMARK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ExtendedData': extendedDataParser,\r\n    'Region': regionParser,\r\n    'MultiGeometry': makeObjectPropertySetter(\r\n      readMultiGeometry, 'geometry'),\r\n    'LineString': makeObjectPropertySetter(\r\n      readLineString, 'geometry'),\r\n    'LinearRing': makeObjectPropertySetter(\r\n      readLinearRing, 'geometry'),\r\n    'Point': makeObjectPropertySetter(\r\n      readPoint, 'geometry'),\r\n    'Polygon': makeObjectPropertySetter(\r\n      readPolygon, 'geometry'),\r\n    'Style': makeObjectPropertySetter(readStyle),\r\n    'StyleMap': placemarkStyleMapParser,\r\n    'address': makeObjectPropertySetter(readString),\r\n    'description': makeObjectPropertySetter(readString),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'open': makeObjectPropertySetter(readBoolean),\r\n    'phoneNumber': makeObjectPropertySetter(readString),\r\n    'styleUrl': makeObjectPropertySetter(readURI),\r\n    'visibility': makeObjectPropertySetter(readBoolean)\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'MultiTrack': makeObjectPropertySetter(\r\n        readGxMultiTrack, 'geometry'),\r\n      'Track': makeObjectPropertySetter(\r\n        readGxTrack, 'geometry')\r\n    }\r\n  ));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar NETWORK_LINK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ExtendedData': extendedDataParser,\r\n    'Region': regionParser,\r\n    'Link': linkParser,\r\n    'address': makeObjectPropertySetter(readString),\r\n    'description': makeObjectPropertySetter(readString),\r\n    'name': makeObjectPropertySetter(readString),\r\n    'open': makeObjectPropertySetter(readBoolean),\r\n    'phoneNumber': makeObjectPropertySetter(readString),\r\n    'visibility': makeObjectPropertySetter(readBoolean)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'href': makeObjectPropertySetter(readURI)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar REGION_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LatLonAltBox': latLonAltBoxParser,\r\n    'Lod': lodParser\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar KML_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'Document', 'Placemark'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar KML_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Document': makeChildAppender(writeDocument),\r\n    'Placemark': makeChildAppender(writePlacemark)\r\n  });\r\n\r\n\r\n/**\r\n * @type {import(\"../color.js\").Color}\r\n */\r\nvar DEFAULT_COLOR;\r\n\r\n/**\r\n * @type {Fill}\r\n */\r\nvar DEFAULT_FILL_STYLE = null;\r\n\r\n/**\r\n * Get the default fill style (or null if not yet set).\r\n * @return {Fill} The default fill style.\r\n */\r\nexport function getDefaultFillStyle() {\r\n  return DEFAULT_FILL_STYLE;\r\n}\r\n\r\n/**\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\r\n\r\n/**\r\n * @type {IconAnchorUnits}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\r\n\r\n/**\r\n * @type {IconAnchorUnits}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\r\n\r\n/**\r\n * @type {import(\"../size.js\").Size}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_SIZE;\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar DEFAULT_IMAGE_STYLE_SRC;\r\n\r\n/**\r\n * @type {number}\r\n */\r\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\r\n\r\n/**\r\n * @type {import(\"../style/Image.js\").default}\r\n */\r\nvar DEFAULT_IMAGE_STYLE = null;\r\n\r\n/**\r\n * Get the default image style (or null if not yet set).\r\n * @return {import(\"../style/Image.js\").default} The default image style.\r\n */\r\nexport function getDefaultImageStyle() {\r\n  return DEFAULT_IMAGE_STYLE;\r\n}\r\n\r\n/**\r\n * @type {string}\r\n */\r\nvar DEFAULT_NO_IMAGE_STYLE;\r\n\r\n/**\r\n * @type {Stroke}\r\n */\r\nvar DEFAULT_STROKE_STYLE = null;\r\n\r\n/**\r\n * Get the default stroke style (or null if not yet set).\r\n * @return {Stroke} The default stroke style.\r\n */\r\nexport function getDefaultStrokeStyle() {\r\n  return DEFAULT_STROKE_STYLE;\r\n}\r\n\r\n/**\r\n * @type {Stroke}\r\n */\r\nvar DEFAULT_TEXT_STROKE_STYLE;\r\n\r\n/**\r\n * @type {Text}\r\n */\r\nvar DEFAULT_TEXT_STYLE = null;\r\n\r\n/**\r\n * Get the default text style (or null if not yet set).\r\n * @return {Text} The default text style.\r\n */\r\nexport function getDefaultTextStyle() {\r\n  return DEFAULT_TEXT_STYLE;\r\n}\r\n\r\n/**\r\n * @type {Style}\r\n */\r\nvar DEFAULT_STYLE = null;\r\n\r\n/**\r\n * Get the default style (or null if not yet set).\r\n * @return {Style} The default style.\r\n */\r\nexport function getDefaultStyle() {\r\n  return DEFAULT_STYLE;\r\n}\r\n\r\n/**\r\n * @type {Array<Style>}\r\n */\r\nvar DEFAULT_STYLE_ARRAY = null;\r\n\r\n/**\r\n * Get the default style array (or null if not yet set).\r\n * @return {Array<Style>} The default style.\r\n */\r\nexport function getDefaultStyleArray() {\r\n  return DEFAULT_STYLE_ARRAY;\r\n}\r\n\r\n\r\nfunction createStyleDefaults() {\r\n\r\n  DEFAULT_COLOR = [255, 255, 255, 1];\r\n\r\n  DEFAULT_FILL_STYLE = new Fill({\r\n    color: DEFAULT_COLOR\r\n  });\r\n\r\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\r\n\r\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\r\n\r\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\r\n\r\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\r\n\r\n  DEFAULT_IMAGE_STYLE_SRC =\r\n    'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\r\n\r\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\r\n\r\n  DEFAULT_IMAGE_STYLE = new Icon({\r\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\r\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\r\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\r\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\r\n    crossOrigin: 'anonymous',\r\n    rotation: 0,\r\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\r\n    size: DEFAULT_IMAGE_STYLE_SIZE,\r\n    src: DEFAULT_IMAGE_STYLE_SRC\r\n  });\r\n\r\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\r\n\r\n  DEFAULT_STROKE_STYLE = new Stroke({\r\n    color: DEFAULT_COLOR,\r\n    width: 1\r\n  });\r\n\r\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\r\n    color: [51, 51, 51, 1],\r\n    width: 2\r\n  });\r\n\r\n  DEFAULT_TEXT_STYLE = new Text({\r\n    font: 'bold 16px Helvetica',\r\n    fill: DEFAULT_FILL_STYLE,\r\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\r\n    scale: 0.8\r\n  });\r\n\r\n  DEFAULT_STYLE = new Style({\r\n    fill: DEFAULT_FILL_STYLE,\r\n    image: DEFAULT_IMAGE_STYLE,\r\n    text: DEFAULT_TEXT_STYLE,\r\n    stroke: DEFAULT_STROKE_STYLE,\r\n    zIndex: 0\r\n  });\r\n\r\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\r\n\r\n}\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\r\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\r\n * @property {Array<Style>} [defaultStyle] Default style. The\r\n * default default style is the same as Google Earth.\r\n * @property {boolean} [writeStyles=true] Write styles into KML.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Feature format for reading and writing data in the KML format.\r\n *\r\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\r\n * a KML source.\r\n *\r\n * MultiGeometries are converted into GeometryCollections if they are a mix of\r\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\r\n * all of the same type.\r\n *\r\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\r\n * which do not support this will need a URL polyfill to be loaded before use.\r\n *\r\n * @api\r\n */\r\nvar KML = /*@__PURE__*/(function (XMLFeature) {\n  function KML(opt_options) {\r\n    XMLFeature.call(this);\r\n\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    if (!DEFAULT_STYLE_ARRAY) {\r\n      createStyleDefaults();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    this.dataProjection = getProjection('EPSG:4326');\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Style>}\r\n     */\r\n    this.defaultStyle_ = options.defaultStyle ?\r\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.extractStyles_ = options.extractStyles !== undefined ?\r\n      options.extractStyles : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.writeStyles_ = options.writeStyles !== undefined ?\r\n      options.writeStyles : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, (Array<Style>|string)>}\r\n     */\r\n    this.sharedStyles_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.showPointNames_ = options.showPointNames !== undefined ?\r\n      options.showPointNames : true;\r\n\r\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\r\n\r\n  /**\r\n   * @param {Node} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Array<Feature>|undefined} Features.\r\n   */\r\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\r\n    // FIXME use scope somehow\r\n    var parsersNS = makeStructureNS(\r\n      NAMESPACE_URIS, {\r\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\r\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\r\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\r\n        'Style': this.readSharedStyle_.bind(this),\r\n        'StyleMap': this.readSharedStyleMap_.bind(this)\r\n      });\r\n    /** @type {Array<Feature>} */\r\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\r\n    if (features) {\r\n      return features;\r\n    } else {\r\n      return undefined;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   * @return {Feature|undefined} Feature.\r\n   */\r\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\r\n    var object = pushParseAndPop({ 'geometry': null },\r\n      PLACEMARK_PARSERS, node, objectStack);\r\n    if (!object) {\r\n      return undefined;\r\n    }\r\n    var feature = new Feature();\r\n    var id = node.getAttribute('id');\r\n    if (id !== null) {\r\n      feature.setId(id);\r\n    }\r\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\r\n\r\n    var geometry = object['geometry'];\r\n    if (geometry) {\r\n      transformWithOptions(geometry, false, options);\r\n    }\r\n    feature.setGeometry(geometry);\r\n    delete object['geometry'];\r\n\r\n    if (this.extractStyles_) {\r\n      var style = object['Style'];\r\n      var styleUrl = object['styleUrl'];\r\n      var styleFunction = createFeatureStyleFunction(\r\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\r\n        this.showPointNames_);\r\n      feature.setStyle(styleFunction);\r\n      //console.log('Style = ', feature.getId(id), style);\r\n    }\r\n\r\n    delete object['Style'];\r\n    // we do not remove the styleUrl property from the object, so it\r\n    // gets stored on feature when setProperties is called\r\n\r\n    feature.setProperties(object);\r\n\r\n    return feature;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\r\n    var id = node.getAttribute('id');\r\n    if (id !== null) {\r\n      var style = readStyle(node, objectStack);\r\n      if (style) {\r\n        var styleUri;\r\n        var baseURI = node.baseURI;\r\n        if (!baseURI || baseURI == 'about:blank') {\r\n          baseURI = window.location.href;\r\n        }\r\n        if (baseURI) {\r\n          var url = new URL('#' + id, baseURI);\r\n          styleUri = url.href;\r\n        } else {\r\n          styleUri = '#' + id;\r\n        }\r\n        this.sharedStyles_[styleUri] = style;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @param {Array<*>} objectStack Object stack.\r\n   * @private\r\n   */\r\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\r\n    var id = node.getAttribute('id');\r\n    if (id === null) {\r\n      return;\r\n    }\r\n    var styleMapValue = readStyleMapValue(node, objectStack);\r\n    if (!styleMapValue) {\r\n      return;\r\n    }\r\n    var styleUri;\r\n    var baseURI = node.baseURI;\r\n    if (!baseURI || baseURI == 'about:blank') {\r\n      baseURI = window.location.href;\r\n    }\r\n    if (baseURI) {\r\n      var url = new URL('#' + id, baseURI);\r\n      styleUri = url.href;\r\n    } else {\r\n      styleUri = '#' + id;\r\n    }\r\n    this.sharedStyles_[styleUri] = styleMapValue;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\r\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n      return null;\r\n    }\r\n    var feature = this.readPlacemark_(\r\n      node, [this.getReadOptions(node, opt_options)]);\r\n    if (feature) {\r\n      return feature;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\r\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\r\n      return [];\r\n    }\r\n    var features;\r\n    var localName = node.localName;\r\n    if (localName == 'Document' || localName == 'Folder') {\r\n      features = this.readDocumentOrFolder_(\r\n        node, [this.getReadOptions(node, opt_options)]);\r\n      if (features) {\r\n        return features;\r\n      } else {\r\n        return [];\r\n      }\r\n    } else if (localName == 'Placemark') {\r\n      var feature = this.readPlacemark_(\r\n        node, [this.getReadOptions(node, opt_options)]);\r\n      if (feature) {\r\n        return [feature];\r\n      } else {\r\n        return [];\r\n      }\r\n    } else if (localName == 'kml') {\r\n      features = [];\r\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n        var fs = this.readFeaturesFromNode(n, opt_options);\r\n        if (fs) {\r\n          extend(features, fs);\r\n        }\r\n      }\r\n      return features;\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Read the name of the KML.\r\n   *\r\n   * @param {Document|Element|string} source Source.\r\n   * @return {string|undefined} Name.\r\n   * @api\r\n   */\r\n  KML.prototype.readName = function readName (source) {\r\n    if (!source) {\r\n      return undefined;\r\n    } else if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      return this.readNameFromDocument(doc);\r\n    } else if (isDocument(source)) {\r\n      return this.readNameFromDocument(/** @type {Document} */(source));\r\n    } else {\r\n      return this.readNameFromNode(/** @type {Element} */(source));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {string|undefined} Name.\r\n   */\r\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        var name = this.readNameFromNode(/** @type {Element} */(n));\r\n        if (name) {\r\n          return name;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {string|undefined} Name.\r\n   */\r\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n        n.localName == 'name') {\r\n        return readString(n);\r\n      }\r\n    }\r\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\r\n      var localName = n$1.localName;\r\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\r\n        (localName == 'Document' ||\r\n          localName == 'Folder' ||\r\n          localName == 'Placemark' ||\r\n          localName == 'kml')) {\r\n        var name = this.readNameFromNode(n$1);\r\n        if (name) {\r\n          return name;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  };\r\n\r\n  /**\r\n   * Read the network links of the KML.\r\n   *\r\n   * @param {Document|Element|string} source Source.\r\n   * @return {Array<Object>} Network links.\r\n   * @api\r\n   */\r\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\r\n    var networkLinks = [];\r\n    if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\r\n    } else if (isDocument(source)) {\r\n      extend(networkLinks, this.readNetworkLinksFromDocument(\r\n        /** @type {Document} */(source)));\r\n    } else {\r\n      extend(networkLinks, this.readNetworkLinksFromNode(\r\n        /** @type {Element} */(source)));\r\n    }\r\n    return networkLinks;\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {Array<Object>} Network links.\r\n   */\r\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\r\n    var networkLinks = [];\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */(n)));\r\n      }\r\n    }\r\n    return networkLinks;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {Array<Object>} Network links.\r\n   */\r\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\r\n    var networkLinks = [];\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n        n.localName == 'NetworkLink') {\r\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\r\n          n, []);\r\n        networkLinks.push(obj);\r\n      }\r\n    }\r\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\r\n      var localName = n$1.localName;\r\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\r\n        (localName == 'Document' ||\r\n          localName == 'Folder' ||\r\n          localName == 'kml')) {\r\n        extend(networkLinks, this.readNetworkLinksFromNode(n$1));\r\n      }\r\n    }\r\n    return networkLinks;\r\n  };\r\n\r\n  /**\r\n   * Read the regions of the KML.\r\n   *\r\n   * @param {Document|Element|string} source Source.\r\n   * @return {Array<Object>} Regions.\r\n   * @api\r\n   */\r\n  KML.prototype.readRegion = function readRegion (source) {\r\n    var regions = [];\r\n    if (typeof source === 'string') {\r\n      var doc = parse(source);\r\n      extend(regions, this.readRegionFromDocument(doc));\r\n    } else if (isDocument(source)) {\r\n      extend(regions, this.readRegionFromDocument(\r\n        /** @type {Document} */(source)));\r\n    } else {\r\n      extend(regions, this.readRegionFromNode(\r\n        /** @type {Element} */(source)));\r\n    }\r\n    return regions;\r\n  };\r\n\r\n  /**\r\n   * @param {Document} doc Document.\r\n   * @return {Array<Object>} Region.\r\n   */\r\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\r\n    var regions = [];\r\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\r\n      if (n.nodeType == Node.ELEMENT_NODE) {\r\n        extend(regions, this.readRegionFromNode(/** @type {Element} */(n)));\r\n      }\r\n    }\r\n    return regions;\r\n  };\r\n\r\n  /**\r\n   * @param {Element} node Node.\r\n   * @return {Array<Object>} Region.\r\n   * @api\r\n   */\r\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\r\n    var regions = [];\r\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\r\n        n.localName == 'Region') {\r\n        var obj = pushParseAndPop({}, REGION_PARSERS,\r\n          n, []);\r\n        regions.push(obj);\r\n      }\r\n    }\r\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\r\n      var localName = n$1.localName;\r\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\r\n        (localName == 'Document' ||\r\n          localName == 'Folder' ||\r\n          localName == 'kml')) {\r\n        extend(regions, this.readRegionFromNode(n$1));\r\n      }\r\n    }\r\n    return regions;\r\n  };\r\n\r\n  /**\r\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\r\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\r\n   *\r\n   * @param {Array<Feature>} features Features.\r\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\r\n   * @return {Node} Node.\r\n   * @override\r\n   * @api\r\n   */\r\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\r\n    opt_options = this.adaptOptions(opt_options);\r\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\r\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\r\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\r\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\r\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\r\n\r\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\r\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\r\n    var properties = {};\r\n    if (features.length > 1) {\r\n      properties['Document'] = features;\r\n    } else if (features.length == 1) {\r\n      properties['Placemark'] = features[0];\r\n    }\r\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\r\n    var values = makeSequence(properties, orderedKeys);\r\n    pushSerializeAndPop(context, KML_SERIALIZERS,\r\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\r\n      this);\r\n    return kml;\r\n  };\n\n  return KML;\n}(XMLFeature));\r\n\r\n\r\n/**\r\n * @param {Style|undefined} foundStyle Style.\r\n * @param {string} name Name.\r\n * @return {Style} style Style.\r\n */\r\nfunction createNameStyleFunction(foundStyle, name) {\r\n  var textStyle = null;\r\n  var textOffset = [0, 0];\r\n  var textAlign = 'start';\r\n  if (foundStyle.getImage()) {\r\n    var imageSize = foundStyle.getImage().getImageSize();\r\n    if (imageSize === null) {\r\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\r\n    }\r\n    if (imageSize.length == 2) {\r\n      var imageScale = foundStyle.getImage().getScale();\r\n      // Offset the label to be centered to the right of the icon, if there is\r\n      // one.\r\n      textOffset[0] = imageScale * imageSize[0] / 2;\r\n      textOffset[1] = -imageScale * imageSize[1] / 2;\r\n      textAlign = 'left';\r\n    }\r\n  }\r\n  if (foundStyle.getText() !== null) {\r\n    // clone the text style, customizing it with name, alignments and offset.\r\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\r\n    var foundText = foundStyle.getText();\r\n    textStyle = foundText.clone();\r\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\r\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\r\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\r\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\r\n  } else {\r\n    textStyle = DEFAULT_TEXT_STYLE.clone();\r\n  }\r\n  textStyle.setText(name);\r\n  textStyle.setOffsetX(textOffset[0]);\r\n  textStyle.setOffsetY(textOffset[1]);\r\n  textStyle.setTextAlign(textAlign);\r\n\r\n  var nameStyle = new Style({\r\n    text: textStyle\r\n  });\r\n  return nameStyle;\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Style>|undefined} style Style.\r\n * @param {string} styleUrl Style URL.\r\n * @param {Array<Style>} defaultStyle Default style.\r\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\r\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\r\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\r\n */\r\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\r\n\r\n\r\n  return (\r\n    /**\r\n     * @param {Feature} feature feature.\r\n     * @param {number} resolution Resolution.\r\n     * @return {Array<Style>} Style.\r\n     */\r\n    function (feature, resolution) {\r\n\r\n      var drawName = showPointNames;\r\n      /** @type {Style|undefined} */\r\n      var nameStyle;\r\n      var name = '';\r\n      if (drawName) {\r\n        var geometry$1 = feature.getGeometry();\r\n        if (geometry$1) {\r\n          drawName = geometry$1.getType() === GeometryType.POINT;\r\n        }\r\n      }\r\n\r\n      if (drawName) {\r\n        name = /** @type {string} */ (feature.get('name'));\r\n        drawName = drawName && !!name;\r\n      }\r\n\r\n      if (style) {\r\n        if (drawName) {\r\n          nameStyle = createNameStyleFunction(style[0], name);\r\n          return style.concat(nameStyle);\r\n        }\r\n\r\n        var geometry = feature.getGeometry();\r\n        if (geometry.getType() == 'Polygon' && style[0].getImage().getSrc() != DEFAULT_IMAGE_STYLE_SRC\r\n\r\n        ) {\r\n          var coordinates = geometry.getCoordinates();\r\n          geometry = new LineString(coordinates[0]);\r\n        }\r\n        var mpoint = geometry.getType() == 'LineString';\r\n\r\n        if (mpoint) {\r\n\r\n          var icon0 = style[0].getImage();\r\n          var styles = [style[0]];\r\n          // console.log('Автоповорот', style[0].getImage().getSrc());\r\n          geometry.forEachSegment(function (start, end) {\r\n\r\n            var rotation = 0;\r\n            if (style[0].getImage().getSrc().indexOf('rotate') != -1) { // FIXME определение необходимости поворота узла\r\n              //console.log('Автоповорот узла', style[0].getImage().getSrc());\r\n              var dx = end[0] - start[0];\r\n              var dy = end[1] - start[1];\r\n              rotation = - Math.atan2(dy, dx) + Math.PI;\r\n            }\r\n\r\n            // let rotate = rotation / Math.PI * 180;\r\n\r\n\r\n            if (icon0.getSrc() != DEFAULT_IMAGE_STYLE_SRC) {\r\n              // arrows \r\n              var rotUrl = icon0.getSrc(); // FIXME + '&rotate=' + rotate;\r\n\r\n              styles.push(new Style({\r\n                geometry: new Point(end),\r\n                image: new Icon({\r\n                  src: rotUrl,\r\n                  anchor: [0.5, 0.5],\r\n                  rotateWithView: false,\r\n                  rotation: rotation\r\n                })\r\n              }));\r\n            }\r\n            // style[style.length - 1].getImage().setRotation();\r\n          });\r\n\r\n          return styles;\r\n        }\r\n\r\n        return style;\r\n      }\r\n      if (styleUrl) {\r\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\r\n        if (drawName) {\r\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\r\n          return foundStyle.concat(nameStyle);\r\n        }\r\n        return foundStyle;\r\n      }\r\n      if (drawName) {\r\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\r\n        return defaultStyle.concat(nameStyle);\r\n      }\r\n      return defaultStyle;\r\n    }\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {Array<Style>|string|undefined} styleValue Style value.\r\n * @param {Array<Style>} defaultStyle Default style.\r\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\r\n * Shared styles.\r\n * @return {Array<Style>} Style.\r\n */\r\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\r\n  if (Array.isArray(styleValue)) {\r\n    return styleValue;\r\n  } else if (typeof styleValue === 'string') {\r\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\r\n    // defined in the same document.  Add a leading `#` if it enables to find\r\n    // a style.\r\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\r\n      styleValue = '#' + styleValue;\r\n    }\r\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\r\n  } else {\r\n    return defaultStyle;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {import(\"../color.js\").Color|undefined} Color.\r\n */\r\nfunction readColor(node) {\r\n  var s = getAllTextContent(node, false);\r\n  // The KML specification states that colors should not include a leading `#`\r\n  // but we tolerate them.\r\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\r\n  if (m) {\r\n    var hexColor = m[1];\r\n    return [\r\n      parseInt(hexColor.substr(6, 2), 16),\r\n      parseInt(hexColor.substr(4, 2), 16),\r\n      parseInt(hexColor.substr(2, 2), 16),\r\n      parseInt(hexColor.substr(0, 2), 16) / 255\r\n    ];\r\n\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {Array<number>|undefined} Flat coordinates.\r\n */\r\nexport function readFlatCoordinates(node) {\r\n  var s = getAllTextContent(node, false);\r\n  var flatCoordinates = [];\r\n  // The KML specification states that coordinate tuples should not include\r\n  // spaces, but we tolerate them.\r\n  var re =\r\n    /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\r\n  var m;\r\n  while ((m = re.exec(s))) {\r\n    var x = parseFloat(m[1]);\r\n    var y = parseFloat(m[2]);\r\n    var z = m[3] ? parseFloat(m[3]) : 0;\r\n    flatCoordinates.push(x, y, z);\r\n    s = s.substr(m[0].length);\r\n  }\r\n  if (s !== '') {\r\n    return undefined;\r\n  }\r\n  return flatCoordinates;\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {string} URI.\r\n */\r\nfunction readURI(node) {\r\n  var s = getAllTextContent(node, false).trim();\r\n  var baseURI = node.baseURI;\r\n  if (!baseURI || baseURI == 'about:blank') {\r\n    baseURI = window.location.href;\r\n  }\r\n  if (baseURI) {\r\n    var url = new URL(s, baseURI);\r\n    return url.href;\r\n  } else {\r\n    return s;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @return {Vec2} Vec2.\r\n */\r\nfunction readVec2(node) {\r\n  var xunits = node.getAttribute('xunits');\r\n  var yunits = node.getAttribute('yunits');\r\n  var origin;\r\n  if (xunits !== 'insetPixels') {\r\n    if (yunits !== 'insetPixels') {\r\n      origin = IconOrigin.BOTTOM_LEFT;\r\n    } else {\r\n      origin = IconOrigin.TOP_LEFT;\r\n    }\r\n  } else {\r\n    if (yunits !== 'insetPixels') {\r\n      origin = IconOrigin.BOTTOM_RIGHT;\r\n    } else {\r\n      origin = IconOrigin.TOP_RIGHT;\r\n    }\r\n  }\r\n  return {\r\n    x: parseFloat(node.getAttribute('x')),\r\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\r\n    y: parseFloat(node.getAttribute('y')),\r\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\r\n    origin: origin\r\n  };\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @return {number|undefined} Scale.\r\n */\r\nfunction readScale(node) {\r\n  return readDecimal(node);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_MAP_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Pair': pairDataParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<Style>|string|undefined} StyleMap.\r\n */\r\nfunction readStyleMapValue(node, objectStack) {\r\n  return pushParseAndPop(undefined,\r\n    STYLE_MAP_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ICON_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Icon': makeObjectPropertySetter(readIcon),\r\n    'heading': makeObjectPropertySetter(readDecimal),\r\n    'hotSpot': makeObjectPropertySetter(readVec2),\r\n    'scale': makeObjectPropertySetter(readScale)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction iconStyleParser(node, objectStack) {\r\n  // FIXME refreshMode\r\n  // FIXME refreshInterval\r\n  // FIXME viewRefreshTime\r\n  // FIXME viewBoundScale\r\n  // FIXME viewFormat\r\n  // FIXME httpQuery\r\n  var object = pushParseAndPop(\r\n    {}, ICON_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\r\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\r\n  var src;\r\n  var href = /** @type {string|undefined} */\r\n    (IconObject['href']);\r\n  if (href) {\r\n    src = href;\r\n  } else if (drawIcon) {\r\n    src = DEFAULT_IMAGE_STYLE_SRC;\r\n  }\r\n  var anchor, anchorXUnits, anchorYUnits;\r\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\r\n  var hotSpot = /** @type {Vec2|undefined} */\r\n    (object['hotSpot']);\r\n  if (hotSpot) {\r\n    anchor = [hotSpot.x, hotSpot.y];\r\n    anchorXUnits = hotSpot.xunits;\r\n    anchorYUnits = hotSpot.yunits;\r\n    anchorOrigin = hotSpot.origin;\r\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\r\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\r\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\r\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\r\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\r\n    anchor = [0.5, 0];\r\n    anchorXUnits = IconAnchorUnits.FRACTION;\r\n    anchorYUnits = IconAnchorUnits.FRACTION;\r\n  }\r\n\r\n  var offset;\r\n  var x = /** @type {number|undefined} */\r\n    (IconObject['x']);\r\n  var y = /** @type {number|undefined} */\r\n    (IconObject['y']);\r\n  if (x !== undefined && y !== undefined) {\r\n    offset = [x, y];\r\n  }\r\n\r\n  var size;\r\n  var w = /** @type {number|undefined} */\r\n    (IconObject['w']);\r\n  var h = /** @type {number|undefined} */\r\n    (IconObject['h']);\r\n  if (w !== undefined && h !== undefined) {\r\n    size = [w, h];\r\n  }\r\n\r\n  var rotation;\r\n  var heading = /** @type {number} */\r\n    (object['heading']);\r\n  if (heading !== undefined) {\r\n    rotation = toRadians(heading);\r\n  }\r\n\r\n  var scale = /** @type {number|undefined} */\r\n    (object['scale']);\r\n\r\n  if (drawIcon) {\r\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\r\n      size = DEFAULT_IMAGE_STYLE_SIZE;\r\n      if (scale === undefined) {\r\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\r\n      }\r\n    }\r\n\r\n    var imageStyle = new Icon({\r\n      anchor: anchor,\r\n      anchorOrigin: anchorOrigin,\r\n      anchorXUnits: anchorXUnits,\r\n      anchorYUnits: anchorYUnits,\r\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\r\n      offset: offset,\r\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\r\n      rotation: rotation,\r\n      scale: scale,\r\n      size: size,\r\n      src: src\r\n    });\r\n    styleObject['imageStyle'] = imageStyle;\r\n  } else {\r\n    // handle the case when we explicitly want to draw no icon.\r\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LABEL_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'scale': makeObjectPropertySetter(readScale)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction labelStyleParser(node, objectStack) {\r\n  // FIXME colorMode\r\n  var object = pushParseAndPop(\r\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  var textStyle = new Text({\r\n    fill: new Fill({\r\n\r\n      color: /** @type {import(\"../color.js\").Color} */\r\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\r\n    }),\r\n    scale: /** @type {number|undefined} */\r\n      (object['scale'])\r\n  });\r\n  styleObject['textStyle'] = textStyle;\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LINE_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'width': makeObjectPropertySetter(readDecimal),\r\n    'lineDash': makeObjectPropertySetter(readString) //FIXME Read from se:LineSymbolizer http://www.opengis.net/se\r\n\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction lineStyleParser(node, objectStack) {\r\n  // FIXME colorMode\r\n  // FIXME gx:outerColor\r\n  // FIXME gx:outerWidth\r\n  // FIXME gx:physicalWidth\r\n  // FIXME gx:labelVisibility\r\n  var object = pushParseAndPop(\r\n    {}, LINE_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  var strokeStyle = new Stroke({\r\n    color: /** @type {import(\"../color.js\").Color} */\r\n      ('color' in object ? object['color'] : DEFAULT_COLOR),\r\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\r\n    , lineDash: ('lineDash' in object ? object['lineDash'].toString().split(',') : [])\r\n  });\r\n\r\n  styleObject['strokeStyle'] = strokeStyle;\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar POLY_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeObjectPropertySetter(readColor),\r\n    'fill': makeObjectPropertySetter(readBoolean),\r\n    'outline': makeObjectPropertySetter(readBoolean)\r\n    , 'LineSymbolizer': LineSymbolizerParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction polyStyleParser(node, objectStack) {\r\n  // FIXME colorMode\r\n\r\n  var object = pushParseAndPop(\r\n    {}, POLY_STYLE_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n\r\n  var fillStyle = new Fill({\r\n    color: /** @type {import(\"../color.js\").Color} */\r\n      ('color' in object ? object['color'] : DEFAULT_COLOR)\r\n  });\r\n  styleObject['fillStyle'] = fillStyle;\r\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\r\n  if (fill !== undefined) {\r\n    styleObject['fill'] = fill;\r\n  }\r\n  styleObject['foo'] = { bar: 'Yes!' };\r\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\r\n  if (outline !== undefined) {\r\n    styleObject['outline'] = outline;\r\n  }\r\n  //styleObject['strokeStyle'].setLineDash([5, 8]); //TODO LineDAsh\r\n  // console.log('Текущий стиль', styleObject);\r\n}\r\n\r\nvar LS_STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Stroke': strokeParse\r\n  });\r\n\r\nfunction LineSymbolizerParser(node, objectStack) {\r\n\r\n  var object = pushParseAndPop(\r\n    {}, LS_STYLE_PARSERS, node, objectStack);\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  console.log('Парсим символизатор', styleObject);\r\n}\r\n\r\nvar LSTROKE_STYLE_PARSERS = makeStructureNS(\r\n  ['http://www.opengis.net/se'], {\r\n    'SvgParameter': makeObjectPropertySetter(readString),\r\n  });\r\n\r\nfunction strokeParse(node, objectStack) {\r\n  var object = pushParseAndPop(\r\n    {}, LSTROKE_STYLE_PARSERS, node, objectStack);\r\n  var styleObject = objectStack[objectStack.length - 1];\r\n  // styleObject['outline'] = outline;\r\n  //objectStack.foo = 'Bar';\r\n\r\n  console.log('Парсим далее', styleObject);\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'coordinates': makeReplacer(readFlatCoordinates)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<number>} LinearRing flat coordinates.\r\n */\r\nfunction readFlatLinearRing(node, objectStack) {\r\n  return pushParseAndPop(null,\r\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction gxCoordParser(node, objectStack) {\r\n  var gxTrackObject = /** @type {GxTrackObject} */\r\n    (objectStack[objectStack.length - 1]);\r\n  var flatCoordinates = gxTrackObject.flatCoordinates;\r\n  var s = getAllTextContent(node, false);\r\n  var re =\r\n    /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\r\n  var m = re.exec(s);\r\n  if (m) {\r\n    var x = parseFloat(m[1]);\r\n    var y = parseFloat(m[2]);\r\n    var z = parseFloat(m[3]);\r\n    flatCoordinates.push(x, y, z, 0);\r\n  } else {\r\n    flatCoordinates.push(0, 0, 0, 0);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\r\n  GX_NAMESPACE_URIS, {\r\n    'Track': makeArrayPusher(readGxTrack)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {MultiLineString|undefined} MultiLineString.\r\n */\r\nfunction readGxMultiTrack(node, objectStack) {\r\n  var lineStrings = pushParseAndPop([],\r\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\r\n  if (!lineStrings) {\r\n    return undefined;\r\n  }\r\n  return new MultiLineString(lineStrings);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GX_TRACK_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'when': whenParser\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'coord': gxCoordParser\r\n    }));\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {LineString|undefined} LineString.\r\n */\r\nfunction readGxTrack(node, objectStack) {\r\n  var gxTrackObject = pushParseAndPop(\r\n    /** @type {GxTrackObject} */({\r\n      flatCoordinates: [],\r\n      whens: []\r\n    }), GX_TRACK_PARSERS, node, objectStack);\r\n  if (!gxTrackObject) {\r\n    return undefined;\r\n  }\r\n  var flatCoordinates = gxTrackObject.flatCoordinates;\r\n  var whens = gxTrackObject.whens;\r\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\r\n    flatCoordinates[4 * i + 3] = whens[i];\r\n  }\r\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar ICON_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'href': makeObjectPropertySetter(readURI)\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'x': makeObjectPropertySetter(readDecimal),\r\n      'y': makeObjectPropertySetter(readDecimal),\r\n      'w': makeObjectPropertySetter(readDecimal),\r\n      'h': makeObjectPropertySetter(readDecimal)\r\n    }));\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Object} Icon object.\r\n */\r\nfunction readIcon(node, objectStack) {\r\n  var iconObject = pushParseAndPop(\r\n    {}, ICON_PARSERS, node, objectStack);\r\n  if (iconObject) {\r\n    return iconObject;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'coordinates': makeReplacer(readFlatCoordinates)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<number>} Flat coordinates.\r\n */\r\nfunction readFlatCoordinatesFromNode(node, objectStack) {\r\n  return pushParseAndPop(null,\r\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'extrude': makeObjectPropertySetter(readBoolean),\r\n    'tessellate': makeObjectPropertySetter(readBoolean),\r\n    'altitudeMode': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {LineString|undefined} LineString.\r\n */\r\nfunction readLineString(node, objectStack) {\r\n  var properties = pushParseAndPop({},\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatCoordinates =\r\n    readFlatCoordinatesFromNode(node, objectStack);\r\n  if (flatCoordinates) {\r\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\r\n    lineString.setProperties(properties);\r\n    return lineString;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Polygon|undefined} Polygon.\r\n */\r\nfunction readLinearRing(node, objectStack) {\r\n  var properties = pushParseAndPop({},\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatCoordinates =\r\n    readFlatCoordinatesFromNode(node, objectStack);\r\n  if (flatCoordinates) {\r\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\r\n    polygon.setProperties(properties);\r\n    return polygon;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LineString': makeArrayPusher(readLineString),\r\n    'LinearRing': makeArrayPusher(readLinearRing),\r\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\r\n    'Point': makeArrayPusher(readPoint),\r\n    'Polygon': makeArrayPusher(readPolygon)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\r\n */\r\nfunction readMultiGeometry(node, objectStack) {\r\n  var geometries = pushParseAndPop([],\r\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\r\n  if (!geometries) {\r\n    return null;\r\n  }\r\n  if (geometries.length === 0) {\r\n    return new GeometryCollection(geometries);\r\n  }\r\n  var multiGeometry;\r\n  var homogeneous = true;\r\n  var type = geometries[0].getType();\r\n  var geometry;\r\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\r\n    geometry = geometries[i];\r\n    if (geometry.getType() != type) {\r\n      homogeneous = false;\r\n      break;\r\n    }\r\n  }\r\n  if (homogeneous) {\r\n    var layout;\r\n    var flatCoordinates;\r\n    if (type == GeometryType.POINT) {\r\n      var point = geometries[0];\r\n      layout = point.getLayout();\r\n      flatCoordinates = point.getFlatCoordinates();\r\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\r\n        geometry = geometries[i$1];\r\n        extend(flatCoordinates, geometry.getFlatCoordinates());\r\n      }\r\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\r\n      setCommonGeometryProperties(multiGeometry, geometries);\r\n    } else if (type == GeometryType.LINE_STRING) {\r\n      multiGeometry = new MultiLineString(geometries);\r\n      setCommonGeometryProperties(multiGeometry, geometries);\r\n    } else if (type == GeometryType.POLYGON) {\r\n      multiGeometry = new MultiPolygon(geometries);\r\n      setCommonGeometryProperties(multiGeometry, geometries);\r\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\r\n      multiGeometry = new GeometryCollection(geometries);\r\n    } else {\r\n      assert(false, 37); // Unknown geometry type found\r\n    }\r\n  } else {\r\n    multiGeometry = new GeometryCollection(geometries);\r\n  }\r\n  return (\r\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry)\r\n  );\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Point|undefined} Point.\r\n */\r\nfunction readPoint(node, objectStack) {\r\n  var properties = pushParseAndPop({},\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatCoordinates =\r\n    readFlatCoordinatesFromNode(node, objectStack);\r\n  if (flatCoordinates) {\r\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\r\n    point.setProperties(properties);\r\n    return point;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'innerBoundaryIs': innerBoundaryIsParser,\r\n    'outerBoundaryIs': outerBoundaryIsParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Polygon|undefined} Polygon.\r\n */\r\nfunction readPolygon(node, objectStack) {\r\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */({}),\r\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\r\n    objectStack);\r\n  var flatLinearRings = pushParseAndPop([null],\r\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\r\n  if (flatLinearRings && flatLinearRings[0]) {\r\n    var flatCoordinates = flatLinearRings[0];\r\n    var ends = [flatCoordinates.length];\r\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\r\n      extend(flatCoordinates, flatLinearRings[i]);\r\n      ends.push(flatCoordinates.length);\r\n    }\r\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\r\n    polygon.setProperties(properties);\r\n    return polygon;\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar STYLE_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'IconStyle': iconStyleParser,\r\n    'LabelStyle': labelStyleParser,\r\n    'LineStyle': lineStyleParser,\r\n    'PolyStyle': polyStyleParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @return {Array<Style>} Style.\r\n */\r\nfunction readStyle(node, objectStack) {\r\n\r\n  var styleObject = pushParseAndPop(\r\n    {}, STYLE_PARSERS, node, objectStack);\r\n  if (!styleObject) {\r\n    return null;\r\n  }\r\n  var fillStyle = /** @type {Fill} */\r\n    ('fillStyle' in styleObject ?\r\n      styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\r\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\r\n  if (fill !== undefined && !fill) {\r\n    fillStyle = null;\r\n  }\r\n  var imageStyle;\r\n  if ('imageStyle' in styleObject) {\r\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\r\n      imageStyle = styleObject['imageStyle'];\r\n    }\r\n  } else {\r\n    imageStyle = DEFAULT_IMAGE_STYLE;\r\n  }\r\n  var textStyle = /** @type {Text} */\r\n    ('textStyle' in styleObject ?\r\n      styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\r\n  var strokeStyle = /** @type {Stroke} */\r\n    ('strokeStyle' in styleObject ?\r\n      styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\r\n  var outline = /** @type {boolean|undefined} */\r\n    (styleObject['outline']);\r\n  if (outline !== undefined && !outline) {\r\n    strokeStyle = null;\r\n  }\r\n  return [new Style({\r\n    fill: fillStyle,\r\n    image: imageStyle,\r\n    stroke: strokeStyle,\r\n    text: textStyle,\r\n    zIndex: undefined // FIXME\r\n  })];\r\n}\r\n\r\n\r\n/**\r\n * Reads an array of geometries and creates arrays for common geometry\r\n * properties. Then sets them to the multi geometry.\r\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\r\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\r\n */\r\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\r\n  var ii = geometries.length;\r\n  var extrudes = new Array(geometries.length);\r\n  var tessellates = new Array(geometries.length);\r\n  var altitudeModes = new Array(geometries.length);\r\n  var hasExtrude, hasTessellate, hasAltitudeMode;\r\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\r\n  for (var i = 0; i < ii; ++i) {\r\n    var geometry = geometries[i];\r\n    extrudes[i] = geometry.get('extrude');\r\n    tessellates[i] = geometry.get('tessellate');\r\n    altitudeModes[i] = geometry.get('altitudeMode');\r\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\r\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\r\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\r\n  }\r\n  if (hasExtrude) {\r\n    multiGeometry.set('extrude', extrudes);\r\n  }\r\n  if (hasTessellate) {\r\n    multiGeometry.set('tessellate', tessellates);\r\n  }\r\n  if (hasAltitudeMode) {\r\n    multiGeometry.set('altitudeMode', altitudeModes);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar DATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'displayName': makeObjectPropertySetter(readString),\r\n    'value': makeObjectPropertySetter(readString)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction dataParser(node, objectStack) {\r\n  var name = node.getAttribute('name');\r\n  parseNode(DATA_PARSERS, node, objectStack);\r\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  if (name !== null) {\r\n    featureObject[name] = featureObject.value;\r\n  } else if (featureObject.displayName !== null) {\r\n    featureObject[featureObject.displayName] = featureObject.value;\r\n  }\r\n  delete featureObject['value'];\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Data': dataParser,\r\n    'SchemaData': schemaDataParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction extendedDataParser(node, objectStack) {\r\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction regionParser(node, objectStack) {\r\n  parseNode(REGION_PARSERS, node, objectStack);\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar PAIR_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Style': makeObjectPropertySetter(readStyle),\r\n    'key': makeObjectPropertySetter(readString),\r\n    'styleUrl': makeObjectPropertySetter(readURI)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction pairDataParser(node, objectStack) {\r\n  var pairObject = pushParseAndPop(\r\n    {}, PAIR_PARSERS, node, objectStack);\r\n  if (!pairObject) {\r\n    return;\r\n  }\r\n  var key = /** @type {string|undefined} */\r\n    (pairObject['key']);\r\n  if (key && key == 'normal') {\r\n    var styleUrl = /** @type {string|undefined} */\r\n      (pairObject['styleUrl']);\r\n    if (styleUrl) {\r\n      objectStack[objectStack.length - 1] = styleUrl;\r\n    }\r\n    var style = /** @type {Style} */\r\n      (pairObject['Style']);\r\n    if (style) {\r\n      objectStack[objectStack.length - 1] = style;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction placemarkStyleMapParser(node, objectStack) {\r\n  var styleMapValue = readStyleMapValue(node, objectStack);\r\n  if (!styleMapValue) {\r\n    return;\r\n  }\r\n  var placemarkObject = objectStack[objectStack.length - 1];\r\n  if (Array.isArray(styleMapValue)) {\r\n    placemarkObject['Style'] = styleMapValue;\r\n  } else if (typeof styleMapValue === 'string') {\r\n    placemarkObject['styleUrl'] = styleMapValue;\r\n  } else {\r\n    assert(false, 38); // `styleMapValue` has an unknown type\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'SimpleData': simpleDataParser\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction schemaDataParser(node, objectStack) {\r\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction simpleDataParser(node, objectStack) {\r\n  var name = node.getAttribute('name');\r\n  if (name !== null) {\r\n    var data = readString(node);\r\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n    featureObject[name] = data;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'altitudeMode': makeObjectPropertySetter(readString),\r\n    'minAltitude': makeObjectPropertySetter(readDecimal),\r\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\r\n    'north': makeObjectPropertySetter(readDecimal),\r\n    'south': makeObjectPropertySetter(readDecimal),\r\n    'east': makeObjectPropertySetter(readDecimal),\r\n    'west': makeObjectPropertySetter(readDecimal)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction latLonAltBoxParser(node, objectStack) {\r\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  var extent = [\r\n    parseFloat(object['west']),\r\n    parseFloat(object['south']),\r\n    parseFloat(object['east']),\r\n    parseFloat(object['north'])\r\n  ];\r\n  regionObject['extent'] = extent;\r\n  regionObject['altitudeMode'] = object['altitudeMode'];\r\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\r\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar LOD_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\r\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\r\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\r\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction lodParser(node, objectStack) {\r\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\r\n  if (!object) {\r\n    return;\r\n  }\r\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\r\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\r\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\r\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\r\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LinearRing': makeReplacer(readFlatLinearRing)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction innerBoundaryIsParser(node, objectStack) {\r\n  /** @type {Array<number>|undefined} */\r\n  var flatLinearRing = pushParseAndPop(undefined,\r\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\r\n  if (flatLinearRing) {\r\n    var flatLinearRings = /** @type {Array<Array<number>>} */\r\n      (objectStack[objectStack.length - 1]);\r\n    flatLinearRings.push(flatLinearRing);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\r\n */\r\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LinearRing': makeReplacer(readFlatLinearRing)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction outerBoundaryIsParser(node, objectStack) {\r\n  /** @type {Array<number>|undefined} */\r\n  var flatLinearRing = pushParseAndPop(undefined,\r\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\r\n  if (flatLinearRing) {\r\n    var flatLinearRings = /** @type {Array<Array<number>>} */\r\n      (objectStack[objectStack.length - 1]);\r\n    flatLinearRings[0] = flatLinearRing;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction linkParser(node, objectStack) {\r\n  parseNode(LINK_PARSERS, node, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction whenParser(node, objectStack) {\r\n  var gxTrackObject = /** @type {GxTrackObject} */\r\n    (objectStack[objectStack.length - 1]);\r\n  var whens = gxTrackObject.whens;\r\n  var s = getAllTextContent(node, false);\r\n  var when = Date.parse(s);\r\n  whens.push(isNaN(when) ? 0 : when);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the color to.\r\n * @param {import(\"../color.js\").Color|string} color Color.\r\n */\r\nfunction writeColorTextNode(node, color) {\r\n  var rgba = asArray(color);\r\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\r\n  /** @type {Array<string|number>} */\r\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\r\n  for (var i = 0; i < 4; ++i) {\r\n    var hex = Math.floor(/** @type {number} */(abgr[i])).toString(16);\r\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\r\n  }\r\n  writeStringTextNode(node, abgr.join(''));\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the coordinates to.\r\n * @param {Array<number>} coordinates Coordinates.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\r\n  var context = objectStack[objectStack.length - 1];\r\n\r\n  var layout = context['layout'];\r\n  var stride = context['stride'];\r\n\r\n  var dimension;\r\n  if (layout == GeometryLayout.XY ||\r\n    layout == GeometryLayout.XYM) {\r\n    dimension = 2;\r\n  } else if (layout == GeometryLayout.XYZ ||\r\n    layout == GeometryLayout.XYZM) {\r\n    dimension = 3;\r\n  } else {\r\n    assert(false, 34); // Invalid geometry layout\r\n  }\r\n\r\n  var ii = coordinates.length;\r\n  var text = '';\r\n  if (ii > 0) {\r\n    text += coordinates[0];\r\n    for (var d = 1; d < dimension; ++d) {\r\n      text += ',' + coordinates[d];\r\n    }\r\n    for (var i = stride; i < ii; i += stride) {\r\n      text += ' ' + coordinates[i];\r\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\r\n        text += ',' + coordinates[i + d$1];\r\n      }\r\n    }\r\n  }\r\n  writeStringTextNode(node, text);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Data': makeChildAppender(writeDataNode),\r\n    'value': makeChildAppender(writeDataNodeValue),\r\n    'displayName': makeChildAppender(writeDataNodeName)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Element} node Node.\r\n * @param {{name: *, value: *}} pair Name value pair.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeDataNode(node, pair, objectStack) {\r\n  node.setAttribute('name', pair.name);\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var value = pair.value;\r\n\r\n  if (typeof value == 'object') {\r\n    if (value !== null && value.displayName) {\r\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\r\n    }\r\n\r\n    if (value !== null && value.value) {\r\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\r\n    }\r\n  } else {\r\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the name to.\r\n * @param {string} name DisplayName.\r\n */\r\nfunction writeDataNodeName(node, name) {\r\n  writeCDATASection(node, name);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a CDATA Section with the value to.\r\n * @param {string} value Value.\r\n */\r\nfunction writeDataNodeValue(node, value) {\r\n  writeStringTextNode(node, value);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Placemark': makeChildAppender(writePlacemark)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Array<Feature>} features Features.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @this {KML}\r\n */\r\nfunction writeDocument(node, features, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\r\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\r\n    this);\r\n}\r\n\r\n\r\n/**\r\n * A factory for creating Data nodes.\r\n * @const\r\n * @type {function(*, Array<*>): (Node|undefined)}\r\n */\r\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeExtendedData(node, namesAndValues, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var names = namesAndValues.names;\r\n  var values = namesAndValues.values;\r\n  var length = names.length;\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\r\n      DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar ICON_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'href'\r\n  ],\r\n  makeStructureNS(GX_NAMESPACE_URIS, [\r\n    'x', 'y', 'w', 'h'\r\n  ]));\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar ICON_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'href': makeChildAppender(writeStringTextNode)\r\n  }, makeStructureNS(\r\n    GX_NAMESPACE_URIS, {\r\n      'x': makeChildAppender(writeDecimalTextNode),\r\n      'y': makeChildAppender(writeDecimalTextNode),\r\n      'w': makeChildAppender(writeDecimalTextNode),\r\n      'h': makeChildAppender(writeDecimalTextNode)\r\n    }));\r\n\r\n\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\r\n  return createElementNS(GX_NAMESPACE_URIS[0],\r\n    'gx:' + opt_nodeName);\r\n};\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Object} icon Icon object.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeIcon(node, icon, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(icon, orderedKeys);\r\n  pushSerializeAndPop(context,\r\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\r\n    values, objectStack, orderedKeys);\r\n  orderedKeys =\r\n    ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\r\n  values = makeSequence(icon, orderedKeys);\r\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\r\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'scale', 'heading', 'Icon', 'hotSpot'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'Icon': makeChildAppender(writeIcon),\r\n    'heading': makeChildAppender(writeDecimalTextNode),\r\n    'hotSpot': makeChildAppender(writeVec2),\r\n    'scale': makeChildAppender(writeScaleTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../style/Icon.js\").default} style Icon style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeIconStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var properties = {};\r\n  var src = style.getSrc();\r\n  var size = style.getSize();\r\n  var iconImageSize = style.getImageSize();\r\n  var iconProperties = {\r\n    'href': src\r\n  };\r\n\r\n  if (size) {\r\n    iconProperties['w'] = size[0];\r\n    iconProperties['h'] = size[1];\r\n    var anchor = style.getAnchor(); // top-left\r\n    var origin = style.getOrigin(); // top-left\r\n\r\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\r\n      iconProperties['x'] = origin[0];\r\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\r\n    }\r\n\r\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\r\n      var /** @type {Vec2} */ hotSpot = {\r\n        x: anchor[0],\r\n        xunits: IconAnchorUnits.PIXELS,\r\n        y: size[1] - anchor[1],\r\n        yunits: IconAnchorUnits.PIXELS\r\n      };\r\n      properties['hotSpot'] = hotSpot;\r\n    }\r\n  }\r\n\r\n  properties['Icon'] = iconProperties;\r\n\r\n  var scale = style.getScale();\r\n  if (scale !== 1) {\r\n    properties['scale'] = scale;\r\n  }\r\n\r\n  var rotation = style.getRotation();\r\n  if (rotation !== 0) {\r\n    properties['heading'] = rotation; // 0-360\r\n  }\r\n\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'color', 'scale'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode),\r\n    'scale': makeChildAppender(writeScaleTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Text} style style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeLabelStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var properties = {};\r\n  var fill = style.getFill();\r\n  if (fill) {\r\n    properties['color'] = fill.getColor();\r\n  }\r\n  var scale = style.getScale();\r\n  if (scale && scale !== 1) {\r\n    properties['scale'] = scale;\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys =\r\n    LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'color', 'width'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode),\r\n    'width': makeChildAppender(writeDecimalTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Stroke} style style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeLineStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var properties = {\r\n    'color': style.getColor(),\r\n    'width': style.getWidth()\r\n  };\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, string>}\r\n */\r\nvar GEOMETRY_TYPE_TO_NODENAME = {\r\n  'Point': 'Point',\r\n  'LineString': 'LineString',\r\n  'LinearRing': 'LinearRing',\r\n  'Polygon': 'Polygon',\r\n  'MultiPoint': 'MultiGeometry',\r\n  'MultiLineString': 'MultiGeometry',\r\n  'MultiPolygon': 'MultiGeometry',\r\n  'GeometryCollection': 'MultiGeometry'\r\n};\r\n\r\n\r\n/**\r\n * @const\r\n * @param {*} value Value.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @param {string=} opt_nodeName Node name.\r\n * @return {Node|undefined} Node.\r\n */\r\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\r\n  if (value) {\r\n    var parentNode = objectStack[objectStack.length - 1].node;\r\n    return createElementNS(parentNode.namespaceURI,\r\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\r\n  }\r\n};\r\n\r\n\r\n/**\r\n * A factory for creating Point nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\r\n\r\n\r\n/**\r\n * A factory for creating LineString nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\r\n\r\n\r\n/**\r\n * A factory for creating LinearRing nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\r\n\r\n\r\n/**\r\n * A factory for creating Polygon nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LineString': makeChildAppender(\r\n      writePrimitiveGeometry),\r\n    'Point': makeChildAppender(\r\n      writePrimitiveGeometry),\r\n    'Polygon': makeChildAppender(writePolygon),\r\n    'GeometryCollection': makeChildAppender(\r\n      writeMultiGeometry)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeMultiGeometry(node, geometry, objectStack) {\r\n  /** @type {import(\"../xml.js\").NodeStackItem} */\r\n  var context = { node: node };\r\n  var type = geometry.getType();\r\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\r\n  var geometries;\r\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\r\n  var factory;\r\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\r\n    geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\r\n    factory = GEOMETRY_NODE_FACTORY;\r\n  } else if (type == GeometryType.MULTI_POINT) {\r\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\r\n    factory = POINT_NODE_FACTORY;\r\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\r\n    geometries =\r\n      (/** @type {MultiLineString} */ (geometry)).getLineStrings();\r\n    factory = LINE_STRING_NODE_FACTORY;\r\n  } else if (type == GeometryType.MULTI_POLYGON) {\r\n    geometries =\r\n      (/** @type {MultiPolygon} */ (geometry)).getPolygons();\r\n    factory = POLYGON_NODE_FACTORY;\r\n  } else {\r\n    assert(false, 39); // Unknown geometry type\r\n  }\r\n  pushSerializeAndPop(context,\r\n    MULTI_GEOMETRY_SERIALIZERS, factory,\r\n    geometries, objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'LinearRing': makeChildAppender(\r\n      writePrimitiveGeometry)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeBoundaryIs(node, linearRing, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  pushSerializeAndPop(context,\r\n    BOUNDARY_IS_SERIALIZERS,\r\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'ExtendedData': makeChildAppender(writeExtendedData),\r\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\r\n    'LineString': makeChildAppender(writePrimitiveGeometry),\r\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\r\n    'Point': makeChildAppender(writePrimitiveGeometry),\r\n    'Polygon': makeChildAppender(writePolygon),\r\n    'Style': makeChildAppender(writeStyle),\r\n    'address': makeChildAppender(writeStringTextNode),\r\n    'description': makeChildAppender(writeStringTextNode),\r\n    'name': makeChildAppender(writeStringTextNode),\r\n    'open': makeChildAppender(writeBooleanTextNode),\r\n    'phoneNumber': makeChildAppender(writeStringTextNode),\r\n    'styleUrl': makeChildAppender(writeStringTextNode),\r\n    'visibility': makeChildAppender(writeBooleanTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar PLACEMARK_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\r\n    'styleUrl', 'Style'\r\n  ]);\r\n\r\n\r\n/**\r\n * A factory for creating ExtendedData nodes.\r\n * @const\r\n * @type {function(*, Array<*>): (Node|undefined)}\r\n */\r\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\r\n\r\n\r\n/**\r\n * FIXME currently we do serialize arbitrary/custom feature properties\r\n * (ExtendedData).\r\n * @param {Element} node Node.\r\n * @param {Feature} feature Feature.\r\n * @param {Array<*>} objectStack Object stack.\r\n * @this {KML}\r\n */\r\nfunction writePlacemark(node, feature, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n\r\n  // set id\r\n  if (feature.getId()) {\r\n    node.setAttribute('id', /** @type {string} */(feature.getId()));\r\n  }\r\n\r\n  // serialize properties (properties unknown to KML are not serialized)\r\n  var properties = feature.getProperties();\r\n\r\n  // don't export these to ExtendedData\r\n  var filter = {\r\n    'address': 1, 'description': 1, 'name': 1, 'open': 1,\r\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1\r\n  };\r\n  filter[feature.getGeometryName()] = 1;\r\n  var keys = Object.keys(properties || {}).sort().filter(function (v) {\r\n    return !filter[v];\r\n  });\r\n\r\n  if (keys.length > 0) {\r\n    var sequence = makeSequence(properties, keys);\r\n    var namesAndValues = { names: keys, values: sequence };\r\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\r\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\r\n  }\r\n\r\n  var styleFunction = feature.getStyleFunction();\r\n  if (styleFunction) {\r\n    // FIXME the styles returned by the style function are supposed to be\r\n    // resolution-independent here\r\n    var styles = styleFunction(feature, 0);\r\n    if (styles) {\r\n      var style = Array.isArray(styles) ? styles[0] : styles;\r\n      if (this.writeStyles_) {\r\n        properties['Style'] = style;\r\n      }\r\n      var textStyle = style.getText();\r\n      if (textStyle) {\r\n        properties['name'] = textStyle.getText();\r\n      }\r\n    }\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n\r\n  // serialize geometry\r\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\r\n  var geometry = feature.getGeometry();\r\n  if (geometry) {\r\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, options));\r\n  }\r\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\r\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'extrude': makeChildAppender(writeBooleanTextNode),\r\n    'tessellate': makeChildAppender(writeBooleanTextNode),\r\n    'altitudeMode': makeChildAppender(writeStringTextNode),\r\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\r\n  var flatCoordinates = geometry.getFlatCoordinates();\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  context['layout'] = geometry.getLayout();\r\n  context['stride'] = geometry.getStride();\r\n\r\n  // serialize properties (properties unknown to KML are not serialized)\r\n  var properties = geometry.getProperties();\r\n  properties.coordinates = flatCoordinates;\r\n\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar POLYGON_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'outerBoundaryIs': makeChildAppender(\r\n      writeBoundaryIs),\r\n    'innerBoundaryIs': makeChildAppender(\r\n      writeBoundaryIs)\r\n  });\r\n\r\n\r\n/**\r\n * A factory for creating innerBoundaryIs nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\r\n\r\n\r\n/**\r\n * A factory for creating outerBoundaryIs nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Polygon} polygon Polygon.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePolygon(node, polygon, objectStack) {\r\n  var linearRings = polygon.getLinearRings();\r\n  var outerRing = linearRings.shift();\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  // inner rings\r\n  pushSerializeAndPop(context,\r\n    POLYGON_SERIALIZERS,\r\n    INNER_BOUNDARY_NODE_FACTORY,\r\n    linearRings, objectStack);\r\n  // outer ring\r\n  pushSerializeAndPop(context,\r\n    POLYGON_SERIALIZERS,\r\n    OUTER_BOUNDARY_NODE_FACTORY,\r\n    [outerRing], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'color': makeChildAppender(writeColorTextNode)\r\n  });\r\n\r\n\r\n/**\r\n * A factory for creating coordinates nodes.\r\n * @const\r\n * @type {function(*, Array<*>, string=): (Node|undefined)}\r\n */\r\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Fill} style Style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writePolyStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\r\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\r\n}\r\n\r\n\r\n/**\r\n * @param {Node} node Node to append a TextNode with the scale to.\r\n * @param {number|undefined} scale Scale.\r\n */\r\nfunction writeScaleTextNode(node, scale) {\r\n  // the Math is to remove any excess decimals created by float arithmetic\r\n  writeDecimalTextNode(node,\r\n    Math.round(scale * 1e6) / 1e6);\r\n}\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Array<string>>}\r\n */\r\nvar STYLE_SEQUENCE = makeStructureNS(\r\n  NAMESPACE_URIS, [\r\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\r\n  ]);\r\n\r\n\r\n/**\r\n * @const\r\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\r\n */\r\nvar STYLE_SERIALIZERS = makeStructureNS(\r\n  NAMESPACE_URIS, {\r\n    'IconStyle': makeChildAppender(writeIconStyle),\r\n    'LabelStyle': makeChildAppender(writeLabelStyle),\r\n    'LineStyle': makeChildAppender(writeLineStyle),\r\n    'PolyStyle': makeChildAppender(writePolyStyle)\r\n  });\r\n\r\n\r\n/**\r\n * @param {Node} node Node.\r\n * @param {Style} style Style.\r\n * @param {Array<*>} objectStack Object stack.\r\n */\r\nfunction writeStyle(node, style, objectStack) {\r\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\r\n  var properties = {};\r\n  var fillStyle = style.getFill();\r\n  var strokeStyle = style.getStroke();\r\n  var imageStyle = style.getImage();\r\n  var textStyle = style.getText();\r\n  if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\r\n    properties['IconStyle'] = imageStyle;\r\n  }\r\n  if (textStyle) {\r\n    properties['LabelStyle'] = textStyle;\r\n  }\r\n  if (strokeStyle) {\r\n    properties['LineStyle'] = strokeStyle;\r\n  }\r\n  if (fillStyle) {\r\n    properties['PolyStyle'] = fillStyle;\r\n  }\r\n  var parentNode = objectStack[objectStack.length - 1].node;\r\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\r\n  var values = makeSequence(properties, orderedKeys);\r\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\r\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\r\n}\r\n\r\n\r\n/**\r\n * @param {Element} node Node to append a TextNode with the Vec2 to.\r\n * @param {Vec2} vec2 Vec2.\r\n */\r\nfunction writeVec2(node, vec2) {\r\n  node.setAttribute('x', String(vec2.x));\r\n  node.setAttribute('y', String(vec2.y));\r\n  node.setAttribute('xunits', vec2.xunits);\r\n  node.setAttribute('yunits', vec2.yunits);\r\n}\r\n\r\n\r\nexport default KML;\r\n\r\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/render/Feature\n */\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\n  /**\n  * @private\n  * @type {import(\"../extent.js\").Extent|undefined}\n  */\n  this.extent_;\n\n  /**\n  * @private\n  * @type {number|string|undefined}\n  */\n  this.id_ = id;\n\n  /**\n  * @private\n  * @type {GeometryType}\n  */\n  this.type_ = type;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatInteriorPoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatMidpoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>|Array<Array<number>>}\n  */\n  this.ends_ = ends;\n\n  /**\n  * @private\n  * @type {Object<string, *>}\n  */\n  this.properties_ = properties;\n\n};\n\n/**\n* Get a feature property by its key.\n* @param {string} key Key\n* @return {*} Value for the requested key.\n* @api\n*/\nRenderFeature.prototype.get = function get (key) {\n  return this.properties_[key];\n};\n\n/**\n* Get the extent of this feature's geometry.\n* @return {import(\"../extent.js\").Extent} Extent.\n* @api\n*/\nRenderFeature.prototype.getExtent = function getExtent () {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoint.\n*/\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoints.\n*/\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    var flatCoordinates = this.flatCoordinates_;\n    var offset = 0;\n    var ends = /** @type {Array<number>} */ (this.ends_);\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* Get the feature identifier.This is a stable identifier for the feature and\n* is set when reading data from a remote source.\n* @return {number|string|undefined} Id.\n* @api\n*/\nRenderFeature.prototype.getId = function getId () {\n  return this.id_;\n};\n\n/**\n* @return {Array<number>} Flat coordinates.\n*/\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n  return this.flatCoordinates_;\n};\n\n/**\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n* determining the geometry type in style function (see {@link #getType}).\n* @return {RenderFeature} Feature.\n* @api\n*/\nRenderFeature.prototype.getGeometry = function getGeometry () {\n  return this;\n};\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {RenderFeature} Simplified geometry.\n */\nRenderFeature.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n  return this;\n};\n\n/**\n* Get the feature properties.\n* @return {Object<string, *>} Feature properties.\n* @api\n*/\nRenderFeature.prototype.getProperties = function getProperties () {\n  return this.properties_;\n};\n\n/**\n* @return {number} Stride.\n*/\nRenderFeature.prototype.getStride = function getStride () {\n  return 2;\n};\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = function getStyleFunction () {\n  return undefined;\n};\n\n/**\n* Get the type of this feature's geometry.\n* @return {GeometryType} Geometry type.\n* @api\n*/\nRenderFeature.prototype.getType = function getType () {\n  return this.type_;\n};\n\n/**\n* Transform geometry coordinates from tile pixel space to projected.\n* The SRS of the source and destination are expected to be the same.\n*\n* @param {import(\"../proj.js\").ProjectionLike} source The current projection\n* @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n*/\nRenderFeature.prototype.transform = function transform (source, destination) {\n  source = getProjection(source);\n  var pixelExtent = source.getExtent();\n  var projectedExtent = source.getWorldExtent();\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\nexport default RenderFeature;\n\r\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /*@__PURE__*/(function (FeatureFormat) {\n  function MVT(opt_options) {\n    FeatureFormat.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var id = rawFeature.id;\n    var values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    var flatCoordinates = [];\n    var ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      var geom;\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = [];\n        var offset = 0;\n        var prevEndIndex = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          var end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geom, false,\n        this.adaptOptions(opt_options)));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.getLastExtent = function getLastExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MVT.prototype.getType = function getType () {\n    return FormatType.ARRAY_BUFFER;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\n    var layers = this.layers_;\n\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\n    var features = [];\n    for (var name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name];\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature));\n      }\n      this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readProjection = function readProjection (source) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat));\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {GeometryType} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n\r\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n  });\n\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /*@__PURE__*/(function (XMLFeature) {\n  function OSMXML() {\n    XMLFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  if ( XMLFeature ) OSMXML.__proto__ = XMLFeature;\n  OSMXML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  OSMXML.prototype.constructor = OSMXML;\n\n  /**\n   * @inheritDoc\n   */\n  OSMXML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = this.getReadOptions(node, opt_options);\n    if (node.localName == 'osm') {\n      var state = pushParseAndPop({\n        nodes: {},\n        ways: [],\n        features: []\n      }, PARSERS, node, [options]);\n      // parse nodes in ways\n      for (var j = 0; j < state.ways.length; j++) {\n        var values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          var point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        var geometry = (void 0);\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n        } else {\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        transformWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(values.id);\n        feature.setProperties(values.tags);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  };\n\n  return OSMXML;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'tag': readTag\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  var coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  ];\n  state.nodes[id] = coordinates;\n\n  var values = pushParseAndPop({\n    tags: {}\n  }, NODE_PARSERS, node, objectStack);\n  if (!isEmpty(values.tags)) {\n    var geometry = new Point(coordinates);\n    transformWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setId(id);\n    feature.setProperties(values.tags);\n    state.features.push(feature);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  var id = node.getAttribute('id');\n  var values = pushParseAndPop({\n    id: id,\n    ndrefs: [],\n    tags: {}\n  }, WAY_PARSERS, node, objectStack);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\n\nexport default OSMXML;\n\r\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  var j = offset;\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n\r\n//# sourceMappingURL=flip.js.map","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /*@__PURE__*/(function (TextFeature) {\n  function Polyline(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var stride = getStrideForLayout(this.geometryLayout_);\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    geometry = /** @type {LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  };\n\n  return Polyline;\n}(TextFeature));\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      var num = numbers[i];\n      var delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  /** @type {Array<number>} */\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  var numbers = decodeFloats(encoded, factor);\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var numbers = decodeSignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  var numbers = decodeUnsignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  var encoded = '';\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  var numbers = [];\n  var current = 0;\n  var shift = 0;\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\n    var b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  var value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n\r\n//# sourceMappingURL=Polyline.js.map","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function TopoJSON(opt_options) {\n    JSONFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    if (object.type == 'Topology') {\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      var transform, scale = null, translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      var arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      var features = [];\n      var topoJSONFeatures = topoJSONTopology['objects'];\n      var property = this.layerName_;\n      var feature;\n      for (var objectName in topoJSONFeatures) {\n        if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return this.dataProjection;\n  };\n\n  return TopoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  var coordinates = [];\n  var index, arc;\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  var coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    var polyArray = object['arcs'][i];\n    var ringCoords = [];\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  var geometries = collection['geometries'];\n  var features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  var geometry;\n  var type = object.type;\n  var geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  var feature = new Feature();\n  feature.setGeometry(/** @type {import(\"../geom/Geometry.js\").default} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  var properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  var x = 0;\n  var y = 0;\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\n    var vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n\r\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /*@__PURE__*/(function (XMLFeature) {\n  function WFS(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  WFS.prototype.getFeatureType = function getFeatureType () {\n    return this.featureType_;\n  };\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\n    this.featureType_ = featureType;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    var features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\n    var node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    var filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', String(options.maxFeatures));\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', String(options.startIndex));\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', String(options.count));\n      }\n      if (options.viewParams !== undefined) {\n        node.setAttribute('viewParams ', options.viewParams);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        var bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    });\n\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  };\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var node = createElementNS(WFSNS, 'Transaction');\n    var version = options.version ? options.version : DEFAULT_VERSION;\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    var schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          var objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var filter = createElementNS(OGCNS, 'Filter');\n  var child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var name = createElementNS(WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  var valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  var property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  var child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n\r\n//# sourceMappingURL=WFS.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var position = this.index_;\n  /** @type {number|string} */\n  var value = c;\n  var type;\n\n  if (c == '(') {\n    type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    type = TokenType.COMMA;\n  } else if (c == ')') {\n    type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    type = TokenType.NUMBER;\n    value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    type = TokenType.TEXT;\n    value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return {position: position, value: value, type: type};\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n  var c;\n  var index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {import(\"../geom/Geometry.js\").default} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this.token_;\n    if (this.match(TokenType.NUMBER)) {\n      coordinates.push(/** @type {number} */ (token.value));\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /*@__PURE__*/(function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n    var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\r\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\r\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (!source) {\n    return null;\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else {\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Element} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\r\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\r\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /*@__PURE__*/(function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\n\n  /**\n   * @return {Array<string>} layers\n   */\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\n    return this.layers_;\n  };\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        var layerElement = /** @type {Element} */ (layer);\n        var context = objectStack[0];\n\n        var toRemove = layerIdentifier;\n        var layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !includes(this.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n        var parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        var layerFeatures = pushParseAndPop(\n          [], parsersNS, layerElement, objectStack, this.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\n\n\nexport default WMSGetFeatureInfo;\n\r\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString} from './xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = /*@__PURE__*/(function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\r\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from './OWS.js';\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from './xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\r\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/Geolocation\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @enum {string}\n */\nvar Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /*@__PURE__*/(function (Event) {\n  function GeolocationError(error) {\n    Event.call(this, EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n\n  if ( Event ) GeolocationError.__proto__ = Event;\n  GeolocationError.prototype = Object.create( Event && Event.prototype );\n  GeolocationError.prototype.constructor = GeolocationError;\n\n  return GeolocationError;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = /*@__PURE__*/(function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(Property.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(Property.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    this.setTracking(false);\n    this.dispatchEvent(new GeolocationError(error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(Property.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\r\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\r\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\r\n//# sourceMappingURL=geodesic.js.map","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./PluggableMap.js\").default} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nvar Graticule = function Graticule(opt_options) {\n  var options = opt_options || {};\n\n  /**\n   * @type {import(\"./PluggableMap.js\").default}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?import(\"./events.js\").EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {import(\"./proj/Projection.js\").default}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array<LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array<LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {import(\"./proj.js\").TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array<GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array<GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {LineString} lineString Meridian\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  var lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  var coordinate = [flatCoordinates[0], lat];\n  var point;\n  if (index in this.meridiansLabels_) {\n    point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {LineString} lineString Parallels.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} index Index.\n * @return {Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  var lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  var coordinate = [lon, flatCoordinates[1]];\n  var point;\n  if (index in this.parallelsLabels_) {\n    point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n\n  var interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  var centerLonLat = this.toLonLatTransform_(center);\n  var centerLon = centerLonLat[0];\n  var centerLat = centerLonLat[1];\n  var maxLines = this.maxLines_;\n  var cnt, idx, lat, lon;\n\n  var validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  var maxLat = validExtent[3];\n  var maxLon = validExtent[2];\n  var minLat = validExtent[1];\n  var minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this.minLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this.maxLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this.minLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this.maxLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\n  var centerLon = this.projectionCenterLonLat_[0];\n  var centerLat = this.projectionCenterLonLat_[1];\n  var interval = -1;\n  var target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array<number>} **/\n  var p1 = [];\n  /** @type {Array<number>} **/\n  var p2 = [];\n  for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n    var delta = this.intervals_[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this.fromLonLatTransform_(p1, p1);\n    this.fromLonLatTransform_(p2, p2);\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = this.intervals_[i];\n  }\n  return interval;\n};\n\n/**\n * Get the map associated with this graticule.\n * @return {import(\"./PluggableMap.js\").default} The map.\n * @api\n */\nGraticule.prototype.getMap = function getMap () {\n  return this.map_;\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  var lineString = this.meridians_[index];\n  if (!lineString) {\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of meridians.Meridians are lines of equal longitude.\n * @return {Array<LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function getMeridians () {\n  return this.meridians_;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  var lineString = this.parallels_[index];\n  if (!lineString) {\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of parallels.Parallels are lines of equal latitude.\n * @return {Array<LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function getParallels () {\n  return this.parallels_;\n};\n\n/**\n * @param {import(\"./render/Event.js\").default} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\n  var vectorContext = e.vectorContext;\n  var frameState = e.frameState;\n  var extent = frameState.extent;\n  var viewState = frameState.viewState;\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  var i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  var labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this.meridiansLabels_[i];\n      this.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this.parallelsLabels_[i];\n      this.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var worldExtent = projection.getWorldExtent();\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n/**\n * Set the map for this graticule.The graticule will be rendered on the\n * provided map.\n * @param {import(\"./PluggableMap.js\").default} map Map.\n * @api\n */\nGraticule.prototype.setMap = function setMap (map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\n\nexport default Graticule;\n\r\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /*@__PURE__*/(function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /*@__PURE__*/(function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\r\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var deltaX = offset[0] - size[0] / 2;\n    var deltaY = size[1] / 2 - offset[1];\n    var theta = Math.atan2(deltaY, deltaX);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    var view = map.getView();\n    if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n      var angleDelta = theta - this.lastAngle_;\n      rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n      zoomWithoutConstraints(view, resolution);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var direction = this.lastScaleDelta_ - 1;\n    rotate(view, view.getRotation());\n    zoom(view, view.getResolution(), undefined, this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\nexport default DragRotateAndZoom;\n\r\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\r\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\r\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\r\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\r\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\r\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\r\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\r\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = /*@__PURE__*/(function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires Event\n * @api\n */\nvar ExtentInteraction = /*@__PURE__*/(function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    var options = opt_options || {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      /** @type {VectorSource} */ (this.extentOverlay_.getSource()).addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.vertexOverlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var extent = this.getExtent();\n    var vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function(point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixel(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtent();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\r\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = /*@__PURE__*/(function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /*@__PURE__*/(function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default)>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    var vertex = evt.coordinate;\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var depth = segmentData.depth;\n      var geometry = segmentData.geometry;\n      var coordinates = (void 0);\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var insertVertices = [];\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      var vertex = geometry.getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.feature);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\r\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /*@__PURE__*/(function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /*@__PURE__*/(function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\r\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /*@__PURE__*/(function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\r\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = /*@__PURE__*/(function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /*@__PURE__*/(function (PointerInteraction) {\n  function Translate(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleUpEvent = function handleUpEvent (event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDragEvent = function handleDragEvent (event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleMoveEvent = function handleMoveEvent (event) {\n    var elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\nexport default Translate;\n\r\n//# sourceMappingURL=Translate.js.map","/**\r\n * @module ol/layer/BaseImage\r\n */\r\nimport Layer from './Layer.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Server-rendered images that are available for arbitrary extents and\r\n * resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nvar BaseImageLayer = /*@__PURE__*/(function (Layer) {\n  function BaseImageLayer(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n    Layer.call(this, options);\r\n  }\n\n  if ( Layer ) BaseImageLayer.__proto__ = Layer;\n  BaseImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  BaseImageLayer.prototype.constructor = BaseImageLayer;\n\n  return BaseImageLayer;\n}(Layer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/Image source} of the image layer.\r\n * @function\r\n * @return {import(\"../source/Image.js\").default} Source.\r\n * @api\r\n */\r\nBaseImageLayer.prototype.getSource;\r\nexport default BaseImageLayer;\r\n\r\n//# sourceMappingURL=BaseImage.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\r\n//# sourceMappingURL=TileProperty.js.map","/**\r\n * @module ol/layer/BaseTile\r\n */\r\nimport Layer from './Layer.js';\r\nimport TileProperty from './TileProperty.js';\r\nimport {assign} from '../obj.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\r\n * means no preloading.\r\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * For layer sources that provide pre-rendered, tiled images in grids that are\r\n * organized by zoom levels for specific resolutions.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseTileLayer = /*@__PURE__*/(function (Layer) {\n  function BaseTileLayer(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.preload;\r\n    delete baseOptions.useInterimTilesOnError;\r\n    Layer.call(this, baseOptions);\r\n\r\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\r\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\r\n      options.useInterimTilesOnError : true);\r\n\r\n  }\n\n  if ( Layer ) BaseTileLayer.__proto__ = Layer;\n  BaseTileLayer.prototype = Object.create( Layer && Layer.prototype );\n  BaseTileLayer.prototype.constructor = BaseTileLayer;\r\n\r\n  /**\r\n  * Return the level as number to which we will preload tiles up to.\r\n  * @return {number} The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  BaseTileLayer.prototype.getPreload = function getPreload () {\r\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\r\n  };\r\n\r\n  /**\r\n  * Set the level as number to which we will preload tiles up to.\r\n  * @param {number} preload The level to preload tiles up to.\r\n  * @observable\r\n  * @api\r\n  */\r\n  BaseTileLayer.prototype.setPreload = function setPreload (preload) {\r\n    this.set(TileProperty.PRELOAD, preload);\r\n  };\r\n\r\n  /**\r\n  * Whether we use interim tiles on error.\r\n  * @return {boolean} Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  BaseTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\r\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\r\n  };\r\n\r\n  /**\r\n  * Set whether we use interim tiles on error.\r\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\r\n  * @observable\r\n  * @api\r\n  */\r\n  BaseTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\r\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\r\n  };\n\n  return BaseTileLayer;\n}(Layer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\r\n * @function\r\n * @return {import(\"../source/Tile.js\").default} Source.\r\n * @api\r\n */\r\nBaseTileLayer.prototype.getSource;\r\n\r\n\r\nexport default BaseTileLayer;\r\n\r\n//# sourceMappingURL=BaseTile.js.map","/**\r\n * @module ol/layer/BaseVector\r\n */\r\nimport Layer from './Layer.js';\r\nimport {assign} from '../obj.js';\r\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\r\n * features before rendering. By default features are drawn in the order that they are created. Use\r\n * `null` to avoid the sort, but get an undefined draw order.\r\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\r\n * renderer when getting features from the vector source for the rendering or hit-detection.\r\n * Recommended value: the size of the largest symbol, line width or label.\r\n * @property {import(\"../source/Vector.js\").default} [source] Source.\r\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\r\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\r\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\r\n * use {@link module:ol/Map#addLayer}.\r\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\r\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\r\n * means higher priority.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\r\n * {@link module:ol/style} for default style which will be used if this is not defined.\r\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\r\n * be recreated during animations. This means that no vectors will be shown clipped, but the\r\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\r\n * batches will be recreated when no animation is active.\r\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\r\n * be recreated during interactions. See also `updateWhileAnimating`.\r\n */\r\n\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nvar Property = {\r\n  RENDER_ORDER: 'renderOrder'\r\n};\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar BaseVectorLayer = /*@__PURE__*/(function (Layer) {\n  function BaseVectorLayer(opt_options) {\r\n    var options = opt_options ?\r\n      opt_options : /** @type {Options} */ ({});\r\n\r\n    var baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.style;\r\n    delete baseOptions.renderBuffer;\r\n    delete baseOptions.updateWhileAnimating;\r\n    delete baseOptions.updateWhileInteracting;\r\n    Layer.call(this, baseOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\r\n      options.renderBuffer : 100;\r\n\r\n    /**\r\n     * User provided style.\r\n     * @type {import(\"../style/Style.js\").StyleLike}\r\n     * @private\r\n     */\r\n    this.style_ = null;\r\n\r\n    /**\r\n     * Style function for use within the library.\r\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\r\n     * @private\r\n     */\r\n    this.styleFunction_ = undefined;\r\n\r\n    this.setStyle(options.style);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\r\n      options.updateWhileAnimating : false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\r\n      options.updateWhileInteracting : false;\r\n\r\n  }\n\n  if ( Layer ) BaseVectorLayer.__proto__ = Layer;\n  BaseVectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  BaseVectorLayer.prototype.constructor = BaseVectorLayer;\r\n\r\n  /**\r\n   * @return {boolean} Declutter.\r\n   */\r\n  BaseVectorLayer.prototype.getDeclutter = function getDeclutter () {\r\n    return this.declutter_;\r\n  };\r\n\r\n  /**\r\n   * @param {boolean} declutter Declutter.\r\n   */\r\n  BaseVectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\r\n    this.declutter_ = declutter;\r\n  };\r\n\r\n  /**\r\n   * @return {number|undefined} Render buffer.\r\n   */\r\n  BaseVectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\r\n    return this.renderBuffer_;\r\n  };\r\n\r\n  /**\r\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\r\n   *     order.\r\n   */\r\n  BaseVectorLayer.prototype.getRenderOrder = function getRenderOrder () {\r\n    return (\r\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Get the style for features.  This returns whatever was passed to the `style`\r\n   * option at construction or to the `setStyle` method.\r\n   * @return {import(\"../style/Style.js\").StyleLike}\r\n   *     Layer style.\r\n   * @api\r\n   */\r\n  BaseVectorLayer.prototype.getStyle = function getStyle () {\r\n    return this.style_;\r\n  };\r\n\r\n  /**\r\n   * Get the style function.\r\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\r\n   * @api\r\n   */\r\n  BaseVectorLayer.prototype.getStyleFunction = function getStyleFunction () {\r\n    return this.styleFunction_;\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     animating.\r\n   */\r\n  BaseVectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\r\n    return this.updateWhileAnimating_;\r\n  };\r\n\r\n  /**\r\n   * @return {boolean} Whether the rendered layer should be updated while\r\n   *     interacting.\r\n   */\r\n  BaseVectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\r\n    return this.updateWhileInteracting_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\r\n   *     Render order.\r\n   */\r\n  BaseVectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\r\n    this.set(Property.RENDER_ORDER, renderOrder);\r\n  };\r\n\r\n  /**\r\n   * Set the style for features.  This can be a single style object, an array\r\n   * of styles, or a function that takes a feature and resolution and returns\r\n   * an array of styles. If it is `undefined` the default style is used. If\r\n   * it is `null` the layer has no style (a `null` style), so only features\r\n   * that have their own styles will be rendered in the layer. See\r\n   * {@link module:ol/style} for information on the default style.\r\n   * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\r\n   * @api\r\n   */\r\n  BaseVectorLayer.prototype.setStyle = function setStyle (style) {\r\n    this.style_ = style !== undefined ? style : createDefaultStyle;\r\n    this.styleFunction_ = style === null ?\r\n      undefined : toStyleFunction(this.style_);\r\n    this.changed();\r\n  };\n\n  return BaseVectorLayer;\n}(Layer));\r\n\r\n\r\n/**\r\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\r\n * @function\r\n * @return {import(\"../source/Vector.js\").default} Source.\r\n * @api\r\n */\r\nBaseVectorLayer.prototype.getSource;\r\n\r\n\r\nexport default BaseVectorLayer;\r\n\r\n//# sourceMappingURL=BaseVector.js.map","/**\r\n * @module ol/layer/Graticule\r\n */\r\nimport VectorLayer from './Vector.js';\r\nimport {assign} from '../obj.js';\r\nimport {degreesToStringHDMS} from '../coordinate';\r\nimport Text from '../style/Text';\r\nimport Fill from '../style/Fill';\r\nimport Stroke from '../style/Stroke';\r\nimport LineString from '../geom/LineString.js';\r\nimport VectorSource from '../source/Vector';\r\nimport {\r\n  equivalent as equivalentProjection,\r\n  get as getProjection,\r\n  getTransform,\r\n  transformExtent\r\n} from '../proj';\r\nimport {getCenter, intersects, equals, getIntersection, isEmpty} from '../extent';\r\nimport {clamp} from '../math';\r\nimport Style from '../style/Style';\r\nimport Feature from '../Feature';\r\nimport {bbox} from '../loadingstrategy';\r\nimport {meridian, parallel} from '../geom/flat/geodesic';\r\nimport GeometryLayout from '../geom/GeometryLayout';\r\nimport Point from '../geom/Point';\r\nimport Collection from '../Collection';\r\n\r\n\r\n/**\r\n * @type {Stroke}\r\n * @private\r\n * @const\r\n */\r\nvar DEFAULT_STROKE_STYLE = new Stroke({\r\n  color: 'rgba(0,0,0,0.2)'\r\n});\r\n\r\n/**\r\n * @type {Array<number>}\r\n * @private\r\n */\r\nvar INTERVALS = [\r\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\r\n];\r\n\r\n/**\r\n * @typedef {Object} GraticuleLabelDataType\r\n * @property {Point} geom\r\n * @property {string} text\r\n */\r\n\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [maxLines=100] The maximum number of meridians and\r\n * parallels from the center of the map. The default value of 100 means that at\r\n * most 200 meridians and 200 parallels will be displayed. The default value is\r\n * appropriate for conformal projections like Spherical Mercator. If you\r\n * increase the value, more lines will be drawn and the drawing performance will\r\n * decrease.\r\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\r\n * stroke style to use for drawing the graticule. If not provided, a not fully\r\n * opaque black will be used.\r\n * @property {number} [targetSize=100] The target size of the graticule cells,\r\n * in pixels.\r\n * @property {boolean} [showLabels=false] Render a label with the respective\r\n * latitude/longitude for each graticule line.\r\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\r\n * longitudes. This function is called with the longitude as argument, and\r\n * should return a formatted string representing the longitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {function(number):string} [latLabelFormatter] Label formatter for\r\n * latitudes. This function is called with the latitude as argument, and\r\n * should return a formatted string representing the latitude. By default,\r\n * labels are formatted as degrees, minutes, seconds and hemisphere.\r\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\r\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\r\n * top.\r\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\r\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\r\n * right.\r\n * @property {Text} [lonLabelStyle] Longitude label text\r\n * style. If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textBaseline: 'bottom',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: new Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textBaseline` configuration will not work well for\r\n * `lonLabelPosition` configurations that position labels close to the top of\r\n * the viewport.\r\n * @property {Text} [latLabelStyle] Latitude label text style.\r\n * If not provided, the following style will be used:\r\n * ```js\r\n * new Text({\r\n *   font: '12px Calibri,sans-serif',\r\n *   textAlign: 'end',\r\n *   fill: new Fill({\r\n *     color: 'rgba(0,0,0,1)'\r\n *   }),\r\n *   stroke: Stroke({\r\n *     color: 'rgba(255,255,255,1)',\r\n *     width: 3\r\n *   })\r\n * });\r\n * ```\r\n * Note that the default's `textAlign` configuration will not work well for\r\n * `latLabelPosition` configurations that position labels close to the left of\r\n * the viewport.\r\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\r\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\r\n * ```js\r\n * [30, 10]\r\n * ```\r\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Layer that renders a grid for a coordinate system.\r\n *\r\n * @fires import(\"../render/Event.js\").RenderEvent\r\n * @api\r\n */\r\nvar Graticule = /*@__PURE__*/(function (VectorLayer) {\n  function Graticule(opt_options) {\r\n    var options = opt_options ? opt_options : {};\r\n\r\n    var baseOptions = assign({}, options);\r\n\r\n    delete baseOptions.maxLines;\r\n    delete baseOptions.strokeStyle;\r\n    delete baseOptions.targetSize;\r\n    delete baseOptions.showLabels;\r\n    delete baseOptions.lonLabelFormatter;\r\n    delete baseOptions.latLabelFormatter;\r\n    delete baseOptions.lonLabelPosition;\r\n    delete baseOptions.latLabelPosition;\r\n    delete baseOptions.lonLabelStyle;\r\n    delete baseOptions.latLabelStyle;\r\n    delete baseOptions.intervals;\r\n    VectorLayer.call(this, baseOptions);\r\n\r\n    /**\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLat_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLon_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minLat_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minLon_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLatP_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLonP_ = Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minLatP_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minLonP_ = -Infinity;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\r\n\r\n    /**\r\n     * @type {Array<LineString>}\r\n     * @private\r\n     */\r\n    this.meridians_ = [];\r\n\r\n    /**\r\n     * @type {Array<LineString>}\r\n     * @private\r\n     */\r\n    this.parallels_ = [];\r\n\r\n    /**\r\n     * @type {Stroke}\r\n     * @private\r\n     */\r\n    this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\r\n\r\n    /**\r\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\r\n     * @private\r\n     */\r\n    this.fromLonLatTransform_ = undefined;\r\n\r\n    /**\r\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\r\n     * @private\r\n     */\r\n    this.toLonLatTransform_ = undefined;\r\n\r\n    /**\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.projectionCenterLonLat_ = null;\r\n\r\n    /**\r\n     * @type {Array<GraticuleLabelDataType>}\r\n     * @private\r\n     */\r\n    this.meridiansLabels_ = null;\r\n\r\n    /**\r\n     * @type {Array<GraticuleLabelDataType>}\r\n     * @private\r\n     */\r\n    this.parallelsLabels_ = null;\r\n\r\n    if (options.showLabels) {\r\n\r\n      /**\r\n       * @type {null|function(number):string}\r\n       * @private\r\n       */\r\n      this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\r\n        degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\r\n\r\n      /**\r\n       * @type {function(number):string}\r\n       * @private\r\n       */\r\n      this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\r\n        degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\r\n\r\n      /**\r\n       * Longitude label position in fractions (0..1) of view extent. 0 means\r\n       * bottom, 1 means top.\r\n       * @type {number}\r\n       * @private\r\n       */\r\n      this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\r\n        options.lonLabelPosition;\r\n\r\n      /**\r\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\r\n       * means right.\r\n       * @type {number}\r\n       * @private\r\n       */\r\n      this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\r\n        options.latLabelPosition;\r\n\r\n      /**\r\n       * @type {Object.<string,Style>}\r\n       * @private\r\n       */\r\n      this.lonLabelStyleCache_ = {};\r\n\r\n      /**\r\n       * @private\r\n       * @param {import(\"../Feature\").default} feature Feature\r\n       * @return {Style} style\r\n       */\r\n      this.lonLabelStyle_ = function(feature) {\r\n        var label = feature.get('graticule_label');\r\n        if (!this.lonLabelStyleCache_[label]) {\r\n          this.lonLabelStyleCache_[label] = new Style({\r\n            text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\r\n              new Text({\r\n                text: label,\r\n                font: '12px Calibri,sans-serif',\r\n                textBaseline: 'bottom',\r\n                fill: new Fill({\r\n                  color: 'rgba(0,0,0,1)'\r\n                }),\r\n                stroke: new Stroke({\r\n                  color: 'rgba(255,255,255,1)',\r\n                  width: 3\r\n                })\r\n              })\r\n          });\r\n        }\r\n        return this.lonLabelStyleCache_[label];\r\n      }.bind(this);\r\n\r\n      /**\r\n       * @type {Object.<string,Style>}\r\n       * @private\r\n       */\r\n      this.latLabelStyleCache_ = {};\r\n\r\n      /**\r\n       * @private\r\n       * @param {import(\"../Feature\").default} feature Feature\r\n       * @return {Style} style\r\n       */\r\n      this.latLabelStyle_ = function(feature) {\r\n        var label = feature.get('graticule_label');\r\n        if (!this.latLabelStyleCache_[label]) {\r\n          this.latLabelStyleCache_[label] = new Style({\r\n            text: options.latLabelStyle !== undefined ? options.latLabelStyle :\r\n              new Text({\r\n                text: label,\r\n                font: '12px Calibri,sans-serif',\r\n                textAlign: 'right',\r\n                fill: new Fill({\r\n                  color: 'rgba(0,0,0,1)'\r\n                }),\r\n                stroke: new Stroke({\r\n                  color: 'rgba(255,255,255,1)',\r\n                  width: 3\r\n                })\r\n              })\r\n          });\r\n        }\r\n        return this.latLabelStyleCache_[label];\r\n      }.bind(this);\r\n\r\n      this.meridiansLabels_ = [];\r\n      this.parallelsLabels_ = [];\r\n    }\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\r\n\r\n    // use a source with a custom loader for lines & text\r\n    this.setSource(\r\n      new VectorSource({\r\n        loader: this.loaderFunction.bind(this),\r\n        strategy: bbox,\r\n        features: new Collection(),\r\n        overlaps: false,\r\n        useSpatialIndex: false,\r\n        wrapX: options.wrapX\r\n      })\r\n    );\r\n\r\n    /**\r\n     * feature pool to use when updating graticule\r\n     * @type {Array<Feature>}\r\n     * @private\r\n     */\r\n    this.featurePool_ = [];\r\n\r\n    /**\r\n     * @type {Style}\r\n     * @private\r\n     */\r\n    this.lineStyle_ = new Style({\r\n      stroke: this.strokeStyle_\r\n    });\r\n\r\n    /**\r\n     * @type {import(\"../extent.js\").Extent}\r\n     */\r\n    this.renderedExtent_ = null;\r\n\r\n    this.setRenderOrder(null);\r\n\r\n    this.renderBuffer_ = 0;\r\n\r\n    this.updateWhileAnimating_ = true;\r\n    this.updateWhileInteracting_ = true;\r\n\r\n    this.tmpExtent_ = null;\r\n  }\n\n  if ( VectorLayer ) Graticule.__proto__ = VectorLayer;\n  Graticule.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Graticule.prototype.constructor = Graticule;\r\n\r\n  /**\r\n   * Update geometries in the source based on current view\r\n   * @param {import(\"../extent\").Extent} extent Extent\r\n   * @param {number} resolution Resolution\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\r\n   */\r\n  Graticule.prototype.loaderFunction = function loaderFunction (extent, resolution, projection) {\r\n    var source = /** @type {import(\"../source/Vector.js\").default} */ (this.getSource());\r\n\r\n    // only consider the intersection between our own extent & the requested one\r\n    var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\r\n    var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\r\n\r\n    // we should not keep track of loaded extents\r\n    setTimeout(function() {\r\n      source.removeLoadedExtent(extent);\r\n    }, 0);\r\n\r\n    if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\r\n      return;\r\n    }\r\n    this.renderedExtent_ = renderExtent;\r\n\r\n    // bail out if nothing to render\r\n    if (isEmpty(renderExtent)) {\r\n      return;\r\n    }\r\n\r\n    // update projection info\r\n    var center = getCenter(renderExtent);\r\n    var squaredTolerance = resolution * resolution / 4;\r\n\r\n    var updateProjectionInfo = !this.projection_ ||\r\n      !equivalentProjection(this.projection_, projection);\r\n\r\n    if (updateProjectionInfo) {\r\n      this.updateProjectionInfo_(projection);\r\n    }\r\n\r\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\r\n\r\n    // first make sure we have enough features in the pool\r\n    var featureCount = this.meridians_.length + this.parallels_.length;\r\n    if (this.meridiansLabels_) {\r\n      featureCount += this.meridiansLabels_.length;\r\n    }\r\n    if (this.parallelsLabels_) {\r\n      featureCount += this.parallelsLabels_.length;\r\n    }\r\n\r\n    var feature;\r\n    while (featureCount > this.featurePool_.length) {\r\n      feature = new Feature();\r\n      this.featurePool_.push(feature);\r\n    }\r\n\r\n    var featuresColl = source.getFeaturesCollection();\r\n    featuresColl.clear();\r\n    var poolIndex = 0;\r\n\r\n    // add features for the lines & labels\r\n    var i, l;\r\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\r\n      feature = this.featurePool_[poolIndex++];\r\n      feature.setGeometry(this.meridians_[i]);\r\n      feature.setStyle(this.lineStyle_);\r\n      featuresColl.push(feature);\r\n    }\r\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\r\n      feature = this.featurePool_[poolIndex++];\r\n      feature.setGeometry(this.parallels_[i]);\r\n      feature.setStyle(this.lineStyle_);\r\n      featuresColl.push(feature);\r\n    }\r\n    var labelData;\r\n    if (this.meridiansLabels_) {\r\n      for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\r\n        labelData = this.meridiansLabels_[i];\r\n        feature = this.featurePool_[poolIndex++];\r\n        feature.setGeometry(labelData.geom);\r\n        feature.setStyle(this.lonLabelStyle_);\r\n        feature.set('graticule_label', labelData.text);\r\n        featuresColl.push(feature);\r\n      }\r\n    }\r\n    if (this.parallelsLabels_) {\r\n      for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\r\n        labelData = this.parallelsLabels_[i];\r\n        feature = this.featurePool_[poolIndex++];\r\n        feature.setGeometry(labelData.geom);\r\n        feature.setStyle(this.latLabelStyle_);\r\n        feature.set('graticule_label', labelData.text);\r\n        featuresColl.push(feature);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {number} lon Longitude.\r\n   * @param {number} minLat Minimal latitude.\r\n   * @param {number} maxLat Maximal latitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {number} Index.\r\n   * @private\r\n   */\r\n  Graticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\r\n    var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\r\n    if (intersects(lineString.getExtent(), extent)) {\r\n      if (this.meridiansLabels_) {\r\n        var textPoint = this.getMeridianPoint_(lineString, extent, index);\r\n        this.meridiansLabels_[index] = {\r\n          geom: textPoint,\r\n          text: this.lonLabelFormatter_(lon)\r\n        };\r\n      }\r\n      this.meridians_[index++] = lineString;\r\n    }\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * @param {number} lat Latitude.\r\n   * @param {number} minLon Minimal longitude.\r\n   * @param {number} maxLon Maximal longitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {number} Index.\r\n   * @private\r\n   */\r\n  Graticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\r\n    var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\r\n    if (intersects(lineString.getExtent(), extent)) {\r\n      if (this.parallelsLabels_) {\r\n        var textPoint = this.getParallelPoint_(lineString, extent, index);\r\n        this.parallelsLabels_[index] = {\r\n          geom: textPoint,\r\n          text: this.latLabelFormatter_(lat)\r\n        };\r\n      }\r\n      this.parallels_[index++] = lineString;\r\n    }\r\n    return index;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} resolution Resolution.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @private\r\n   */\r\n  Graticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\r\n    var interval = this.getInterval_(resolution);\r\n    if (interval == -1) {\r\n      this.meridians_.length = this.parallels_.length = 0;\r\n      if (this.meridiansLabels_) {\r\n        this.meridiansLabels_.length = 0;\r\n      }\r\n      if (this.parallelsLabels_) {\r\n        this.parallelsLabels_.length = 0;\r\n      }\r\n      return;\r\n    }\r\n\r\n    var centerLonLat = this.toLonLatTransform_(center);\r\n    var centerLon = centerLonLat[0];\r\n    var centerLat = centerLonLat[1];\r\n    var maxLines = this.maxLines_;\r\n    var cnt, idx, lat, lon;\r\n\r\n    var validExtent = [\r\n      Math.max(extent[0], this.minLonP_),\r\n      Math.max(extent[1], this.minLatP_),\r\n      Math.min(extent[2], this.maxLonP_),\r\n      Math.min(extent[3], this.maxLatP_)\r\n    ];\r\n\r\n    validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\r\n    var maxLat = validExtent[3];\r\n    var maxLon = validExtent[2];\r\n    var minLat = validExtent[1];\r\n    var minLon = validExtent[0];\r\n\r\n    // Create meridians\r\n\r\n    centerLon = Math.floor(centerLon / interval) * interval;\r\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n\r\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\r\n\r\n    cnt = 0;\r\n    while (lon != this.minLon_ && cnt++ < maxLines) {\r\n      lon = Math.max(lon - interval, this.minLon_);\r\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\r\n    }\r\n\r\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\r\n\r\n    cnt = 0;\r\n    while (lon != this.maxLon_ && cnt++ < maxLines) {\r\n      lon = Math.min(lon + interval, this.maxLon_);\r\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\r\n    }\r\n\r\n    this.meridians_.length = idx;\r\n    if (this.meridiansLabels_) {\r\n      this.meridiansLabels_.length = idx;\r\n    }\r\n\r\n    // Create parallels\r\n\r\n    centerLat = Math.floor(centerLat / interval) * interval;\r\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n\r\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\r\n\r\n    cnt = 0;\r\n    while (lat != this.minLat_ && cnt++ < maxLines) {\r\n      lat = Math.max(lat - interval, this.minLat_);\r\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\r\n    }\r\n\r\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\r\n\r\n    cnt = 0;\r\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\r\n      lat = Math.min(lat + interval, this.maxLat_);\r\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\r\n    }\r\n\r\n    this.parallels_.length = idx;\r\n    if (this.parallelsLabels_) {\r\n      this.parallelsLabels_.length = idx;\r\n    }\r\n\r\n  };\r\n\r\n  /**\r\n   * @param {number} resolution Resolution.\r\n   * @return {number} The interval in degrees.\r\n   * @private\r\n   */\r\n  Graticule.prototype.getInterval_ = function getInterval_ (resolution) {\r\n    var centerLon = this.projectionCenterLonLat_[0];\r\n    var centerLat = this.projectionCenterLonLat_[1];\r\n    var interval = -1;\r\n    var target = Math.pow(this.targetSize_ * resolution, 2);\r\n    /** @type {Array<number>} **/\r\n    var p1 = [];\r\n    /** @type {Array<number>} **/\r\n    var p2 = [];\r\n    for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\r\n      var delta = this.intervals_[i] / 2;\r\n      p1[0] = centerLon - delta;\r\n      p1[1] = centerLat - delta;\r\n      p2[0] = centerLon + delta;\r\n      p2[1] = centerLat + delta;\r\n      this.fromLonLatTransform_(p1, p1);\r\n      this.fromLonLatTransform_(p2, p2);\r\n      var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\r\n      if (dist <= target) {\r\n        break;\r\n      }\r\n      interval = this.intervals_[i];\r\n    }\r\n    return interval;\r\n  };\r\n\r\n  /**\r\n   * @param {number} lon Longitude.\r\n   * @param {number} minLat Minimal latitude.\r\n   * @param {number} maxLat Maximal latitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {LineString} The meridian line string.\r\n   * @param {number} index Index.\r\n   * @private\r\n   */\r\n  Graticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\r\n    var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\r\n    var lineString = this.meridians_[index];\r\n    if (!lineString) {\r\n      lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\r\n    } else {\r\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\r\n      lineString.changed();\r\n    }\r\n    return lineString;\r\n  };\r\n\r\n  /**\r\n   * @param {LineString} lineString Meridian\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {Point} Meridian point.\r\n   * @private\r\n   */\r\n  Graticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\r\n    var flatCoordinates = lineString.getFlatCoordinates();\r\n    var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\r\n    var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\r\n    var lat = clamp(\r\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\r\n      clampedBottom, clampedTop);\r\n    var coordinate = [flatCoordinates[0], lat];\r\n    var point;\r\n    if (index in this.meridiansLabels_) {\r\n      point = this.meridiansLabels_[index].geom;\r\n      point.setCoordinates(coordinate);\r\n    } else {\r\n      point = new Point(coordinate);\r\n    }\r\n    return point;\r\n  };\r\n\r\n  /**\r\n   * Get the list of meridians.  Meridians are lines of equal longitude.\r\n   * @return {Array<LineString>} The meridians.\r\n   * @api\r\n   */\r\n  Graticule.prototype.getMeridians = function getMeridians () {\r\n    return this.meridians_;\r\n  };\r\n\r\n  /**\r\n   * @param {number} lat Latitude.\r\n   * @param {number} minLon Minimal longitude.\r\n   * @param {number} maxLon Maximal longitude.\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {LineString} The parallel line string.\r\n   * @param {number} index Index.\r\n   * @private\r\n   */\r\n  Graticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\r\n    var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\r\n    var lineString = this.parallels_[index];\r\n    if (!lineString) {\r\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\r\n    } else {\r\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\r\n      lineString.changed();\r\n    }\r\n    return lineString;\r\n  };\r\n\r\n\r\n  /**\r\n   * @param {LineString} lineString Parallels.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @param {number} index Index.\r\n   * @return {Point} Parallel point.\r\n   * @private\r\n   */\r\n  Graticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\r\n    var flatCoordinates = lineString.getFlatCoordinates();\r\n    var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\r\n    var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\r\n    var lon = clamp(\r\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\r\n      clampedLeft, clampedRight);\r\n    var coordinate = [lon, flatCoordinates[1]];\r\n    var point;\r\n    if (index in this.parallelsLabels_) {\r\n      point = this.parallelsLabels_[index].geom;\r\n      point.setCoordinates(coordinate);\r\n    } else {\r\n      point = new Point(coordinate);\r\n    }\r\n    return point;\r\n  };\r\n\r\n  /**\r\n   * Get the list of parallels.  Parallels are lines of equal latitude.\r\n   * @return {Array<LineString>} The parallels.\r\n   * @api\r\n   */\r\n  Graticule.prototype.getParallels = function getParallels () {\r\n    return this.parallels_;\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\r\n   * @private\r\n   */\r\n  Graticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\r\n    var epsg4326Projection = getProjection('EPSG:4326');\r\n\r\n    var worldExtent = projection.getWorldExtent();\r\n    var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\r\n\r\n    this.maxLat_ = worldExtent[3];\r\n    this.maxLon_ = worldExtent[2];\r\n    this.minLat_ = worldExtent[1];\r\n    this.minLon_ = worldExtent[0];\r\n\r\n    this.maxLatP_ = worldExtentP[3];\r\n    this.maxLonP_ = worldExtentP[2];\r\n    this.minLatP_ = worldExtentP[1];\r\n    this.minLonP_ = worldExtentP[0];\r\n\r\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\r\n\r\n    this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\r\n\r\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\r\n\r\n    this.projection_ = projection;\r\n  };\n\n  return Graticule;\n}(VectorLayer));\r\n\r\n\r\nexport default Graticule;\r\n\r\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../render/Event.js\").default} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this.gradient_[alpha];\n        view8[i + 1] = this.gradient_[alpha + 1];\n        view8[i + 2] = this.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\r\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = /*@__PURE__*/(function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\r\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\r\n//# sourceMappingURL=Tile.js.map","/**\r\n * @module ol/renderer/canvas/ImageLayer\r\n */\r\nimport ImageCanvas from '../../ImageCanvas.js';\r\nimport ViewHint from '../../ViewHint.js';\r\nimport {equals} from '../../array.js';\r\nimport {getHeight, getWidth, isEmpty} from '../../extent.js';\r\nimport {assign} from '../../obj.js';\r\nimport CanvasImageLayerRenderer from './ImageLayer.js';\r\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas renderer for image layers.\r\n * @api\r\n */\r\nvar CanvasVectorImageLayerRenderer = /*@__PURE__*/(function (CanvasImageLayerRenderer) {\n  function CanvasVectorImageLayerRenderer(layer) {\r\n    CanvasImageLayerRenderer.call(this, layer);\r\n\r\n    /**\r\n     * @type {!Array<string>}\r\n     */\r\n    this.skippedFeatures_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./VectorLayer.js\").default}\r\n     */\r\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\r\n\r\n  }\n\n  if ( CanvasImageLayerRenderer ) CanvasVectorImageLayerRenderer.__proto__ = CanvasImageLayerRenderer;\n  CanvasVectorImageLayerRenderer.prototype = Object.create( CanvasImageLayerRenderer && CanvasImageLayerRenderer.prototype );\n  CanvasVectorImageLayerRenderer.prototype.constructor = CanvasVectorImageLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    this.vectorRenderer_.dispose();\r\n    CanvasImageLayerRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\r\n    var pixelRatio = frameState.pixelRatio;\r\n    var viewState = frameState.viewState;\r\n    var viewResolution = viewState.resolution;\r\n\r\n    var hints = frameState.viewHints;\r\n    var vectorRenderer = this.vectorRenderer_;\r\n    var renderedExtent = frameState.extent;\r\n\r\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\r\n      var skippedFeatures = this.skippedFeatures_;\r\n      var context = vectorRenderer.context;\r\n      var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\r\n        size: [\r\n          getWidth(renderedExtent) / viewResolution,\r\n          getHeight(renderedExtent) / viewResolution\r\n        ],\r\n        viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\r\n          rotation: 0\r\n        }))\r\n      }));\r\n      var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\r\n      var image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\r\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\r\n              (vectorRenderer.replayGroupChanged ||\r\n              !equals(skippedFeatures, newSkippedFeatures))) {\r\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\r\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\r\n          vectorRenderer.renderFrame(imageFrameState, layerState);\r\n          skippedFeatures = newSkippedFeatures;\r\n          callback();\r\n        }\r\n      });\r\n      if (this.loadImage(image)) {\r\n        this.image_ = image;\r\n        this.skippedFeatures_ = skippedFeatures;\r\n      }\r\n    }\r\n\r\n    if (this.image_) {\r\n      var image$1 = this.image_;\r\n      var imageResolution = image$1.getResolution();\r\n      var imagePixelRatio = image$1.getPixelRatio();\r\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\r\n    }\r\n\r\n    return !!this.image_;\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\r\n    if (this.vectorRenderer_) {\r\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\r\n    } else {\r\n      return CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\r\n    }\r\n  };\n\n  return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\r\n\r\n\r\nexport default CanvasVectorImageLayerRenderer;\r\n\r\n//# sourceMappingURL=VectorImageLayer.js.map","/**\r\n * @module ol/layer/VectorImage\r\n */\r\nimport BaseVectorLayer from './BaseVector.js';\r\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\r\n\r\n/**\r\n * @typedef {import(\"./BaseVector.js\").Options} Options\r\n */\r\n\r\n\r\n/**\r\n * @classdesc\r\n * Vector data that is rendered client-side.\r\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\r\n * property on the layer object; for example, setting `title: 'My Title'` in the\r\n * options means that `title` is observable, and has get/set accessors.\r\n *\r\n * @api\r\n */\r\nvar VectorImageLayer = /*@__PURE__*/(function (BaseVectorLayer) {\n  function VectorImageLayer(opt_options) {\r\n    BaseVectorLayer.call(this, opt_options);\r\n  }\n\n  if ( BaseVectorLayer ) VectorImageLayer.__proto__ = BaseVectorLayer;\n  VectorImageLayer.prototype = Object.create( BaseVectorLayer && BaseVectorLayer.prototype );\n  VectorImageLayer.prototype.constructor = VectorImageLayer;\r\n\r\n  /**\r\n   * Create a renderer for this layer.\r\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\r\n   * @protected\r\n   */\r\n  VectorImageLayer.prototype.createRenderer = function createRenderer () {\r\n    return new CanvasVectorImageLayerRenderer(this);\r\n  };\n\n  return VectorImageLayer;\n}(BaseVectorLayer));\r\n\r\n\r\nexport default VectorImageLayer;\r\n\r\n//# sourceMappingURL=VectorImage.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport VectorLayer from './Vector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = /*@__PURE__*/(function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    VectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {import(\"../source/VectorTile.js\").default} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\r\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\r\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Shader\n */\nimport {abstract} from '../util.js';\n\n/**\n * @abstract\n */\nvar WebGLShader = function WebGLShader(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = function isAnimated () {\n  return false;\n};\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function getSource () {\n  return this.source_;\n};\n\n\nexport default WebGLShader;\n\r\n//# sourceMappingURL=Shader.js.map","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLFragment = /*@__PURE__*/(function (WebGLShader) {\n  function WebGLFragment(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLFragment.prototype.getType = function getType () {\n    return FRAGMENT_SHADER;\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\n\n\nexport default WebGLFragment;\n\r\n//# sourceMappingURL=Fragment.js.map","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLVertex = /*@__PURE__*/(function (WebGLShader) {\n  function WebGLVertex(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVertex.prototype.getType = function getType () {\n    return VERTEX_SHADER;\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\n\n\nexport default WebGLVertex;\n\r\n//# sourceMappingURL=Vertex.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n};\n\nexport default Locations;\n\r\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\r\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/render/webgl/Replay\n */\nimport {abstract} from '../../util.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nvar WebGLReplay = /*@__PURE__*/(function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?import(\"../../webgl/Buffer.js\").default}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array<import(\"../../Feature.js\").default|import(\"../Feature.js\").default>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?import(\"../../webgl/Buffer.js\").default}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {import(\"./LineStringReplay.js\").default|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLReplay.prototype.finish = function finish (context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import(\"./circlereplay/defaultshader/Locations.js\").default|\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\n     import(\"./texturereplay/defaultshader/Locations.js\").default} Locations.\n   */\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"./circlereplay/defaultshader/Locations.js\").default|\n     import(\"./linestringreplay/defaultshader/Locations.js\").default|\n     import(\"./polygonreplay/defaultshader/Locations.js\").default|\n     import(\"./texturereplay/defaultshader/Locations.js\").default} locations Locations.\n   */\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    return abstract();\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    var result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var gl = context.getGL();\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    var result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\n    var elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  return WebGLReplay;\n}(VectorContext));\n\n\nexport default WebGLReplay;\n\r\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n\r\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n\r\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './circlereplay/defaultshader.js';\nimport Locations from './circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from './Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLCircleReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./circlereplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<Array<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         strokeColor: (Array<number>|null),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    var n = numVertices / 4;\n    var i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 0;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 1;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 2;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.vertices[numVertices++] = flatCoordinates[i];\n      this.vertices[numVertices++] = flatCoordinates[i + 1];\n      this.vertices[numVertices++] = 3;\n      this.vertices[numVertices++] = this.radius_;\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 2;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var radius = circleGeometry.getRadius();\n    var stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          var lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLCircleReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the import(\"../../webgl/Context.js\").WebGLContext\n    // object.\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n        this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\n\n\nexport default WebGLCircleReplay;\n\r\n//# sourceMappingURL=CircleReplay.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n};\n\nexport default Locations;\n\r\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\r\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nvar WebGLContext = /*@__PURE__*/(function (Disposable) {\n  function WebGLContext(canvas, gl) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = getUid(buf);\n    if (bufferKey in this.bufferCache_) {\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      var /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  };\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buf);\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this.bufferCache_) {\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this.programCache_) {\n        gl.deleteProgram(this.programCache_[key$1]);\n      }\n      for (var key$2 in this.shaderCache_) {\n        gl.deleteShader(this.shaderCache_[key$2]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  WebGLContext.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLContext.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  };\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {import(\"./Shader.js\").default} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\n    var shaderKey = getUid(shaderObject);\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      var gl = this.getGL();\n      var shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  };\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {import(\"./Fragment.js\").default} fragmentShaderObject Fragment shader.\n   * @param {import(\"./Vertex.js\").default} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      var gl = this.getGL();\n      var program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\n    var gl = this.gl_;\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    var texture = createEmptyTexture(gl, 1, 1);\n    var renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLContext.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  };\n\n  return WebGLContext;\n}(Disposable));\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n\r\n//# sourceMappingURL=Context.js.map","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {abstract, getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from './texturereplay/defaultshader.js';\nimport Locations from './texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from './Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nvar WebGLTextureReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"./texturereplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var textures = this.getTextures(true);\n    var gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        var i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\n    var anchorX = /** @type {number} */ (this.anchorX);\n    var anchorY = /** @type {number} */ (this.anchorY);\n    var height = /** @type {number} */ (this.height);\n    var imageHeight = /** @type {number} */ (this.imageHeight);\n    var imageWidth = /** @type {number} */ (this.imageWidth);\n    var opacity = /** @type {number} */ (this.opacity);\n    var originX = /** @type {number} */ (this.originX);\n    var originY = /** @type {number} */ (this.originY);\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    var rotation = /** @type {number} */ (-this.rotation);\n    var scale = /** @type {number} */ (this.scale);\n    var width = /** @type {number} */ (this.width);\n    var cos = Math.cos(rotation);\n    var sin = Math.sin(rotation);\n    var numIndices = this.indices.length;\n    var numVertices = this.vertices.length;\n    var i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this.origin[0];\n      y = flatCoordinates[i + 1] - this.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = originX / imageWidth;\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\n      this.vertices[numVertices++] = (originY + height) / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = (originX + width) / imageWidth;\n      this.vertices[numVertices++] = originY / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this.vertices[numVertices++] = x;\n      this.vertices[numVertices++] = y;\n      this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this.vertices[numVertices++] = originX / imageWidth;\n      this.vertices[numVertices++] = originY / imageHeight;\n      this.vertices[numVertices++] = opacity;\n      this.vertices[numVertices++] = rotateWithView;\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  };\n\n  /**\n   * @protected\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\n    var texture, image, uid, i;\n    var ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image);\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      var i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        var end = groupIndices[i];\n        this.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  };\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<number>} groupIndices Texture group indices.\n   */\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\n    var featureIndex = 0;\n\n    var i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      var groupEnd = groupIndices[i];\n\n      var start = groupStart;\n      var end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        var feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this.startIndices.length - 1) ?\n            groupEnd : this.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this.startIndices.length - 1) ?\n            groupEnd : this.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this.drawElements(gl, context, start, end);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var i, groupStart, start, end, feature;\n    var featureIndex = this.startIndices.length - 1;\n    var hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n      end = this.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.finish = function finish (context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @return {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @return {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return abstract();\n  };\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\n\n\nexport default WebGLTextureReplay;\n\r\n//# sourceMappingURL=TextureReplay.js.map","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLImageReplay = /*@__PURE__*/(function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    var indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    var anchor = imageStyle.getAnchor();\n    var image = imageStyle.getImage(1);\n    var imageSize = imageStyle.getImageSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var opacity = imageStyle.getOpacity();\n    var origin = imageStyle.getOrigin();\n    var rotateWithView = imageStyle.getRotateWithView();\n    var rotation = imageStyle.getRotation();\n    var size = imageStyle.getSize();\n    var scale = imageStyle.getScale();\n\n    var currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.hitDetectionTextures_;\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLImageReplay;\n\r\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from './area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n\r\n//# sourceMappingURL=topology.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n};\n\nexport default Locations;\n\r\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from './Replay.js';\nimport {fragment, vertex} from './linestringreplay/defaultshader.js';\nimport Locations from './linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nvar WebGLLineStringReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./linestringreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n\n    var i, ii;\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    var startCoords, sign, n;\n    var lastIndex = numIndices;\n    var lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    var p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this.indices[numIndices++] = n + 2;\n            this.indices[numIndices++] = n;\n            this.indices[numIndices++] = n + 1;\n\n            this.indices[numIndices++] = n + 1;\n            this.indices[numIndices++] = n + 3;\n            this.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = lastIndex - 1;\n          this.indices[numIndices++] = lastIndex;\n\n          this.indices[numIndices++] = lastIndex;\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this.indices[numIndices++] = n + 2;\n            this.indices[numIndices++] = n;\n            this.indices[numIndices++] = n + 1;\n\n            this.indices[numIndices++] = n + 1;\n            this.indices[numIndices++] = n + 3;\n            this.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = n + 2;\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n + 3;\n        this.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  };\n\n  /**\n   * @param {Array<number>} p0 Last coordinates.\n   * @param {Array<number>} p1 Current coordinates.\n   * @param {Array<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  };\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\n    var range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var indexCount = this.indices.length;\n    var ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this.origin[0], -this.origin[1]);\n          this.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\n    var index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  };\n\n  /**\n   * @return {number} Current index.\n   */\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\n    return this.indices.length;\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    var strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    var strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\n\n\nexport default WebGLLineStringReplay;\n\r\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n\r\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n};\n\nexport default Locations;\n\r\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {Item} [prev]\n * @property {Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nvar LinkedList = function LinkedList(opt_circular) {\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function insertItem (data) {\n\n  /** @type {Item} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function removeItem () {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function firstItem () {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function lastItem () {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function nextItem () {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function getNextItem () {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function prevItem () {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function getPrevItem () {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function getCurrItem () {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function setFirstItem () {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function concat (list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function getLength () {\n  return this.length_;\n};\n\n\nexport default LinkedList;\n\r\n//# sourceMappingURL=LinkedList.js.map","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from './polygonreplay/defaultshader.js';\nimport Locations from './polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLReplay from './Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {PolygonVertex} p0\n * @property {PolygonVertex} p1\n */\n\n\nvar WebGLPolygonReplay = /*@__PURE__*/(function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {import(\"./polygonreplay/defaultshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\n\n  /**\n   * Draw one polygon.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\n    // Triangulate the polygon\n    var outerRing = new LinkedList();\n    var rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    var maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      var holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        var holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        var currList = holeLists[i].list;\n        var start = currList.firstItem();\n        var currItem = start;\n        var intersection = (void 0);\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  };\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    var i, ii;\n    var n = this.vertices.length / 2;\n    /** @type {PolygonVertex} */\n    var start;\n    /** @type {PolygonVertex} */\n    var p0;\n    /** @type {PolygonVertex} */\n    var p1;\n    var extents = [];\n    var segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      var end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  };\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygons ring.\n   * @return {Array<number>} Max X coordinates.\n   */\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\n    var start = list.firstItem();\n    var seg = start;\n    var maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  };\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\n    var start = list.firstItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var pointsReclassified = false;\n    do {\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\n    var seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    var p1 = seg.p1;\n    /** @type {PolygonVertex} */\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\n    var minDist = Infinity;\n    var i, ii, bestPoint;\n    /** @type {PolygonVertex} */\n    var p5;\n\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      var currSeg = intersectingSegments[i];\n      var intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      var dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        var theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          var currPoint = pointsInTriangle[i];\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\n    var ccw = false;\n    var simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this.resolveSelfIntersections_(list, rtree)) {\n              simple = this.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this.isClockwise_(list);\n                this.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      var numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\n    var numIndices = this.indices.length;\n    var start = list.firstItem();\n    var s0 = list.getPrevItem();\n    var s1 = start;\n    var s2 = list.nextItem();\n    var s3 = list.getNextItem();\n    var p0, p1, p2;\n    var processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        var variableCriterion = (void 0);\n        if (simple) {\n          variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this.indices[numIndices++] = p0.i;\n            this.indices[numIndices++] = p1.i;\n            this.indices[numIndices++] = p2.i;\n            this.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\n    var start = list.firstItem();\n    list.nextItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var resolvedIntersections = false;\n\n    do {\n      var intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        var breakCond = false;\n        var numVertices = this.vertices.length;\n        var numIndices = this.indices.length;\n        var n = numVertices / 2;\n        var seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        var p = (void 0);\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this.indices[numIndices++] = seg.p0.i;\n        this.indices[numIndices++] = seg.p1.i;\n        this.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\n    var start = list.firstItem();\n    var seg = start;\n    do {\n      if (this.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\n    var length = list.getLength() * 2;\n    var flatCoordinates = new Array(length);\n    var start = list.firstItem();\n    var seg = start;\n    var i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../structs/LinkedList.js\").default} list Linked list of the polygon.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\n    var start = list.firstItem();\n    var s0 = start;\n    do {\n      var intersections = this.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        var s1 = intersections[0];\n        var n = this.vertices.length / 2;\n        var intersection = this.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        var p = this.createPoint_(intersection[0], intersection[1], n);\n        var newPolygon = new LinkedList();\n        var newRtree = new RBush();\n        this.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        var currItem = list.nextItem();\n        while (currItem !== s1) {\n          this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this.classifyPoints_(list, rtree, false);\n        this.triangulate_(list, rtree);\n        this.classifyPoints_(newPolygon, newRtree, false);\n        this.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  };\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {PolygonVertex} List item.\n   */\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\n    var numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {PolygonVertex} */\n    var p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point of segment.\n   * @param {PolygonVertex} p1 Second point of segment.\n   * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n   * @param {import(\"../../structs/RBush.js\").default=} opt_rtree Insert the segment into the R-Tree.\n   * @return {PolygonSegment} segment.\n   */\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\n    var seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  };\n\n  /**\n    * @private\n    * @param {PolygonSegment} s0 Segment before the remove candidate.\n    * @param {PolygonSegment} s1 Remove candidate segment.\n    * @param {import(\"../../structs/LinkedList.js\").default} list Polygon ring.\n    * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n    */\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array<PolygonVertex>} Points in the triangle.\n   */\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\n    var result = [];\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (var j in segmentsInExtent[i]) {\n        var p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @private\n   * @param {PolygonSegment} segment Segment.\n   * @param {import(\"../../structs/RBush.js\").default} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<PolygonSegment>} Intersecting segments.\n   */\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\n    var p0 = segment.p0;\n    var p1 = segment.p1;\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    var result = [];\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      var currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {PolygonVertex} p0 First point.\n   * @param {PolygonVertex} p1 Second point.\n   * @param {PolygonVertex} p2 Third point.\n   * @param {PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<number>|undefined} Intersection coordinates.\n   */\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {PolygonVertex} p1 Start point of the diagonal.\n   * @param {PolygonVertex} p2 Ear candidate.\n   * @param {PolygonVertex} p3 End point of the diagonal.\n   * @param {PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var endss = multiPolygonGeometry.getEndss();\n    var stride = multiPolygonGeometry.getStride();\n    var currIndex = this.indices.length;\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    var i, ii, j, jj;\n    var start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      if (ends.length > 0) {\n        var outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this.origin[0], -this.origin[1]);\n        if (outerRing.length) {\n          var holes = [];\n          var holeFlatCoords = (void 0);\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this.origin[0], -this.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var ends = polygonGeometry.getEnds();\n    var stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      var outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this.styleIndices_[i];\n        nextStyle = this.styles_[i];\n        this.setFillStyle_(gl, nextStyle);\n        this.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var i, start, end, nextStyle, groupStart, feature, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var i, start, end, nextStyle, groupStart, feature, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      groupStart = this.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this.startIndices[featureIndex];\n        feature = this.startIndicesFeature[featureIndex];\n\n        if (skippedFeaturesHash[getUid(feature)]) {\n          if (start !== end) {\n            this.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      var nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        width: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\n\n\nexport default WebGLPolygonReplay;\n\r\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {AtlasBlock} */\n  var newBlock1;\n  /** @type {AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {AtlasBlock} newBlock1 The 1st block to add.\n * @param {AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = /** @type {Array<*>} */ ([index, 1]);\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\r\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from './Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<import(\"./Atlas.js\").default>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<import(\"./Atlas.js\").default>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?import(\"./Atlas.js\").AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {import(\"./Atlas.js\").AtlasInfo} info The info for the real image.\n * @param {import(\"./Atlas.js\").AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?import(\"./Atlas.js\").AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {import(\"./Atlas.js\").AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?import(\"./Atlas.js\").AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\r\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from './CircleReplay.js';\nimport WebGLImageReplay from './ImageReplay.js';\nimport WebGLLineStringReplay from './LineStringReplay.js';\nimport WebGLPolygonReplay from './PolygonReplay.js';\nimport WebGLTextReplay from './TextReplay.js';\n\n/**\n * @type {Array<number>}\n */\nvar HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object<import(\"../ReplayType.js\").default, typeof import(\"./Replay.js\").default>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nvar WebGLReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\n    ReplayGroup.call(this);\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string,\n     *        Object<import(\"../ReplayType.js\").default, import(\"./Replay.js\").default>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    return [];\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var functions = [];\n    var zKey;\n    for (zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      var arguments$1 = arguments;\n\n      var length = functions.length;\n      var result;\n      for (var i = 0; i < length; i++) {\n        result = functions[i].apply(this, arguments$1);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLReplayGroup.prototype.finish = function finish (context) {\n    var zKey;\n    for (zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLReplayGroup.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    var i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\n\n\nexport default WebGLReplayGroup;\n\r\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from './TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {import(\"../../style/AtlasManager.js\").default} atlas\n * @property {Object<string, number>} width\n * @property {number} height\n */\n\n\nvar WebGLTextReplay = /*@__PURE__*/(function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (import(\"../../colorlike.js\").ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object<string, GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    if (this.text_) {\n      var flatCoordinates = null;\n      var offset = 0;\n      var end = 2;\n      var stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      var glyphAtlas = this.currAtlas_;\n      var lines = this.text_.split('\\n');\n      var textSize = this.getTextSize_(lines);\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            var image = charInfo.image;\n\n            this.anchorX = anchorX - currX;\n            this.anchorY = anchorY - currY;\n            this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this.originY = charInfo.offsetY;\n            this.height = glyphAtlas.height;\n            this.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this.imageHeight = image.height;\n            this.imageWidth = image.width;\n\n            if (this.images_.length === 0) {\n              this.images_.push(image);\n            } else {\n              var currentImage = this.images_[this.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this.groupIndices.push(this.indices.length);\n                this.images_.push(image);\n              }\n            }\n\n            this.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this.width;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Array<string>} lines Label to draw split to lines.\n   * @return {Array<number>} Size of the label in pixels.\n   */\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\n    var self = this;\n    var glyphAtlas = this.currAtlas_;\n    var textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    var textWidth = lines.map(function(str) {\n      var sum = 0;\n      for (var i = 0, ii = str.length; i < ii; ++i) {\n        var curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  };\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    for (var i = offset, ii = end; i < ii; i += stride) {\n      this.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\n    if (char.length === 1) {\n      var glyphAtlas = this.currAtlas_;\n      var state = this.state_;\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /** @type {CanvasLineCap} */ (state.lineCap);\n          ctx.lineJoin = /** @type {CanvasLineJoin} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\n    var state = this.state_;\n    var textFillStyle = textStyle.getFill();\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        var lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {GlyphAtlas} Glyph atlas.\n   */\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\n    var params = [];\n    for (var i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    var hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  };\n\n  /**\n   * @private\n   * @param {Array<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    var hash = '';\n    for (var i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\n    return this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.textures_;\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLTextReplay;\n\r\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from './ReplayGroup.js';\n\nvar WebGLImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Image.js\").default}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Fill.js\").default}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Stroke.js\").default}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../style/Text.js\").default}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\n\n  /**\n   * @param {import(\"./ReplayGroup.js\").default} replayGroup Replay group.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @private\n   */\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\n    var context = this.context_;\n    var replay = /** @type {import(\"./TextReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./ImageReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./LineStringReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./PolygonReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {import(\"./CircleReplay.js\").default} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    /** @type {Object<string, boolean>} */\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    this.imageStyle_ = imageStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    this.textStyle_ = textStyle;\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\n\n\nexport default WebGLImmediateRenderer;\n\r\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n\r\n//# sourceMappingURL=defaultmapshader.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\r\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {abstract} from '../../util.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from './defaultmapshader.js';\nimport Locations from './defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @abstract\n */\nvar WebGLLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"./Map.js\").default}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {import(\"./defaultmapshader/Locations.js\").default}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\n\n    var gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      var postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n\n      var texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   */\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    var gl = context.getGL();\n\n    var program = context.getProgram(fragment, vertex);\n\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../webgl/Context.js\").default} context WebGL context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var viewState = frameState.viewState;\n      var resolution = viewState.resolution;\n      var pixelRatio = frameState.pixelRatio;\n      var extent = frameState.extent;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n      var size = frameState.size;\n\n      var render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\n    return this.texCoordMatrix;\n  };\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\n    return this.texture;\n  };\n\n  /**\n   * @return {!import(\"../../transform.js\").Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\n    return this.projectionMatrix;\n  };\n\n  /**\n   * Handle webglcontextlost.\n   */\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../webgl/Context.js\").default} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    return abstract();\n  };\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\n\n\nexport default WebGLLayerRenderer;\n\r\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nvar WebGLImageLayerRenderer = /*@__PURE__*/(function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../../transform.js\").Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\n\n  /**\n   * @param {import(\"../../ImageBase.js\").default} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    var imageElement = image.getImage();\n    var gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var gl = this.mapRenderer.getGL();\n\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var viewRotation = viewState.rotation;\n\n    var image = this.image_;\n    var texture = this.texture;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        var loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            var postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      var canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      var texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  };\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../coordinate.js\").Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {import(\"../../extent.js\").Extent} imageExtent Image extent.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    var canvasExtentWidth = canvasWidth * viewResolution;\n    var canvasExtentHeight = canvasHeight * viewResolution;\n\n    var projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    var imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    var pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {import(\"../../size.js\").Size} mapSize The map size.\n   * @param {import(\"../../size.js\").Size} imageSize The image size.\n   * @return {import(\"../../transform.js\").Transform} The transformation matrix.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    var mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    var transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLImageLayerRenderer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Image.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n\r\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nvar WebGLMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function WebGLMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('canvas'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Context.js\").default}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {import(\"../../structs/LRUCache.js\").default<TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../structs/PriorityQueue.js\").default<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array<*>} element Element.\n       * @return {number} Priority.\n       * @this {WebGLMapRenderer}\n       */\n      (function(element) {\n        var tileCenter = /** @type {import(\"../../coordinate.js\").Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {import(\"../../Tile.js\").default} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {import(\"../../PluggableMap.js\").default} map Map.\n     * @param {?import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {WebGLMapRenderer}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            var element = this.tileTextureQueue_.dequeue();\n            var tile = /** @type {import(\"../../Tile.js\").default} */ (element[0]);\n            var tileSize = /** @type {import(\"../../size.js\").Size} */ (element[3]);\n            var tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../size.js\").Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\n    var gl = this.getGL();\n    var tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      var textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      var texture = gl.createTexture();\n      var imageTile = /** @type {import(\"../../ImageTile.js\").default} */ (tile);\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        var clipTileCanvas = this.clipTileContext_.canvas;\n        var clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(imageTile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, imageTile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  WebGLMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var context = this.context_;\n\n      var extent = frameState.extent;\n      var size = frameState.size;\n      var viewState = frameState.viewState;\n      var pixelRatio = frameState.pixelRatio;\n\n      var resolution = viewState.resolution;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n\n      var vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").default} map Map.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\n    var gl = this.getGL();\n    var textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this.textureCache_.pop();\n    }\n  };\n\n  /**\n   * @return {import(\"../../webgl/Context.js\").default} The context.\n   */\n  WebGLMapRenderer.prototype.getContext = function getContext () {\n    return this.context_;\n  };\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  WebGLMapRenderer.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * @return {import(\"../../structs/PriorityQueue.js\").default<Array>} Tile texture queue.\n   */\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\n    return this.tileTextureQueue_;\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    var renderers = this.getLayerRenderers();\n    for (var id in renderers) {\n      var renderer = /** @type {import(\"./Layer.js\").default} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n    this.initializeGL_();\n    this.getMap().render();\n  };\n\n  /**\n   * @private\n   */\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\n    var gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    var context = this.getContext();\n    var gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array<import(\"../../layer/Layer.js\").State>} */\n    var layerStatesToDraw = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      var layerState$1 = layerStatesToDraw[i];\n      var layerRenderer$1 = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layerState$1.layer));\n      layerRenderer$1.composeFrame(frameState, layerState$1, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n    var result;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\n\n\nexport default WebGLMapRenderer;\n\r\n//# sourceMappingURL=Map.js.map","/**\r\n * @module ol/webgl/PostProcessingPass\r\n */\r\n\r\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\r\n\r\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {import(\"./Helper\").UniformValue} value Value\r\n * @property {number} location Location\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * This class is used to define Post Processing passes with custom shaders and uniforms.\r\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   attribute vec2 a_position;\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   uniform vec2 u_screenSize;\r\n *\r\n *   void main() {\r\n *     v_texCoord = a_position * 0.5 + 0.5;\r\n *     v_screenCoord = v_texCoord * u_screenSize;\r\n *     gl_Position = vec4(a_position, 0.0, 1.0);\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *\r\n *   ```\r\n *   precision mediump float;\r\n *\r\n *   uniform sampler2D u_image;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *   varying vec2 v_screenCoord;\r\n *\r\n *   void main() {\r\n *     gl_FragColor = texture2D(u_image, v_texCoord);\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nvar WebGLPostProcessingPass = function WebGLPostProcessingPass(options) {\r\n  this.gl_ = options.webGlContext;\r\n  var gl = this.gl_;\r\n\r\n  this.scaleRatio_ = options.scaleRatio || 1;\r\n\r\n  this.renderTargetTexture_ = gl.createTexture();\r\n  this.renderTargetTextureSize_ = null;\r\n\r\n  this.frameBuffer_ = gl.createFramebuffer();\r\n\r\n  // compile the program for the frame buffer\r\n  // TODO: make compilation errors show up\r\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n  gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\r\n  gl.compileShader(vertexShader);\r\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n  gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\r\n  gl.compileShader(fragmentShader);\r\n  this.renderTargetProgram_ = gl.createProgram();\r\n  gl.attachShader(this.renderTargetProgram_, vertexShader);\r\n  gl.attachShader(this.renderTargetProgram_, fragmentShader);\r\n  gl.linkProgram(this.renderTargetProgram_);\r\n\r\n  // bind the vertices buffer for the frame buffer\r\n  this.renderTargetVerticesBuffer_ = gl.createBuffer();\r\n  var verticesArray = [\r\n    -1, -1,\r\n    1, -1,\r\n    -1, 1,\r\n    1, -1,\r\n    1, 1,\r\n    -1, 1\r\n  ];\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\r\n\r\n  this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\r\n  this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\r\n  this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\r\n\r\n  /**\r\n   * Holds info about custom uniforms used in the post processing pass\r\n   * @type {Array<UniformInternalDescription>}\r\n   * @private\r\n   */\r\n  this.uniforms_ = [];\r\n  options.uniforms && Object.keys(options.uniforms).forEach(function(name) {\r\n    this.uniforms_.push({\r\n      value: options.uniforms[name],\r\n      location: gl.getUniformLocation(this.renderTargetProgram_, name)\r\n    });\r\n  }.bind(this));\r\n};\r\n\r\n/**\r\n * Get the WebGL rendering context\r\n * @return {WebGLRenderingContext} The rendering context.\r\n * @api\r\n */\r\nWebGLPostProcessingPass.prototype.getGL = function getGL () {\r\n  return this.gl_;\r\n};\r\n\r\n/**\r\n * Initialize the render target texture of the post process, make sure it is at the\r\n * right size and bind it as a render target for the next draw calls.\r\n * The last step to be initialized will be the one where the primitives are rendered.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n * @api\r\n */\r\nWebGLPostProcessingPass.prototype.init = function init (frameState) {\r\n  var gl = this.getGL();\r\n  var canvas = gl.canvas;\r\n  var size = frameState.size;\r\n\r\n  // rendering goes to my buffer\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\r\n  gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\r\n\r\n  // if size has changed: adjust canvas & render target texture\r\n  if (!this.renderTargetTextureSize_ ||\r\n    this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\r\n    this.renderTargetTextureSize_ = size;\r\n\r\n    // create a new texture\r\n    var level = 0;\r\n    var internalFormat = gl.RGBA;\r\n    var border = 0;\r\n    var format = gl.RGBA;\r\n    var type = gl.UNSIGNED_BYTE;\r\n    var data = null;\r\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\r\n      canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border,\r\n      format, type, data);\r\n\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n    // bind the texture to the framebuffer\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\r\n  }\r\n};\r\n\r\n/**\r\n * Render to the next postprocessing pass (or to the canvas if final pass).\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\r\n * @api\r\n */\r\nWebGLPostProcessingPass.prototype.apply = function apply (frameState, nextPass) {\r\n  var gl = this.getGL();\r\n  var canvas = gl.canvas;\r\n\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\r\n  gl.activeTexture(gl.TEXTURE0);\r\n  gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\r\n\r\n  // render the frame buffer to the canvas\r\n  gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n  gl.clear(gl.COLOR_BUFFER_BIT);\r\n  gl.enable(gl.BLEND);\r\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n  gl.viewport(0, 0, canvas.width, canvas.height);\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\r\n\r\n  gl.useProgram(this.renderTargetProgram_);\r\n  gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\r\n  gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\r\n  gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\r\n  gl.uniform1i(this.renderTargetTextureLocation_, 0);\r\n\r\n  this.applyUniforms(frameState);\r\n\r\n  gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n};\r\n\r\n/**\r\n * @returns {WebGLFramebuffer} Frame buffer\r\n * @api\r\n */\r\nWebGLPostProcessingPass.prototype.getFrameBuffer = function getFrameBuffer () {\r\n  return this.frameBuffer_;\r\n};\r\n\r\n/**\r\n * Sets the custom uniforms based on what was given in the constructor.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n * @private\r\n */\r\nWebGLPostProcessingPass.prototype.applyUniforms = function applyUniforms (frameState) {\r\n  var gl = this.getGL();\r\n\r\n  var value;\r\n  var textureSlot = 1;\r\n  this.uniforms_.forEach(function(uniform) {\r\n    value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n\r\n    // apply value based on type\r\n    if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\r\n      // create a texture & put data\r\n      if (!uniform.texture) {\r\n        uniform.texture = gl.createTexture();\r\n      }\r\n      gl.activeTexture(gl[(\"TEXTURE\" + textureSlot)]);\r\n      gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n      if (value instanceof ImageData) {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0,\r\n          gl.UNSIGNED_BYTE, new Uint8Array(value.data));\r\n      } else {\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n      }\r\n\r\n      // fill texture slots\r\n      gl.uniform1i(uniform.location, textureSlot++);\r\n\r\n    } else if (Array.isArray(value)) {\r\n      switch (value.length) {\r\n        case 2:\r\n          gl.uniform2f(uniform.location, value[0], value[1]);\r\n          return;\r\n        case 3:\r\n          gl.uniform3f(uniform.location, value[0], value[1], value[2]);\r\n          return;\r\n        case 4:\r\n          gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\r\n          return;\r\n        default: return;\r\n      }\r\n    } else if (typeof value === 'number') {\r\n      gl.uniform1f(uniform.location, value);\r\n    }\r\n  });\r\n};\r\n\r\nexport default WebGLPostProcessingPass;\r\n\r\n//# sourceMappingURL=PostProcessingPass.js.map","/**\r\n * @module ol/webgl/Helper\r\n */\r\nimport {getUid} from '../util.js';\r\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\r\nimport Disposable from '../Disposable.js';\r\nimport {includes} from '../array.js';\r\nimport {listen, unlistenAll} from '../events.js';\r\nimport {clear} from '../obj.js';\r\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\r\nimport ContextEventType from '../webgl/ContextEventType.js';\r\nimport {\r\n  create as createTransform,\r\n  reset as resetTransform,\r\n  rotate as rotateTransform,\r\n  scale as scaleTransform,\r\n  translate as translateTransform\r\n} from '../transform';\r\nimport {create, fromTransform} from '../vec/mat4';\r\nimport WebGLPostProcessingPass from './PostProcessingPass';\r\n\r\n\r\n/**\r\n * @typedef {Object} BufferCacheEntry\r\n * @property {import(\"./Buffer.js\").default} buf\r\n * @property {WebGLBuffer} buffer\r\n */\r\n\r\n/**\r\n * Uniform names used in the default shaders.\r\n * @const\r\n * @type {Object.<string,string>}\r\n */\r\nexport var DefaultUniform = {\r\n  PROJECTION_MATRIX: 'u_projectionMatrix',\r\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\r\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\r\n  OPACITY: 'u_opacity'\r\n};\r\n\r\n/**\r\n * Attribute names used in the default shaders.\r\n * @const\r\n * @type {Object.<string,string>}\r\n */\r\nexport var DefaultAttrib = {\r\n  POSITION: 'a_position',\r\n  TEX_COORD: 'a_texCoord',\r\n  OPACITY: 'a_opacity',\r\n  ROTATE_WITH_VIEW: 'a_rotateWithView',\r\n  OFFSETS: 'a_offsets'\r\n};\r\n\r\n/**\r\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} UniformLiteralValue\r\n */\r\n\r\n/**\r\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\r\n * one of the previous types.\r\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\r\n */\r\n\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property namesmust math the uniform\r\n * names in the provided or default shaders.\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n\r\n/**\r\n * @typedef {Object} UniformInternalDescription\r\n * @property {string} name Name\r\n * @property {WebGLTexture} [texture] Texture\r\n * @private\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\r\n * directly the WebGL API should not be required anymore.\r\n *\r\n * Several operations are handled by the `WebGLHelper` class:\r\n *\r\n * ### Define custom shaders and uniforms\r\n *\r\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\r\n *\r\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\r\n *   Outputs are:\r\n *\r\n *   * `gl_Position`: position of the vertex in screen space\r\n *\r\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\r\n *\r\n *   Fragment shaders are used to control the actual color of the pixels rawn on screen. Their only output is `gl_FragColor`.\r\n *\r\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\r\n *   can be changed at every frame and can be of type float, arrays of float or images.\r\n *\r\n *   Shaders must be compiled and assembled into a program like so:\r\n *   ```js\r\n *   // here we simply create two shaders and assemble them in a program which is then used\r\n *   // for subsequent rendering calls\r\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\r\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\r\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\r\n *   this.context.useProgram(this.program);\r\n *   ```\r\n *\r\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\r\n *   You can also change their value along the way like so:\r\n *   ```js\r\n *   this.context.setUniformFloatValue(DefaultUniform.OPACITY, layerState.opacity);\r\n *   ```\r\n *\r\n * ### Defining post processing passes\r\n *\r\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\r\n *   while applying special effects in screen space.\r\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\r\n *\r\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\r\n *   A post process step accepts the following options:\r\n *\r\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\r\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\r\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\r\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\r\n *\r\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\r\n *\r\n * ### Binding WebGL buffers and flushing data into them:\r\n *\r\n *   Data that must be passed to the GPU has to be transferred using `WebGLArrayBuffer` objects.\r\n *   A buffer has to be created only once, but must be bound everytime the data it holds is changed. Using `WebGLHelper.bindBuffer`\r\n *   will bind the buffer and flush the new data to the GPU.\r\n *\r\n *   For now, the `WebGLHelper` class expects {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\r\n *   ```js\r\n *   // at initialization phase\r\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n *\r\n *   // at rendering phase\r\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\r\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\r\n *   ```\r\n *\r\n * ### Specifying attributes\r\n *\r\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\r\n *   Attributes are used to specify these uses. Use `WebGLHelper.enableAttributeArray` and either\r\n *   the default attribute names in {@link module:ol/webgl/Helper~DefaultAttrib} or custom ones.\r\n *\r\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\r\n *   ```js\r\n *   // here we indicate that the data array has the following structure:\r\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\r\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\r\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\r\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\r\n *   ```\r\n *\r\n * ### Rendering primitives\r\n *\r\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using `WebGLHelper.prepareDraw` `drawElements` and `finalizeDraw`.\r\n *   ```js\r\n *   // frame preparation step\r\n *   this.context.prepareDraw(frameState);\r\n *\r\n *   // call this for every data array that has to be rendered on screen\r\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\r\n *\r\n *   // finalize the rendering by applying post processes\r\n *   this.context.finalizeDraw(frameState);\r\n *   ```\r\n *\r\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\r\n *\r\n *\r\n * @api\r\n */\r\nvar WebGLHelper = /*@__PURE__*/(function (Disposable) {\n  function WebGLHelper(opt_options) {\r\n    Disposable.call(this);\r\n    var options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLCanvasElement}\r\n     */\r\n    this.canvas_ = document.createElement('canvas');\r\n    this.canvas_.style.position = 'absolute';\r\n\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLRenderingContext}\r\n     */\r\n    this.gl_ = this.canvas_.getContext('webgl');\r\n    var gl = this.getGL();\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, BufferCacheEntry>}\r\n     */\r\n    this.bufferCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, WebGLShader>}\r\n     */\r\n    this.shaderCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string, WebGLProgram>}\r\n     */\r\n    this.programCache_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {WebGLProgram}\r\n     */\r\n    this.currentProgram_ = null;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\r\n\r\n    // use the OES_element_index_uint extension if available\r\n    if (this.hasOESElementIndexUint) {\r\n      gl.getExtension('OES_element_index_uint');\r\n    }\r\n\r\n    listen(this.canvas_, ContextEventType.LOST,\r\n      this.handleWebGLContextLost, this);\r\n    listen(this.canvas_, ContextEventType.RESTORED,\r\n      this.handleWebGLContextRestored, this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../transform.js\").Transform}\r\n     */\r\n    this.projectionMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../transform.js\").Transform}\r\n     */\r\n    this.offsetRotateMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../transform.js\").Transform}\r\n     */\r\n    this.offsetScaleMatrix_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.tmpMat4_ = create();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, WebGLUniformLocation>}\r\n     */\r\n    this.uniformLocations_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object.<string, number>}\r\n     */\r\n    this.attribLocations_;\r\n\r\n    /**\r\n     * Holds info about custom uniforms used in the post processing pass.\r\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\r\n     * @type {Array<UniformInternalDescription>}\r\n     * @private\r\n     */\r\n    this.uniforms_ = [];\r\n    options.uniforms && Object.keys(options.uniforms).forEach(function(name) {\r\n      this.uniforms_.push({\r\n        name: name,\r\n        value: options.uniforms[name]\r\n      });\r\n    }.bind(this));\r\n\r\n    /**\r\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\r\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\r\n     * the frame buffer logic).\r\n     * @type {Array<WebGLPostProcessingPass>}\r\n     * @private\r\n     */\r\n    this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function(options) {\r\n      return new WebGLPostProcessingPass({\r\n        webGlContext: gl,\r\n        scaleRatio: options.scaleRatio,\r\n        vertexShader: options.vertexShader,\r\n        fragmentShader: options.fragmentShader,\r\n        uniforms: options.uniforms\r\n      });\r\n    }) : [new WebGLPostProcessingPass({webGlContext: gl})];\r\n  }\n\n  if ( Disposable ) WebGLHelper.__proto__ = Disposable;\n  WebGLHelper.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLHelper.prototype.constructor = WebGLHelper;\r\n\r\n  /**\r\n   * Just bind the buffer if it's in the cache. Otherwise create\r\n   * the WebGL buffer, bind it, populate it, and add an entry to\r\n   * the cache.\r\n   * TODO: improve this, the logic is unclear: we want A/ to bind a buffer and B/ to flush data in it\r\n   * @param {number} target Target.\r\n   * @param {import(\"./Buffer\").default} buf Buffer.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.bindBuffer = function bindBuffer (target, buf) {\r\n    var gl = this.getGL();\r\n    var arr = buf.getArray();\r\n    var bufferKey = getUid(buf);\r\n    var bufferCache = this.bufferCache_[bufferKey];\r\n    if (!bufferCache) {\r\n      var buffer = gl.createBuffer();\r\n      bufferCache = this.bufferCache_[bufferKey] = {\r\n        buf: buf,\r\n        buffer: buffer\r\n      };\r\n    }\r\n    gl.bindBuffer(target, bufferCache.buffer);\r\n    var /** @type {ArrayBufferView} */ arrayBuffer;\r\n    if (target == ARRAY_BUFFER) {\r\n      arrayBuffer = new Float32Array(arr);\r\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\r\n      arrayBuffer = this.hasOESElementIndexUint ?\r\n        new Uint32Array(arr) : new Uint16Array(arr);\r\n    }\r\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\r\n  };\r\n\r\n  /**\r\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\r\n   */\r\n  WebGLHelper.prototype.deleteBuffer = function deleteBuffer (buf) {\r\n    var gl = this.getGL();\r\n    var bufferKey = getUid(buf);\r\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\r\n    if (!gl.isContextLost()) {\r\n      gl.deleteBuffer(bufferCacheEntry.buffer);\r\n    }\r\n    delete this.bufferCache_[bufferKey];\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLHelper.prototype.disposeInternal = function disposeInternal () {\r\n    unlistenAll(this.canvas_);\r\n    var gl = this.getGL();\r\n    if (!gl.isContextLost()) {\r\n      for (var key in this.bufferCache_) {\r\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\r\n      }\r\n      for (var key$1 in this.programCache_) {\r\n        gl.deleteProgram(this.programCache_[key$1]);\r\n      }\r\n      for (var key$2 in this.shaderCache_) {\r\n        gl.deleteShader(this.shaderCache_[key$2]);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Clear the buffer & set the viewport to draw.\r\n   * Post process passes will be initialized here, the first one being bound as a render target for\r\n   * subsequent draw calls.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.prepareDraw = function prepareDraw (frameState) {\r\n    var gl = this.getGL();\r\n    var canvas = this.getCanvas();\r\n    var size = frameState.size;\r\n    var pixelRatio = frameState.pixelRatio;\r\n\r\n    canvas.width = size[0] * pixelRatio;\r\n    canvas.height = size[1] * pixelRatio;\r\n    canvas.style.width = size[0] + 'px';\r\n    canvas.style.height = size[1] + 'px';\r\n\r\n    gl.useProgram(this.currentProgram_);\r\n\r\n    // loop backwards in post processes list\r\n    for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\r\n      this.postProcessPasses_[i].init(frameState);\r\n    }\r\n\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    this.applyFrameState(frameState);\r\n    this.applyUniforms(frameState);\r\n  };\r\n\r\n  /**\r\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\r\n   * @param {number} start Start index.\r\n   * @param {number} end End index.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.drawElements = function drawElements (start, end) {\r\n    var gl = this.getGL();\r\n    var elementType = this.hasOESElementIndexUint ?\r\n      gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\r\n    var elementSize = this.hasOESElementIndexUint ? 4 : 2;\r\n\r\n    var numItems = end - start;\r\n    var offsetInBytes = start * elementSize;\r\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\r\n  };\r\n\r\n  /**\r\n   * Apply the successive post process passes which will eventually render to the actual canvas.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.finalizeDraw = function finalizeDraw (frameState) {\r\n    // apply post processes using the next one as target\r\n    for (var i = 0; i < this.postProcessPasses_.length; i++) {\r\n      this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @return {HTMLCanvasElement} Canvas.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.getCanvas = function getCanvas () {\r\n    return this.canvas_;\r\n  };\r\n\r\n  /**\r\n   * Get the WebGL rendering context\r\n   * @return {WebGLRenderingContext} The rendering context.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.getGL = function getGL () {\r\n    return this.gl_;\r\n  };\r\n\r\n  /**\r\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  WebGLHelper.prototype.applyFrameState = function applyFrameState (frameState) {\r\n    var size = frameState.size;\r\n    var rotation = frameState.viewState.rotation;\r\n    var resolution = frameState.viewState.resolution;\r\n    var center = frameState.viewState.center;\r\n\r\n    // set the \"uniform\" values (coordinates 0,0 are the center of the view)\r\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\r\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\r\n    rotateTransform(projectionMatrix, -rotation);\r\n    translateTransform(projectionMatrix, -center[0], -center[1]);\r\n\r\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\r\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\r\n\r\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\r\n    if (rotation !== 0) {\r\n      rotateTransform(offsetRotateMatrix, -rotation);\r\n    }\r\n\r\n    this.setUniformMatrixValue(DefaultUniform.PROJECTION_MATRIX, fromTransform(this.tmpMat4_, projectionMatrix));\r\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\r\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\r\n  };\r\n\r\n  /**\r\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @private\r\n   */\r\n  WebGLHelper.prototype.applyUniforms = function applyUniforms (frameState) {\r\n    var gl = this.getGL();\r\n\r\n    var value;\r\n    var textureSlot = 0;\r\n    this.uniforms_.forEach(function(uniform) {\r\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\r\n\r\n      // apply value based on type\r\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\r\n        // create a texture & put data\r\n        if (!uniform.texture) {\r\n          uniform.texture = gl.createTexture();\r\n        }\r\n        gl.activeTexture(gl[(\"TEXTURE\" + textureSlot)]);\r\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        if (value instanceof ImageData) {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0,\r\n            gl.UNSIGNED_BYTE, new Uint8Array(value.data));\r\n        } else {\r\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\r\n        }\r\n\r\n        // fill texture slots\r\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\r\n\r\n      } else if (Array.isArray(value)) {\r\n        switch (value.length) {\r\n          case 2:\r\n            gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\r\n            return;\r\n          case 3:\r\n            gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\r\n            return;\r\n          case 4:\r\n            gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\r\n            return;\r\n          default:\r\n            return;\r\n        }\r\n      } else if (typeof value === 'number') {\r\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\r\n      }\r\n    }.bind(this));\r\n  };\r\n\r\n  /**\r\n   * Get shader from the cache if it's in the cache. Otherwise, create\r\n   * the WebGL shader, compile it, and add entry to cache.\r\n   * TODO: make compilation errors show up\r\n   * @param {import(\"./Shader.js\").default} shaderObject Shader object.\r\n   * @return {WebGLShader} Shader.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.getShader = function getShader (shaderObject) {\r\n    var shaderKey = getUid(shaderObject);\r\n    if (shaderKey in this.shaderCache_) {\r\n      return this.shaderCache_[shaderKey];\r\n    } else {\r\n      var gl = this.getGL();\r\n      var shader = gl.createShader(shaderObject.getType());\r\n      gl.shaderSource(shader, shaderObject.getSource());\r\n      gl.compileShader(shader);\r\n      this.shaderCache_[shaderKey] = shader;\r\n      return shader;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Use a program.  If the program is already in use, this will return `false`.\r\n   * @param {WebGLProgram} program Program.\r\n   * @return {boolean} Changed.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.useProgram = function useProgram (program) {\r\n    if (program == this.currentProgram_) {\r\n      return false;\r\n    } else {\r\n      var gl = this.getGL();\r\n      gl.useProgram(program);\r\n      this.currentProgram_ = program;\r\n      this.uniformLocations_ = {};\r\n      this.attribLocations_ = {};\r\n      return true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the program from the cache if it's in the cache. Otherwise create\r\n   * the WebGL program, attach the shaders to it, and add an entry to the\r\n   * cache.\r\n   * @param {import(\"./Fragment.js\").default} fragmentShaderObject Fragment shader.\r\n   * @param {import(\"./Vertex.js\").default} vertexShaderObject Vertex shader.\r\n   * @return {WebGLProgram} Program.\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\r\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\r\n    if (programKey in this.programCache_) {\r\n      return this.programCache_[programKey];\r\n    } else {\r\n      var gl = this.getGL();\r\n      var program = gl.createProgram();\r\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\r\n      gl.attachShader(program, this.getShader(vertexShaderObject));\r\n      gl.linkProgram(program);\r\n      this.programCache_[programKey] = program;\r\n      return program;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Will get the location from the shader or the cache\r\n   * @param {string} name Uniform name\r\n   * @return {WebGLUniformLocation} uniformLocation\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.getUniformLocation = function getUniformLocation (name) {\r\n    if (!this.uniformLocations_[name]) {\r\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\r\n    }\r\n    return this.uniformLocations_[name];\r\n  };\r\n\r\n  /**\r\n   * Will get the location from the shader or the cache\r\n   * @param {string} name Attribute name\r\n   * @return {number} attribLocation\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.getAttributeLocation = function getAttributeLocation (name) {\r\n    if (!this.attribLocations_[name]) {\r\n      this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\r\n    }\r\n    return this.attribLocations_[name];\r\n  };\r\n\r\n  /**\r\n   * Give a value for a standard float uniform\r\n   * @param {string} uniform Uniform name\r\n   * @param {number} value Value\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.setUniformFloatValue = function setUniformFloatValue (uniform, value) {\r\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\r\n  };\r\n\r\n  /**\r\n   * Give a value for a standard matrix4 uniform\r\n   * @param {string} uniform Uniform name\r\n   * @param {Array<number>} value Matrix value\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.setUniformMatrixValue = function setUniformMatrixValue (uniform, value) {\r\n    this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\r\n  };\r\n\r\n  /**\r\n   * Will set the currently bound buffer to an attribute of the shader program\r\n   * @param {string} attribName Attribute name\r\n   * @param {number} size Number of components per attributes\r\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\r\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\r\n   * @param {number} offset Offset in bytes\r\n   * @api\r\n   */\r\n  WebGLHelper.prototype.enableAttributeArray = function enableAttributeArray (attribName, size, type, stride, offset) {\r\n    this.getGL().enableVertexAttribArray(this.getAttributeLocation(attribName));\r\n    this.getGL().vertexAttribPointer(this.getAttributeLocation(attribName), size, type,\r\n      false, stride, offset);\r\n  };\r\n\r\n  /**\r\n   * WebGL context was lost\r\n   * @private\r\n   */\r\n  WebGLHelper.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\r\n    clear(this.bufferCache_);\r\n    clear(this.shaderCache_);\r\n    clear(this.programCache_);\r\n    this.currentProgram_ = null;\r\n  };\r\n\r\n  /**\r\n   * WebGL context was restored\r\n   * @private\r\n   */\r\n  WebGLHelper.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\r\n  };\r\n\r\n  // TODO: shutdown program\r\n\r\n  /**\r\n   * TODO: these are not used and should be reworked\r\n   * @param {number=} opt_wrapS wrapS.\r\n   * @param {number=} opt_wrapT wrapT.\r\n   * @return {WebGLTexture} The texture.\r\n   */\r\n  WebGLHelper.prototype.createTextureInternal = function createTextureInternal (opt_wrapS, opt_wrapT) {\r\n    var gl = this.getGL();\r\n    var texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n    if (opt_wrapS !== undefined) {\r\n      gl.texParameteri(\r\n        TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\r\n    }\r\n    if (opt_wrapT !== undefined) {\r\n      gl.texParameteri(\r\n        TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\r\n    }\r\n\r\n    return texture;\r\n  };\r\n\r\n  /**\r\n   * TODO: these are not used and should be reworked\r\n   * @param {number} width Width.\r\n   * @param {number} height Height.\r\n   * @param {number=} opt_wrapS wrapS.\r\n   * @param {number=} opt_wrapT wrapT.\r\n   * @return {WebGLTexture} The texture.\r\n   */\r\n  WebGLHelper.prototype.createEmptyTexture = function createEmptyTexture (width, height, opt_wrapS, opt_wrapT) {\r\n    var gl = this.getGL();\r\n    var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n    return texture;\r\n  };\r\n\r\n\r\n  /**\r\n   * TODO: these are not used and should be reworked\r\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\r\n   * @param {number=} opt_wrapS wrapS.\r\n   * @param {number=} opt_wrapT wrapT.\r\n   * @return {WebGLTexture} The texture.\r\n   */\r\n  WebGLHelper.prototype.createTexture = function createTexture (image, opt_wrapS, opt_wrapT) {\r\n    var gl = this.getGL();\r\n    var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\r\n    return texture;\r\n  };\n\n  return WebGLHelper;\n}(Disposable));\r\n\r\nexport default WebGLHelper;\r\n\r\n//# sourceMappingURL=Helper.js.map","/**\r\n * @module ol/renderer/webgl/PointsLayer\r\n */\r\nimport LayerRenderer from '../Layer';\r\nimport WebGLArrayBuffer from '../../webgl/Buffer';\r\nimport {DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT} from '../../webgl';\r\nimport WebGLHelper, {DefaultAttrib, DefaultUniform} from '../../webgl/Helper';\r\nimport WebGLVertex from '../../webgl/Vertex';\r\nimport WebGLFragment from '../../webgl/Fragment';\r\nimport GeometryType from '../../geom/GeometryType';\r\n\r\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n  }\";\r\n\r\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  uniform float u_opacity;\\n  \\n  varying vec2 v_texCoord;\\n  \\n  void main(void) {\\n    gl_FragColor.rgb = vec3(1.0, 1.0, 1.0);\\n    float alpha = u_opacity;\\n    if (alpha == 0.0) {\\n      discard;\\n    }\\n    gl_FragColor.a = alpha;\\n  }\";\r\n\r\n/**\r\n * @typedef {Object} PostProcessesOptions\r\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\r\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\r\n * source to compute the size of the quad on screen (in pixels). This only done on source change.\r\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\r\n * source to compute the coordinate of the quad center on screen (in pixels). This only done on source change.\r\n * The second argument is 0 for `x` component and 1 for `y`.\r\n * @property {string} [vertexShader] Vertex shader source\r\n * @property {string} [fragmentShader] Fragment shader source\r\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\r\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * WebGL vector renderer optimized for points.\r\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\r\n * every time the vector source changes.\r\n *\r\n * Use shaders to customize the final output.\r\n *\r\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\r\n *\r\n * Default shaders are shown hereafter:\r\n *\r\n * * Vertex shader:\r\n *   ```\r\n *   precision mediump float;\r\n *   attribute vec2 a_position;\r\n *   attribute vec2 a_texCoord;\r\n *   attribute float a_rotateWithView;\r\n *   attribute vec2 a_offsets;\r\n *\r\n *   uniform mat4 u_projectionMatrix;\r\n *   uniform mat4 u_offsetScaleMatrix;\r\n *   uniform mat4 u_offsetRotateMatrix;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *\r\n *   void main(void) {\r\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\r\n *     if (a_rotateWithView == 1.0) {\r\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\r\n *     }\r\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\r\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\r\n *     v_texCoord = a_texCoord;\r\n *   }\r\n *   ```\r\n *\r\n * * Fragment shader:\r\n *   ```\r\n *   precision mediump float;\r\n *   uniform float u_opacity;\r\n *\r\n *   varying vec2 v_texCoord;\r\n *\r\n *   void main(void) {\r\n *     gl_FragColor.rgb = vec3(1.0, 1.0, 1.0);\r\n *     float alpha = u_opacity;\r\n *     if (alpha == 0.0) {\r\n *       discard;\r\n *     }\r\n *     gl_FragColor.a = alpha;\r\n *   }\r\n *   ```\r\n *\r\n * @api\r\n */\r\nvar WebGLPointsLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\r\n    LayerRenderer.call(this, vectorLayer);\r\n\r\n    var options = opt_options || {};\r\n\r\n    this.context_ = new WebGLHelper({\r\n      postProcesses: options.postProcesses,\r\n      uniforms: options.uniforms\r\n    });\r\n\r\n    this.sourceRevision_ = -1;\r\n\r\n    this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n    this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\r\n\r\n    var vertexShader = new WebGLVertex(options.vertexShader || VERTEX_SHADER);\r\n    var fragmentShader = new WebGLFragment(options.fragmentShader || FRAGMENT_SHADER);\r\n    this.program_ = this.context_.getProgram(fragmentShader, vertexShader);\r\n    this.context_.useProgram(this.program_);\r\n\r\n    this.sizeCallback_ = options.sizeCallback || function(feature) {\r\n      return 1;\r\n    };\r\n    this.coordCallback_ = options.coordCallback || function(feature, index) {\r\n      var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\r\n      return geom.getCoordinates()[index];\r\n    };\r\n  }\n\n  if ( LayerRenderer ) WebGLPointsLayerRenderer.__proto__ = LayerRenderer;\n  WebGLPointsLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLPointsLayerRenderer.prototype.constructor = WebGLPointsLayerRenderer;\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPointsLayerRenderer.prototype.disposeInternal = function disposeInternal () {\r\n    LayerRenderer.prototype.disposeInternal.call(this);\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPointsLayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\r\n    this.context_.setUniformFloatValue(DefaultUniform.OPACITY, layerState.opacity);\r\n    this.context_.drawElements(0, this.indicesBuffer_.getArray().length);\r\n    this.context_.finalizeDraw(frameState);\r\n    return this.context_.getCanvas();\r\n  };\r\n\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  WebGLPointsLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState) {\n    var this$1 = this;\n\r\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\r\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\r\n\r\n    this.context_.prepareDraw(frameState);\r\n\r\n    if (this.sourceRevision_ < vectorSource.getRevision()) {\r\n      this.sourceRevision_ = vectorSource.getRevision();\r\n\r\n      var viewState = frameState.viewState;\r\n      var projection = viewState.projection;\r\n      var resolution = viewState.resolution;\r\n\r\n      // loop on features to fill the buffer\r\n      vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\r\n      vectorSource.forEachFeature(function (feature) {\r\n        if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\r\n          return;\r\n        }\r\n        var x = this$1.coordCallback_(feature, 0);\r\n        var y = this$1.coordCallback_(feature, 1);\r\n        var size = this$1.sizeCallback_(feature);\r\n        var stride = 6;\r\n        var baseIndex = this$1.verticesBuffer_.getArray().length / stride;\r\n\r\n        this$1.verticesBuffer_.getArray().push(\r\n          x, y, -size / 2, -size / 2, 0, 0,\r\n          x, y, +size / 2, -size / 2, 1, 0,\r\n          x, y, +size / 2, +size / 2, 1, 1,\r\n          x, y, -size / 2, +size / 2, 0, 1\r\n        );\r\n        this$1.indicesBuffer_.getArray().push(\r\n          baseIndex, baseIndex + 1, baseIndex + 3,\r\n          baseIndex + 1, baseIndex + 2, baseIndex + 3\r\n        );\r\n      });\r\n    }\r\n\r\n    // write new data\r\n    this.context_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\r\n    this.context_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\r\n\r\n    var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\r\n    this.context_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\r\n    this.context_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\r\n    this.context_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\r\n\r\n    return true;\r\n  };\n\n  return WebGLPointsLayerRenderer;\n}(LayerRenderer));\r\n\r\nexport default WebGLPointsLayerRenderer;\r\n\r\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\r\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\r\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\r\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\r\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\r\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\r\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\r\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n\r\n//# sourceMappingURL=tilelayershader.js.map","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\r\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileSource from '../../source/Tile.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {fragment, vertex} from './tilelayershader.js';\nimport Locations from './tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nvar WebGLTileLayerRenderer = /*@__PURE__*/(function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Fragment.js\").default}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Vertex.js\").default}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {import(\"./tilelayershader/Locations.js\").default}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../webgl/Buffer.js\").default}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    var mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var mapRenderer = this.mapRenderer;\n    var gl = context.getGL();\n\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = tileLayer.getSource();\n    if (!(tileSource instanceof TileSource)) {\n      return true;\n    }\n\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewState.resolution);\n    var tileResolution = tileGrid.getResolution(z);\n\n    var tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    var pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    var tilePixelResolution = tileResolution / pixelRatio;\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\n\n    var center = viewState.center;\n    var extent = frameState.extent;\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    var framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      var tileRangeSize = tileRange.getSize();\n\n      var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      var origin = tileGrid.getOrigin(z);\n      var minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      var minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n       */\n      var tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      var allTilesLoaded = true;\n      var tmpExtent = createEmpty();\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\n      var x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      var u_tileOffset = new Float32Array(4);\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (var tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n\n          if (!(tile instanceof ImageTile)) {\n            continue;\n          }\n\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {import(\"../../Tile.js\").default} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    var texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    var pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    var pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    var pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    var gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    var imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLTileLayerRenderer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Tile.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n\r\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nvar WebGLVectorLayerRenderer = /*@__PURE__*/(function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/webgl/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?import(\"../../layer/Layer.js\").State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    this.layerState_ = layerState;\n    var viewState = frameState.viewState;\n    var replayGroup = this.replayGroup_;\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    var gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      var context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layer = this.getLayer();\n      var layerState = this.layerState_;\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    var replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {WebGLVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of\n   *     styles.\n   * @param {import(\"../../render/webgl/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {WebGLVectorLayerRenderer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {import(\"./Map.js\").default} */ (mapRenderer),\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n\r\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\r\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\r\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\r\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\r\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\r\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\r\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\r\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\r\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /*@__PURE__*/(function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\r\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\r\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /*@__PURE__*/(function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\r\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /*@__PURE__*/(function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {Point} */ (feature.getGeometry());\n      assert(geometry.getType() == GeometryType.POINT,\n        10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        var geometry = this.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor);\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.features.push(this.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\r\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /*@__PURE__*/(function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\r\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /*@__PURE__*/(function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @api\n */\nvar ImageSource = /*@__PURE__*/(function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n\nexport default ImageSource;\n\r\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = /*@__PURE__*/(function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\r\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\r\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /*@__PURE__*/(function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\r\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from './Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /*@__PURE__*/(function (ImageSource) {\n  function ImageCanvasSource(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {import(\"../ImageCanvas.js\").default}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_.call(\n      this, extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\r\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /*@__PURE__*/(function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\r\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /*@__PURE__*/(function (ImageSource) {\n  function Static(options) {\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function getImageExtent () {\n    return this.imageExtent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\r\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\r\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\r\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = /*@__PURE__*/(function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\r\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\r\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/Raster\n */\nimport {getUid} from '../util.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from './Image.js';\nimport SourceState from './State.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /*@__PURE__*/(function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires ol/source/Raster~RasterSourceEvent\n * @api\n */\nvar RasterSource = /*@__PURE__*/(function (ImageSource) {\n  function RasterSource(options) {\n    ImageSource.call(this, {\n      projection: null\n    });\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../renderer/canvas/Layer.js\").default>}\n     */\n    this.renderers_ = createRenderers(options.sources);\n\n    for (var r = 0, rr = this.renderers_.length; r < rr; ++r) {\n      listen(this.renderers_[r], EventType.CHANGE,\n        this.changed, this);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(\n      function() {\n        return 1;\n      },\n      this.changed.bind(this));\n\n    var layerStatesArray = getLayerStatesArray(this.renderers_);\n\n    /**\n     * @type {Object<string, import(\"../layer/Layer.js\").State>}\n     */\n    var layerStates = {};\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.renderers_.length; i < ii; ++i) {\n      source = this.renderers_[i].getLayer().getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var frameState = this.requestedFrameState_;\n    var len = this.renderers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(\n        this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {import(\"../renderer/canvas/Layer.js\").default} renderer Layer renderer.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array<import(\"../renderer/canvas/Layer.js\").default>} renderers Layer renderers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../renderer/canvas/Layer.js\").default>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  var len = sources.length;\n  var renderers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createRenderer(layerOrSource) {\n  var tileSource = /** @type {import(\"./Tile.js\").default} */ (layerOrSource);\n  var imageSource = /** @type {import(\"./Image.js\").default} */ (layerOrSource);\n  var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerOrSource);\n  var renderer = null;\n  if (typeof tileSource.getTile === 'function') {\n    renderer = createTileRenderer(tileSource);\n  } else if (typeof imageSource.getImage === 'function') {\n    renderer = createImageRenderer(imageSource);\n  } else if (layer.getType() === LayerType.TILE) {\n    renderer = new CanvasTileLayerRenderer(/** @type {import(\"../layer/Tile.js\").default} */ (layer));\n  } else if (layer.getType() == LayerType.IMAGE || layer.getType() == LayerType.VECTOR) {\n    renderer = new CanvasImageLayerRenderer(/** @type {import(\"../layer/Image.js\").default} */ (layer));\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {import(\"./Image.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createImageRenderer(source) {\n  var layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {import(\"./Tile.js\").default} source The source.\n * @return {import(\"../renderer/canvas/Layer.js\").default} The renderer.\n */\nfunction createTileRenderer(source) {\n  var layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\nexport default RasterSource;\n\r\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /*@__PURE__*/(function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\r\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n * for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /*@__PURE__*/(function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  var baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n\r\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = /*@__PURE__*/(function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'black';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'black';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /*@__PURE__*/(function (TileSource) {\n  function TileDebug(options) {\n\n    TileSource.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( TileSource ) TileDebug.__proto__ = TileSource;\n  TileDebug.prototype = Object.create( TileSource && TileSource.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text = !textTileCoord ? '' :\n        this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(TileSource));\n\n\nexport default TileDebug;\n\r\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /*@__PURE__*/(function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\r\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /*@__PURE__*/(function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n\r\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport var CustomTile = /*@__PURE__*/(function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    return null;\n  };\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  CustomTile.prototype.getData = function getData (coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    var xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    var yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    var data = null;\n    if (code in this.keys_) {\n      var id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *)} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.handleError_ = function handleError_ () {\n    this.state = TileState.ERROR;\n    this.changed();\n  };\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleError_();\n  };\n\n\n  /**\n   * @override\n   */\n  CustomTile.prototype.load = function load () {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  };\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /*@__PURE__*/(function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  UTFGrid.prototype.getTemplate = function getTemplate () {\n    return this.template_;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*)} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      var tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  };\n\n\n  /**\n   * @protected\n   */\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    var grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      var tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UTFGrid;\n}(TileSource));\n\n\nexport default UTFGrid;\n\r\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = /*@__PURE__*/(function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this.tileKeys[i];\n      var sourceTile = this.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {import(\"./VectorTile.js\").default} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this.getTile(this.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"./VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\r\n//# sourceMappingURL=VectorImageTile.js.map","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {import(\"./extent.js\").Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\nvar VectorTile = /*@__PURE__*/(function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"./render/ReplayGroup.js\").default>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {import(\"./proj/Projection.js\").default} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @return {import(\"./render/ReplayGroup.js\").default} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {import(\"./extent.js\").Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @param {string} key Key.\n   * @param {import(\"./render/ReplayGroup.js\").default} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\r\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   }\n * });\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /*@__PURE__*/(function (UrlTile) {\n  function VectorTile(options) {\n    var projection = options.projection || 'EPSG:3857';\n\n    var extent = options.extent || extentFromProjection(projection);\n\n    var tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n       * @private\n       * @type {Object<string, Tile>}\n       */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  if ( UrlTile ) VectorTile.__proto__ = UrlTile;\n  VectorTile.prototype = Object.create( UrlTile && UrlTile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorTile.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  VectorTile.prototype.clear = function clear () {\n    this.tileCache.clear();\n    this.sourceTiles_ = {};\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord, projection);\n      var tile = new VectorImageTile(\n        tileCoord,\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n        this.getRevision(),\n        this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n        this.tileGrid, this.getTileGridForProjection(projection),\n        this.sourceTiles_, pixelRatio, projection, this.tileClass,\n        this.handleTileChange.bind(this), tileCoord[0]);\n\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTileGridForProjection = function getTileGridForProjection (projection) {\n    var code = projection.getCode();\n    var tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      var sourceTileGrid = this.tileGrid;\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n    }\n    return tileGrid;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return pixelRatio;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  };\n\n  return VectorTile;\n}(UrlTile));\n\n\nexport default VectorTile;\n\r\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\r\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\r\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\r\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = /*@__PURE__*/(function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    var image = ImageTile.prototype.getImage.call(this);\n    if (this.state == TileState.LOADED) {\n      var tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  };\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /*@__PURE__*/(function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = -tileCoord[2] - 1;\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\r\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar WebGLMap = /*@__PURE__*/(function (PluggableMap) {\n  function WebGLMap(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\n\n  WebGLMap.prototype.createRenderer = function createRenderer () {\n    var renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return WebGLMap;\n}(PluggableMap));\n\n\nexport default WebGLMap;\n\r\n//# sourceMappingURL=WebGLMap.js.map","import {stableSort as _ol_array$stableSort} from './ol/array';\nimport $ol$Collection from './ol/Collection';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport {defaults as _ol_control$defaults} from './ol/control';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport $ol$Feature from './ol/Feature';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$Graticule from './ol/Graticule';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$Map from './ol/renderer/canvas/Map';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$renderer$webgl$ImageLayer from './ol/renderer/webgl/ImageLayer';\nimport $ol$renderer$webgl$Map from './ol/renderer/webgl/Map';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$webgl$TileLayer from './ol/renderer/webgl/TileLayer';\nimport $ol$renderer$webgl$VectorLayer from './ol/renderer/webgl/VectorLayer';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport $ol$style$AtlasManager from './ol/style/AtlasManager';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {inherits as _ol$inherits} from './ol';\nimport {getUid as _ol$getUid} from './ol';\nimport $ol$View from './ol/View';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$WebGLMap from './ol/WebGLMap';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Graticule = $ol$Graticule;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.WebGLMap = $ol$WebGLMap;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.inherits = _ol$inherits;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.toContext = _ol_render$toContext;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.Map = $ol$renderer$canvas$Map;\nol.renderer.canvas.Map = $ol$renderer$canvas$Map;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.ImageLayer = $ol$renderer$webgl$ImageLayer;\nol.renderer.webgl.Map = $ol$renderer$webgl$Map;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.renderer.webgl.TileLayer = $ol$renderer$webgl$TileLayer;\nol.renderer.webgl.VectorLayer = $ol$renderer$webgl$VectorLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.AtlasManager = $ol$style$AtlasManager;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\r\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  var canvas = context.canvas;\n  var options = opt_options ? opt_options : {};\n  var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  var size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  var extent = [0, 0, canvas.width, canvas.height];\n  var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\r\n//# sourceMappingURL=render.js.map"],"sourceRoot":""}